{"ast":null,"code":"var _jsxFileName = \"/Users/mac/Desktop/Nako/nako/src/desktop/lobby/lobby.tsx\";\nimport React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { CSSTransition } from \"react-transition-group\";\nimport { animate, delay } from \"../../utils\";\nimport styles from \"./lobby.module.scss\";\nimport Logo from \"../../modules/logo/logo\";\nimport GameStartCountdown from \"./game-start-countdown\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nvar ProgressPhase;\n\n(function (ProgressPhase) {\n  ProgressPhase[ProgressPhase[\"Name\"] = 0] = \"Name\";\n  ProgressPhase[ProgressPhase[\"LobbyID\"] = 1] = \"LobbyID\";\n  ProgressPhase[ProgressPhase[\"Lobby\"] = 2] = \"Lobby\";\n  ProgressPhase[ProgressPhase[\"Starting\"] = 3] = \"Starting\";\n  ProgressPhase[ProgressPhase[\"Ended\"] = 4] = \"Ended\";\n})(ProgressPhase || (ProgressPhase = {}));\n\nvar ErrorMessage;\n\n(function (ErrorMessage) {\n  ErrorMessage[\"Generic\"] = \"An error occurred while your request was being processed.\";\n  ErrorMessage[\"TimedOut\"] = \"Your request was timed out. Please try again.\";\n  ErrorMessage[\"MissingLobby\"] = \"The provided lobby ID does not exist.\";\n})(ErrorMessage || (ErrorMessage = {}));\n\nclass Lobby extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      name: \"\",\n      lobbyIDInput: \"\",\n      currentProgress: ProgressPhase.Name,\n      inputParams: [{\n        className: \"box-shadow\",\n        type: \"text\",\n        placeholder: \"Enter name...\",\n        onChange: e => this.setState({\n          name: e.target.value\n        })\n      }, {\n        className: \"box-shadow hide-number-buttons\",\n        type: \"number\",\n        placeholder: \"Enter game ID\",\n        onChange: e => this.setState({\n          lobbyIDInput: e.target.value\n        })\n      }],\n      inputRef: /*#__PURE__*/React.createRef(),\n      inputTransitioning: false,\n      error: {\n        occurred: false,\n        message: ErrorMessage.Generic\n      },\n      transitionedToLobby: false\n    };\n    this.props.connection.subscribe(\"req\", \"keep_alive\", () => this.props.connection.send({\n      method: \"res\",\n      type: \"keep_alive\",\n      payload: {\n        name: this.state.name,\n        lobbyID: this.state.lobbyInfo.id\n      }\n    }));\n  }\n\n  lobbyNotFoundHandler(error) {\n    console.log(error);\n  }\n\n  async onFormSubmitHandler(e, ms) {\n    e.preventDefault();\n    this.setState({\n      error: { ...this.state.error,\n        occurred: false\n      }\n    });\n\n    const triggerNextProgressPhase = () => {\n      if (this.state.currentProgress < ProgressPhase.Ended) {\n        this.setState({\n          currentProgress: this.state.currentProgress + 1\n        });\n      }\n    };\n\n    const invalidAnimation = () => {\n      animate(\"shake\", this.state.inputRef.current, 500);\n    };\n\n    const triggerDelay = async () => {\n      if (ms) {\n        this.setState({\n          inputTransitioning: true\n        });\n        await delay(ms);\n        this.setState({\n          inputTransitioning: false\n        });\n      }\n    };\n\n    switch (this.state.currentProgress) {\n      case ProgressPhase.Name:\n        if (this.state.name !== \"\") {\n          await triggerDelay();\n          triggerNextProgressPhase();\n        } else {\n          invalidAnimation();\n        }\n\n        break;\n\n      case ProgressPhase.LobbyID:\n        if (this.state.lobbyIDInput !== \"\") {\n          this.props.connection.send({\n            method: \"req\",\n            type: \"lobby_join\",\n            payload: {\n              lobbyID: Number(this.state.lobbyIDInput),\n              name: this.state.name\n            }\n          }, 10000).then(async res => {\n            if (res) {\n              if (res.lobbyInfo) {\n                this.setState({\n                  lobbyInfo: res.lobbyInfo\n                });\n                this.props.connection.subscribe(\"res\", \"lobby_update\", msg => {\n                  this.setState({\n                    lobbyInfo: msg.lobbyInfo\n                  });\n                });\n                this.props.connection.subscribe(\"req\", \"game_start\").then(msg => {\n                  this.setState({\n                    gameInfo: msg.gameInfo\n                  });\n                  this.props.connection.send({\n                    method: \"res\",\n                    type: \"game_start\",\n                    payload: null\n                  });\n                  triggerNextProgressPhase();\n                });\n                await triggerDelay();\n                triggerNextProgressPhase();\n              } else {\n                this.setState({\n                  error: {\n                    occurred: true,\n                    message: ErrorMessage.MissingLobby\n                  }\n                });\n                console.log(res.error);\n              }\n            } else {\n              this.setState({\n                error: {\n                  occurred: true,\n                  message: ErrorMessage.TimedOut\n                }\n              });\n            }\n          }).catch(e => {\n            console.log(e);\n            this.setState({\n              error: {\n                occurred: true,\n                message: ErrorMessage.Generic\n              }\n            });\n          });\n        } else {\n          invalidAnimation();\n        }\n\n        break;\n\n      default:\n        break;\n    }\n  }\n\n  render() {\n    const {\n      connection,\n      onGameStart,\n      ...rest\n    } = this.props;\n    return /*#__PURE__*/_jsxDEV(\"div\", { ...rest,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles[\"lobby-container\"],\n        children: [/*#__PURE__*/_jsxDEV(Link, {\n          to: \"/\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            id: styles.back,\n            className: \"box-shadow\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: styles[\"arrow-left\"]\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 187,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"Back\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 188,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 186,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          style: {\n            position: \"absolute\",\n            zIndex: 1,\n            bottom: 0,\n            right: 0\n          },\n          onClick: () => this.setState({\n            lobbyInfo: this.state.lobbyInfo ? undefined : {\n              id: 0,\n              players: [this.state.name, \"Test1\", \"Test2\", \"Test3\", \"Test4\", \"Test5\", \"Test6\", \"Test7\", \"Test8\", \"Test9\", \"Test10\", \"Test11\", \"Test12\"]\n            },\n            currentProgress: this.state.currentProgress === ProgressPhase.Lobby ? ProgressPhase.Name : ProgressPhase.Lobby\n          }),\n          children: \"Test\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(CSSTransition, {\n          in: this.state.lobbyInfo !== undefined,\n          timeout: 500,\n          classNames: {\n            enter: styles[\"background-top-enter\"],\n            enterActive: styles[\"background-top-enter-active\"],\n            enterDone: styles[\"background-top-enter-done\"],\n            exit: styles[\"background-top-exit\"],\n            exitActive: styles[\"background-top-exit-active\"],\n            exitDone: styles[\"background-top-exit-done\"]\n          },\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            id: this.state.transitionedToLobby ? styles.background : styles[\"background-top\"],\n            children: [/*#__PURE__*/_jsxDEV(CSSTransition, {\n              in: this.state.lobbyInfo === undefined,\n              timeout: 500,\n              classNames: {\n                enter: styles[\"title-container-enter\"],\n                enterActive: styles[\"title-container-enter-active\"],\n                enterDone: styles[\"title-container-enter-done\"],\n                exit: styles[\"title-container-exit\"],\n                exitActive: styles[\"title-container-exit-active\"],\n                exitDone: styles[\"title-container-exit-done\"]\n              },\n              onExited: () => this.setState({\n                transitionedToLobby: true\n              }),\n              mountOnEnter: true,\n              unmountOnExit: true,\n              children: /*#__PURE__*/_jsxDEV(Logo, {\n                id: styles[\"title-container\"],\n                role: \"student\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 229,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 216,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(CSSTransition, {\n              in: this.state.transitionedToLobby && this.state.lobbyInfo !== undefined,\n              timeout: 500,\n              classNames: {\n                enter: styles[\"lobby-info-container-enter\"],\n                enterActive: styles[\"lobby-info-container-enter-active\"],\n                enterDone: styles[\"lobby-info-container-enter-done\"],\n                exit: styles[\"lobby-info-container-exit\"],\n                exitActive: styles[\"lobby-info-container-exit-active\"],\n                exitDone: styles[\"lobby-info-container-exit-done\"]\n              },\n              onExit: () => this.setState({\n                transitionedToLobby: false\n              }),\n              mountOnEnter: true,\n              unmountOnExit: true,\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                id: styles[\"lobby-info-container\"],\n                children: this.state.currentProgress !== ProgressPhase.Starting ? /*#__PURE__*/_jsxDEV(_Fragment, {\n                  children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                    children: \"You are playing with:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 248,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    id: styles[\"player-list\"],\n                    children: this.state.lobbyInfo !== undefined ? this.state.lobbyInfo.players.map((player, i) => /*#__PURE__*/_jsxDEV(\"p\", {\n                      children: player\n                    }, i, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 250,\n                      columnNumber: 112\n                    }, this)) : null\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 249,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true) : /*#__PURE__*/_jsxDEV(GameStartCountdown, {\n                  onCountdownEnd: () => {\n                    if (this.state.gameInfo) {\n                      console.log(\"Game starting\");\n                      this.props.onGameStart(this.state.gameInfo);\n                    } else {\n                      throw new Error(\"Game start was triggered but game info was missing.\");\n                    }\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 253,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 245,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 231,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 215,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(CSSTransition, {\n          in: this.state.lobbyInfo === undefined,\n          timeout: 500,\n          classNames: {\n            enter: styles[\"background-bottom-enter\"],\n            enterActive: styles[\"background-bottom-enter-active\"],\n            enterDone: styles[\"background-bottom-enter-done\"],\n            exit: styles[\"background-bottom-exit\"],\n            exitActive: styles[\"background-bottom-exit-active\"],\n            exitDone: styles[\"background-bottom-exit-done\"]\n          },\n          unmountOnExit: true,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            id: styles[\"background-bottom\"],\n            className: \"box-shadow-inner\",\n            children: /*#__PURE__*/_jsxDEV(\"form\", {\n              id: styles[\"input-container\"],\n              onSubmit: e => this.onFormSubmitHandler(e, 600),\n              children: [/*#__PURE__*/_jsxDEV(CSSTransition, {\n                in: !this.state.inputTransitioning,\n                timeout: 500,\n                classNames: \"fade-rtl\",\n                children: /*#__PURE__*/_jsxDEV(\"input\", {\n                  ref: this.state.inputRef,\n                  id: styles.input,\n                  ...this.state.inputParams[this.state.currentProgress]\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 284,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 283,\n                columnNumber: 17\n              }, this), this.state.error.occurred ? /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"error\",\n                children: this.state.error.message\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 290,\n                columnNumber: 46\n              }, this) : null, /*#__PURE__*/_jsxDEV(\"button\", {\n                id: styles.submit,\n                className: \"box-shadow\",\n                type: \"submit\",\n                children: \"Enter\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 291,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 282,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 281,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 268,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default Lobby;","map":{"version":3,"sources":["/Users/mac/Desktop/Nako/nako/src/desktop/lobby/lobby.tsx"],"names":["React","Link","CSSTransition","animate","delay","styles","Logo","GameStartCountdown","ProgressPhase","ErrorMessage","Lobby","Component","constructor","props","state","name","lobbyIDInput","currentProgress","Name","inputParams","className","type","placeholder","onChange","e","setState","target","value","inputRef","createRef","inputTransitioning","error","occurred","message","Generic","transitionedToLobby","connection","subscribe","send","method","payload","lobbyID","lobbyInfo","id","lobbyNotFoundHandler","console","log","onFormSubmitHandler","ms","preventDefault","triggerNextProgressPhase","Ended","invalidAnimation","current","triggerDelay","LobbyID","Number","then","res","msg","gameInfo","MissingLobby","TimedOut","catch","render","onGameStart","rest","back","position","zIndex","bottom","right","undefined","players","enter","enterActive","enterDone","exit","exitActive","exitDone","background","Starting","map","player","i","Error","input","submit"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { CSSTransition } from \"react-transition-group\";\nimport { animate, delay } from \"../../utils\";\nimport styles from \"./lobby.module.scss\";\nimport NakoAPI, { GameInfo, LobbyInfo } from \"../../modules/websocket-messages\";\nimport Logo from \"../../modules/logo/logo\";\nimport GameStartCountdown from \"./game-start-countdown\";\n\nenum ProgressPhase {\n  Name,\n  LobbyID,\n  Lobby,\n  Starting,\n  Ended\n}\n\nenum ErrorMessage {\n  Generic = \"An error occurred while your request was being processed.\",\n  TimedOut = \"Your request was timed out. Please try again.\",\n  MissingLobby = \"The provided lobby ID does not exist.\"\n}\n\ninterface LobbyProps {\n  connection: NakoAPI;\n  onGameStart: (gameInfo: GameInfo) => void;\n}\n\ninterface LobbyStates {\n  name: string;\n  lobbyIDInput: string;\n  currentProgress: ProgressPhase;\n  inputParams: React.InputHTMLAttributes<HTMLInputElement>[];\n  inputRef: React.RefObject<HTMLInputElement>;\n  inputTransitioning: boolean;\n  error: {\n    occurred: boolean;\n    message: ErrorMessage;\n  };\n  transitionedToLobby: boolean;\n  lobbyInfo?: LobbyInfo;\n  gameInfo?: GameInfo;\n}\n\nclass Lobby extends React.Component<LobbyProps & React.HTMLAttributes<HTMLDivElement>, LobbyStates> {\n  constructor(props: LobbyProps & React.HTMLAttributes<HTMLDivElement>) {\n    super(props);\n\n    this.state = {\n      name: \"\",\n      lobbyIDInput: \"\",\n      currentProgress: ProgressPhase.Name,\n      inputParams: [{\n        className: \"box-shadow\",\n        type: \"text\",\n        placeholder: \"Enter name...\",\n        onChange: e => this.setState({ name: e.target.value })\n      }, {\n        className: \"box-shadow hide-number-buttons\",\n        type: \"number\",\n        placeholder: \"Enter game ID\",\n        onChange: e => this.setState({ lobbyIDInput: e.target.value })\n      }],\n      inputRef: React.createRef<HTMLInputElement>(),\n      inputTransitioning: false,\n      error: {\n        occurred: false,\n        message: ErrorMessage.Generic\n      },\n      transitionedToLobby: false\n    };\n\n    this.props.connection.subscribe(\"req\", \"keep_alive\", () => this.props.connection.send({\n      method: \"res\",\n      type: \"keep_alive\",\n      payload: {\n        name: this.state.name,\n        lobbyID: this.state.lobbyInfo!.id\n      }\n    }));\n  }\n\n  lobbyNotFoundHandler(error: string) {\n    console.log(error);\n  }\n\n  async onFormSubmitHandler(e: React.FormEvent<HTMLFormElement>, ms?: number) {\n    e.preventDefault();\n    this.setState({ error: { ...this.state.error, occurred: false } });\n\n    const triggerNextProgressPhase = () => {\n      if (this.state.currentProgress < ProgressPhase.Ended) {\n        this.setState({ currentProgress: this.state.currentProgress + 1 });\n      }\n    };\n\n    const invalidAnimation = () => {\n      animate(\"shake\", this.state.inputRef.current!, 500);\n    };\n\n    const triggerDelay = async () => {\n      if (ms) {\n        this.setState({\n          inputTransitioning: true\n        });\n\n        await delay(ms);\n\n        this.setState({\n          inputTransitioning: false\n        });\n      }\n    };\n\n    switch (this.state.currentProgress) {\n      case ProgressPhase.Name:\n        if (this.state.name !== \"\") {\n          await triggerDelay();\n          triggerNextProgressPhase();\n        } else {\n          invalidAnimation();\n        }\n\n        break;\n      \n      case ProgressPhase.LobbyID:\n        if (this.state.lobbyIDInput !== \"\") {\n          this.props.connection.send({\n            method: \"req\",\n            type: \"lobby_join\",\n            payload: {\n              lobbyID: Number(this.state.lobbyIDInput),\n              name: this.state.name\n            }\n          }, 10000).then(async res => {\n            if (res) {\n              if (res.lobbyInfo) {\n                this.setState({ lobbyInfo: res.lobbyInfo });\n\n                this.props.connection.subscribe(\"res\", \"lobby_update\", msg => {\n                  this.setState({ lobbyInfo: msg.lobbyInfo });\n                });\n\n                this.props.connection.subscribe(\"req\", \"game_start\").then(msg => {\n                  this.setState({ gameInfo: msg.gameInfo });\n\n                  this.props.connection.send({\n                    method: \"res\",\n                    type: \"game_start\",\n                    payload: null\n                  });\n\n                  triggerNextProgressPhase();\n                });\n\n                await triggerDelay();\n                triggerNextProgressPhase();\n              } else {\n                this.setState({ error: { occurred: true, message: ErrorMessage.MissingLobby } });\n                console.log(res.error);\n              }\n            } else {\n              this.setState({ error: { occurred: true, message: ErrorMessage.TimedOut } });\n            }\n          }).catch(e => {\n            console.log(e);\n            this.setState({ error: { occurred: true, message: ErrorMessage.Generic } });\n          });\n        } else {\n          invalidAnimation();\n        }\n        break;\n\n      default:\n        break;\n    }\n  }\n  \n  render() {\n    const { connection, onGameStart, ...rest } = this.props;\n\n    return (\n      <div {...rest}>\n        <div className={styles[\"lobby-container\"]}>\n          <Link to=\"/\">\n            <button id={styles.back} className=\"box-shadow\">\n              <span className={styles[\"arrow-left\"]}/>\n              <span>Back</span>\n            </button>\n          </Link>\n          <button\n            style={{position: \"absolute\", zIndex: 1, bottom: 0, right: 0}}\n            onClick={() => this.setState({\n              lobbyInfo: this.state.lobbyInfo ? undefined : {\n                id: 0,\n                players: [this.state.name, \"Test1\", \"Test2\", \"Test3\", \"Test4\", \"Test5\", \"Test6\", \"Test7\", \"Test8\", \"Test9\", \"Test10\", \"Test11\", \"Test12\"]\n              },\n              currentProgress: this.state.currentProgress === ProgressPhase.Lobby ? ProgressPhase.Name : ProgressPhase.Lobby\n            })}\n          >\n            Test\n          </button>\n          <CSSTransition\n            in={this.state.lobbyInfo !== undefined}\n            timeout={500}\n            classNames={{\n              enter: styles[\"background-top-enter\"],\n              enterActive: styles[\"background-top-enter-active\"],\n              enterDone: styles[\"background-top-enter-done\"],\n              exit: styles[\"background-top-exit\"],\n              exitActive: styles[\"background-top-exit-active\"],\n              exitDone: styles[\"background-top-exit-done\"]\n            }}\n          >\n            <div id={this.state.transitionedToLobby ? styles.background : styles[\"background-top\"]}>\n              <CSSTransition\n                in={this.state.lobbyInfo === undefined} timeout={500}\n                classNames={{\n                  enter: styles[\"title-container-enter\"],\n                  enterActive: styles[\"title-container-enter-active\"],\n                  enterDone: styles[\"title-container-enter-done\"],\n                  exit: styles[\"title-container-exit\"],\n                  exitActive: styles[\"title-container-exit-active\"],\n                  exitDone: styles[\"title-container-exit-done\"]\n                }}\n                onExited={() => this.setState({ transitionedToLobby: true })}\n                mountOnEnter unmountOnExit\n              >\n                <Logo id={styles[\"title-container\"]} role=\"student\"/>\n              </CSSTransition>\n              <CSSTransition\n                in={this.state.transitionedToLobby && this.state.lobbyInfo !== undefined}\n                timeout={500}\n                classNames={{\n                  enter: styles[\"lobby-info-container-enter\"],\n                  enterActive: styles[\"lobby-info-container-enter-active\"],\n                  enterDone: styles[\"lobby-info-container-enter-done\"],\n                  exit: styles[\"lobby-info-container-exit\"],\n                  exitActive: styles[\"lobby-info-container-exit-active\"],\n                  exitDone: styles[\"lobby-info-container-exit-done\"]\n                }}\n                onExit={() => this.setState({ transitionedToLobby: false })}\n                mountOnEnter unmountOnExit\n              >\n                <div id={styles[\"lobby-info-container\"]}>\n                  {this.state.currentProgress !== ProgressPhase.Starting ?\n                    <>\n                      <h3>You are playing with:</h3>\n                      <div id={styles[\"player-list\"]}>\n                        {this.state.lobbyInfo !== undefined ? this.state.lobbyInfo!.players.map((player, i) => <p key={i}>{player}</p>) : null}\n                      </div>\n                    </> :\n                    <GameStartCountdown\n                      onCountdownEnd={() => {\n                        if (this.state.gameInfo) {\n                          console.log(\"Game starting\");\n                          this.props.onGameStart(this.state.gameInfo);\n                        } else {\n                          throw new Error(\"Game start was triggered but game info was missing.\");\n                        }\n                      }}\n                    />\n                  }\n                </div>\n              </CSSTransition>\n            </div>\n          </CSSTransition>\n          <CSSTransition\n            in={this.state.lobbyInfo === undefined}\n            timeout={500}\n            classNames={{\n              enter: styles[\"background-bottom-enter\"],\n              enterActive: styles[\"background-bottom-enter-active\"],\n              enterDone: styles[\"background-bottom-enter-done\"],\n              exit: styles[\"background-bottom-exit\"],\n              exitActive: styles[\"background-bottom-exit-active\"],\n              exitDone: styles[\"background-bottom-exit-done\"]\n            }}\n            unmountOnExit\n          >\n            <div id={styles[\"background-bottom\"]} className=\"box-shadow-inner\">\n              <form id={styles[\"input-container\"]} onSubmit={e => this.onFormSubmitHandler(e, 600)}>\n                <CSSTransition in={!this.state.inputTransitioning} timeout={500} classNames=\"fade-rtl\">\n                  <input\n                    ref={this.state.inputRef}\n                    id={styles.input}\n                    {...this.state.inputParams[this.state.currentProgress]}\n                  />\n                </CSSTransition>\n                {this.state.error.occurred ? <p className=\"error\">{this.state.error.message}</p> : null}\n                <button id={styles.submit} className=\"box-shadow\" type=\"submit\">Enter</button>\n              </form>\n            </div>\n          </CSSTransition>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Lobby;"]},"metadata":{},"sourceType":"module"}