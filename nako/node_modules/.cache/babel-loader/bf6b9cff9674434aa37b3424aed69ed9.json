{"ast":null,"code":"var _jsxFileName = \"/Users/mac/Desktop/Nako/nako/src/desktop/game/result.tsx\";\nimport React from \"react\";\nimport CSSTransition from \"react-transition-group/CSSTransition\";\nimport { delay } from \"../../utils/utils\";\nimport styles from \"./result.module.scss\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class Result extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      resultScrollDiv: /*#__PURE__*/React.createRef(),\n      sequentialDisplayCounter: 0\n    };\n\n    if (this.props.in && this.props.data) {\n      this.startSequentialDisplay(this.props.data.length, 200);\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n    if (!prevProps.in && this.props.in) {\n      if (this.props.data) {\n        this.startSequentialDisplay(this.props.data.length, 200);\n      } else {\n        throw new Error(\"In was triggered but no result data was provided.\");\n      }\n    }\n  }\n\n  async startSequentialDisplay(length, ms) {\n    for (let i = 0; i <= length; i++) {\n      this.setState({\n        sequentialDisplayCounter: i\n      });\n      await delay(ms);\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      id: styles.result,\n      className: \"fill-parent\",\n      children: this.props.data ? /*#__PURE__*/_jsxDEV(\"section\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Results\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          ref: this.state.resultScrollDiv,\n          style: this.state.resultScrollDiv.current && this.state.resultScrollDiv.current.scrollHeight - this.state.resultScrollDiv.current.clientHeight ? {\n            paddingRight: \"15px\"\n          } : undefined,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              id: styles[\"rank-header\"],\n              className: \"fill-parent\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"Name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 62,\n                columnNumber: 73\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"Score\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 62,\n                columnNumber: 90\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 15\n          }, this), this.props.data.slice(0, this.state.sequentialDisplayCounter).map((result, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(CSSTransition, {\n              in: true,\n              appear: true,\n              exit: false,\n              timeout: 500,\n              classNames: {\n                appear: styles[\"slide-b2t-appear\"],\n                appearActive: styles[\"slide-b2t-appear-active\"],\n                appearDone: styles[\"slide-b2t-appear-done\"]\n              },\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"fill-parent\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  children: result.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 74,\n                  columnNumber: 50\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: result.score\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 74,\n                  columnNumber: 76\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 74,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 19\n            }, this)\n          }, i, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 17\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"error\",\n        children: \"Failed to retrieve results.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/Users/mac/Desktop/Nako/nako/src/desktop/game/result.tsx"],"names":["React","CSSTransition","delay","styles","Result","Component","constructor","props","state","resultScrollDiv","createRef","sequentialDisplayCounter","in","data","startSequentialDisplay","length","componentDidUpdate","prevProps","Error","ms","i","setState","render","result","current","scrollHeight","clientHeight","paddingRight","undefined","slice","map","appear","appearActive","appearDone","name","score"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport CSSTransition from \"react-transition-group/CSSTransition\";\nimport { GameEndRequest } from \"../../modules/websocket-messages\";\nimport { delay } from \"../../utils/utils\";\nimport styles from \"./result.module.scss\";\n\ninterface ResultProps {\n  in: boolean;\n  data?: GameEndRequest;\n}\n\ninterface ResultState {\n  resultScrollDiv: React.RefObject<HTMLDivElement>;\n  sequentialDisplayCounter: number;\n}\n\nexport default class Result extends React.Component<ResultProps, ResultState> {\n  constructor(props: ResultProps) {\n    super(props);\n\n    this.state = {\n      resultScrollDiv: React.createRef<HTMLDivElement>(),\n      sequentialDisplayCounter: 0\n    };\n\n    if (this.props.in && this.props.data) {\n      this.startSequentialDisplay(this.props.data.length, 200);\n    }\n  }\n\n  componentDidUpdate(prevProps: ResultProps) {\n    if (!prevProps.in && this.props.in) {\n      if (this.props.data) {\n        this.startSequentialDisplay(this.props.data.length, 200);\n      } else {\n        throw new Error(\"In was triggered but no result data was provided.\");\n      }\n    }\n  }\n\n  async startSequentialDisplay(length: number, ms: number) {\n    for (let i = 0; i <= length; i++) {\n      this.setState({ sequentialDisplayCounter: i });\n      await delay(ms);\n    }\n  }\n\n  render() {\n    return (\n      <div id={styles.result} className=\"fill-parent\">\n        {this.props.data ?\n          <section>\n            <h1>Results</h1>\n            <hr/>\n            <div\n              ref={this.state.resultScrollDiv}\n              style={this.state.resultScrollDiv.current && this.state.resultScrollDiv.current.scrollHeight - this.state.resultScrollDiv.current.clientHeight ?\n                { paddingRight: \"15px\" } : undefined\n              }\n            >\n              <div>\n                <div id={styles[\"rank-header\"]} className=\"fill-parent\"><span>Name</span><span>Score</span></div>\n              </div>\n              {this.props.data.slice(0, this.state.sequentialDisplayCounter).map((result, i) =>\n                <div key={i}>\n                  <CSSTransition\n                    in={true} appear={true} exit={false} timeout={500}\n                    classNames={{\n                      appear: styles[\"slide-b2t-appear\"],\n                      appearActive: styles[\"slide-b2t-appear-active\"],\n                      appearDone: styles[\"slide-b2t-appear-done\"]\n                    }}\n                  >\n                    <div className=\"fill-parent\"><span>{result.name}</span><span>{result.score}</span></div>\n                  </CSSTransition>\n                </div>\n              )}\n            </div>\n          </section> :\n          <h1 className=\"error\">Failed to retrieve results.</h1>\n        }\n      </div>\n    );\n  }\n}"]},"metadata":{},"sourceType":"module"}