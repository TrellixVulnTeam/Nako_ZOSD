{"ast":null,"code":"var _jsxFileName = \"/Users/mac/Desktop/Nako/nako/src/desktop/AnsweringMC/answering_MultipleChoice.tsx\";\nimport * as React from \"react\";\nimport style from \"./AnsweringMC.module.scss\";\nimport RoundTimer from \"../RoundTimer/RoundTimer\";\nimport TimerBack from \"./Group_818.svg\";\nimport CorrectSound from \"./Nako Correct.wav\";\nimport WrongSound from \"./Nako Wrong.wav\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Answering_MC extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.Play = music => {\n      let audio = new Audio(music);\n      audio.play();\n    };\n\n    this.normalAnswerStyle = {\n      width: \"45%\",\n      maxHeight: \"50em\",\n      marginTop: \"3%\",\n      flexShrink: 1,\n      flexGrow: 1,\n      color: \"black\",\n      fontSize: \"1.6em\",\n      textAlign: \"center\",\n      padding: \"2%\",\n      borderRadius: \"50px\",\n      border: \"7px solid #4ed02c\",\n      background: \"white\",\n      boxShadow: \"10px 10px 10px rgba(0, 0, 0, 0.45),-10px -10px 10px rgba(255, 255, 255, 0.45)\",\n      transitionDuration: \"0.3s\",\n      outline: \"none\"\n    };\n    this.correctAnswerStyle = {\n      width: \"45%\",\n      maxHeight: \"50em\",\n      marginTop: \"3%\",\n      flexShrink: 1,\n      flexGrow: 1,\n      color: \"black\",\n      fontSize: \"1.6em\",\n      textAlign: \"center\",\n      padding: \"2%\",\n      borderRadius: \"50px\",\n      border: \"7px solid black\",\n      background: \"white\",\n      boxShadow: \"10px 10px 10px rgba(0, 0, 0, 0.45),-10px -10px 10px rgba(255, 255, 255, 0.45)\",\n      transitionDuration: \"0.3s\",\n      outline: \"none\"\n    };\n    this.wrongAnswerStyle = {\n      width: \"45%\",\n      maxHeight: \"50em\",\n      marginTop: \"3%\",\n      flexShrink: 1,\n      flexGrow: 1,\n      color: \"black\",\n      fontSize: \"1.6em\",\n      textAlign: \"center\",\n      padding: \"2%\",\n      borderRadius: \"50px\",\n      border: \"7px solid red\",\n      background: \"white\",\n      boxShadow: \"10px 10px 10px rgba(0, 0, 0, 0.45),-10px -10px 10px rgba(255, 255, 255, 0.45)\",\n      transitionDuration: \"0.3s\",\n      outline: \"none\"\n    };\n    this.state = {\n      imgRef: /*#__PURE__*/React.createRef(),\n      targetTimerSize: 0,\n      resizeObserver: new ResizeObserver(entries => {\n        for (const entry of entries) {\n          if (entry.target === this.state.imgRef.current) {\n            this.setState({\n              targetTimerSize: entry.contentRect.height - 12\n            });\n          }\n        }\n      }),\n      userAnswer: 7,\n      changeColor: 0\n    };\n  }\n\n  componentWillUnmount() {\n    this.state.resizeObserver.disconnect();\n    console.log(\"unmount\");\n  }\n\n  componentDidUpdate(Props) {\n    var _this$props$correctAn2;\n\n    if (this.state.userAnswer !== 7) {\n      var _this$props$correctAn;\n\n      console.log(\"changed\");\n      console.log((_this$props$correctAn = this.props.correctAnswer) === null || _this$props$correctAn === void 0 ? void 0 : _this$props$correctAn.correctAnswer);\n    }\n\n    if (((_this$props$correctAn2 = this.props.correctAnswer) === null || _this$props$correctAn2 === void 0 ? void 0 : _this$props$correctAn2.correctAnswer) !== undefined) {\n      var _this$props$correctAn3;\n\n      if (((_this$props$correctAn3 = this.props.correctAnswer) === null || _this$props$correctAn3 === void 0 ? void 0 : _this$props$correctAn3.correctAnswer) === this.state.userAnswer) {\n        this.Play(CorrectSound);\n        console.log(\"Correct\");\n      } else {\n        this.Play(WrongSound);\n        console.log(\"Wrong\");\n      }\n    }\n  }\n\n  componentDidMount() {}\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      id: style[\"background-wrapper\"],\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        id: style[\"Grid-wrapper\"],\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          id: style[\"left\"],\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            id: style[\"left-inline\"],\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              id: style[\"back-box\"],\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                id: style[\"back-button\"],\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  id: style[\"arrow-left\"]\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 157,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: \"Back\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 158,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 156,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                id: style[\"left-flex\"],\n                children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                  id: style[\"question-content\"],\n                  children: this.props.questionInfo.question\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 161,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  id: style[\"left-icon-box\"],\n                  children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                    id: style[\"question-icon1\"],\n                    children: \"Answer\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 165,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                    id: style[\"question-icon2\"],\n                    children: \"Answer\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 166,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 164,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  id: style[\"question-text\"],\n                  children: \"Click to choose the answer\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 168,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 160,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 155,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 154,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          id: style[\"right\"],\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            id: style[\"right-timer-box\"],\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              id: style[\"right-timer-background-wrapper\"],\n              children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                ref: this.state.imgRef,\n                id: style[\"right-timer-background\"],\n                src: TimerBack,\n                alt: \"I am\",\n                onLoad: e => this.state.resizeObserver.observe(e.currentTarget)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 177,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(RoundTimer, {\n                id: style[\"timer-background-wrapper\"],\n                time: this.props.questionInfo.timeLimit,\n                timerSize: this.state.targetTimerSize - 60\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 186,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 176,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 175,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            id: style[\"muti-wrapper\"],\n            children: this.props.questionInfo.choices.map((value, index) => {\n              var _this$props$correctAn4, _this$props$correctAn5;\n\n              return /*#__PURE__*/_jsxDEV(\"button\", {\n                id: style[\"button\"],\n                onClick: () => {\n                  this.props.connection.send({\n                    method: \"req\",\n                    type: \"answer_question\",\n                    payload: {\n                      choice: this.state.userAnswer,\n                      currentQuestionCheck: this.props.currentQuestionProps\n                    }\n                  });\n                  this.setState({\n                    userAnswer: index,\n                    changeColor: this.state.changeColor + 1\n                  }, () => {\n                    console.log(this.state.userAnswer);\n                  });\n                },\n                style: ((_this$props$correctAn4 = this.props.correctAnswer) === null || _this$props$correctAn4 === void 0 ? void 0 : _this$props$correctAn4.correctAnswer) === undefined ? this.normalAnswerStyle : ((_this$props$correctAn5 = this.props.correctAnswer) === null || _this$props$correctAn5 === void 0 ? void 0 : _this$props$correctAn5.correctAnswer) === index ? this.correctAnswerStyle : this.wrongAnswerStyle,\n                children: value\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 198,\n                columnNumber: 19\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 195,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nAnswering_MC.defaultProps = {\n  question: \"2 x 2 = ?\",\n  choices: [\"What time is it? dasfadsadsfasdffhjkhjkjkhjklhjg\", \"What time is it? dasfadsadsfasdffhjkhjkjkhjklhjg\", \"What time is it? dasfadsadsfasdffhjkhjkjkhjklhjg\", \"What time is it? dasfadsadsfasdffhjkhjkjkhjklhjg\", \"What time is it? dasfadsadsfasdffhjkhjkjkhjklhjg\", \"What time is it? dasfadsadsfasdffhjkhjkjkhjklhjg\"],\n  timeLimit: 120,\n  correctAnswer: 0\n};\nexport default Answering_MC;","map":{"version":3,"sources":["/Users/mac/Desktop/Nako/nako/src/desktop/AnsweringMC/answering_MultipleChoice.tsx"],"names":["React","style","RoundTimer","CorrectSound","WrongSound","Answering_MC","Component","constructor","props","Play","music","audio","Audio","play","normalAnswerStyle","width","maxHeight","marginTop","flexShrink","flexGrow","color","fontSize","textAlign","padding","borderRadius","border","background","boxShadow","transitionDuration","outline","correctAnswerStyle","wrongAnswerStyle","state","imgRef","createRef","targetTimerSize","resizeObserver","ResizeObserver","entries","entry","target","current","setState","contentRect","height","userAnswer","changeColor","componentWillUnmount","disconnect","console","log","componentDidUpdate","Props","correctAnswer","undefined","componentDidMount","render","questionInfo","question","TimerBack","e","observe","currentTarget","timeLimit","choices","map","value","index","connection","send","method","type","payload","choice","currentQuestionCheck","currentQuestionProps","defaultProps"],"mappings":"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","sourcesContent":["import * as React from \"react\";\nimport CSS from \"csstype\";\nimport style from \"./AnsweringMC.module.scss\";\nimport RoundTimer from \"../RoundTimer/RoundTimer\";\nimport TimerBack from \"./Group_818.svg\";\nimport NakoAPI, {\n  QuestionInfo,\n  QuestionEndRequest,\n} from \"../../modules/websocket-messages\";\nimport CorrectSound from \"./Nako Correct.wav\";\nimport WrongSound from \"./Nako Wrong.wav\";\n\nexport interface Props {\n  correctAnswer?: QuestionEndRequest;\n  connection: NakoAPI;\n  questionInfo: QuestionInfo<\"student\">;\n  currentQuestionProps: number;\n  timing?: (fn: () => void) => void;\n}\n\ninterface State {\n  imgRef: React.RefObject<HTMLImageElement>;\n  targetTimerSize: number;\n  resizeObserver: ResizeObserver;\n  userAnswer: number;\n  changeColor: number;\n}\n\nclass Answering_MC extends React.Component<Props, State> {\n  static defaultProps = {\n    question: \"2 x 2 = ?\",\n    choices: [\n      \"What time is it? dasfadsadsfasdffhjkhjkjkhjklhjg\",\n      \"What time is it? dasfadsadsfasdffhjkhjkjkhjklhjg\",\n      \"What time is it? dasfadsadsfasdffhjkhjkjkhjklhjg\",\n      \"What time is it? dasfadsadsfasdffhjkhjkjkhjklhjg\",\n      \"What time is it? dasfadsadsfasdffhjkhjkjkhjklhjg\",\n      \"What time is it? dasfadsadsfasdffhjkhjkjkhjklhjg\",\n    ],\n    timeLimit: 120,\n    correctAnswer: 0,\n  };\n\n  constructor(props: Props) {\n    super(props);\n\n    this.state = {\n      imgRef: React.createRef<HTMLImageElement>(),\n      targetTimerSize: 0,\n      resizeObserver: new ResizeObserver((entries) => {\n        for (const entry of entries) {\n          if (entry.target === this.state.imgRef.current) {\n            this.setState({ targetTimerSize: entry.contentRect.height - 12 });\n          }\n        }\n      }),\n      userAnswer: 7,\n      changeColor: 0,\n    };\n  }\n\n  componentWillUnmount() {\n    this.state.resizeObserver.disconnect();\n    console.log(\"unmount\");\n  }\n\n  componentDidUpdate(Props: Props) {\n    if (this.state.userAnswer !== 7) {\n      console.log(\"changed\");\n      console.log(this.props.correctAnswer?.correctAnswer);\n    }\n    if (this.props.correctAnswer?.correctAnswer !== undefined) {\n      if (this.props.correctAnswer?.correctAnswer === this.state.userAnswer) {\n        this.Play(CorrectSound);\n        console.log(\"Correct\");\n      } else {\n        this.Play(WrongSound);\n        console.log(\"Wrong\");\n      }\n    }\n  }\n\n  componentDidMount() {}\n\n  Play = (music: string) => {\n    let audio = new Audio(music);\n    audio.play();\n  };\n\n  // correctAnswer = (e: number) => {};\n  normalAnswerStyle: CSS.Properties = {\n    width: \"45%\",\n    maxHeight: \"50em\",\n    marginTop: \"3%\",\n    flexShrink: 1,\n    flexGrow: 1,\n    color: \"black\",\n    fontSize: \"1.6em\",\n    textAlign: \"center\",\n    padding: \"2%\",\n    borderRadius: \"50px\",\n    border: \"7px solid #4ed02c\",\n    background: \"white\",\n    boxShadow:\n      \"10px 10px 10px rgba(0, 0, 0, 0.45),-10px -10px 10px rgba(255, 255, 255, 0.45)\",\n    transitionDuration: \"0.3s\",\n    outline: \"none\",\n  };\n\n  correctAnswerStyle: CSS.Properties = {\n    width: \"45%\",\n    maxHeight: \"50em\",\n    marginTop: \"3%\",\n    flexShrink: 1,\n    flexGrow: 1,\n    color: \"black\",\n    fontSize: \"1.6em\",\n    textAlign: \"center\",\n    padding: \"2%\",\n    borderRadius: \"50px\",\n    border: \"7px solid black\",\n    background: \"white\",\n    boxShadow:\n      \"10px 10px 10px rgba(0, 0, 0, 0.45),-10px -10px 10px rgba(255, 255, 255, 0.45)\",\n    transitionDuration: \"0.3s\",\n    outline: \"none\",\n  };\n\n  wrongAnswerStyle: CSS.Properties = {\n    width: \"45%\",\n    maxHeight: \"50em\",\n    marginTop: \"3%\",\n    flexShrink: 1,\n    flexGrow: 1,\n    color: \"black\",\n    fontSize: \"1.6em\",\n    textAlign: \"center\",\n    padding: \"2%\",\n    borderRadius: \"50px\",\n    border: \"7px solid red\",\n    background: \"white\",\n    boxShadow:\n      \"10px 10px 10px rgba(0, 0, 0, 0.45),-10px -10px 10px rgba(255, 255, 255, 0.45)\",\n    transitionDuration: \"0.3s\",\n    outline: \"none\",\n  };\n\n  render() {\n    return (\n      <div id={style[\"background-wrapper\"]}>\n        <div id={style[\"Grid-wrapper\"]}>\n          {/*The left grid*/}\n          <div id={style[\"left\"]}>\n            <div id={style[\"left-inline\"]}>\n              <div id={style[\"back-box\"]}>\n                <button id={style[\"back-button\"]}>\n                  <span id={style[\"arrow-left\"]} />\n                  <span>Back</span>\n                </button>\n                <div id={style[\"left-flex\"]}>\n                  <p id={style[\"question-content\"]}>\n                    {this.props.questionInfo.question}\n                  </p>\n                  <div id={style[\"left-icon-box\"]}>\n                    <p id={style[\"question-icon1\"]}>Answer</p>\n                    <p id={style[\"question-icon2\"]}>Answer</p>\n                  </div>\n                  <p id={style[\"question-text\"]}>Click to choose the answer</p>\n                </div>\n              </div>\n            </div>\n          </div>\n          {/*The right grid*/}\n          <div id={style[\"right\"]}>\n            <div id={style[\"right-timer-box\"]}>\n              <div id={style[\"right-timer-background-wrapper\"]}>\n                <img\n                  ref={this.state.imgRef}\n                  id={style[\"right-timer-background\"]}\n                  src={TimerBack}\n                  alt=\"I am\"\n                  onLoad={(e) =>\n                    this.state.resizeObserver.observe(e.currentTarget)\n                  }\n                />\n                <RoundTimer\n                  id={style[\"timer-background-wrapper\"]}\n                  time={this.props.questionInfo.timeLimit}\n                  timerSize={this.state.targetTimerSize - 60}\n                />\n              </div>\n              {/* <div id=\"AnsweringMC-Timer\">\n                </div> */}\n            </div>\n            <div id={style[\"muti-wrapper\"]}>\n              {this.props.questionInfo.choices.map((value, index) => {\n                return (\n                  <button\n                    id={style[\"button\"]}\n                    key={index}\n                    onClick={() => {\n                      this.props.connection.send({\n                        method: \"req\",\n                        type: \"answer_question\",\n                        payload: {\n                          choice: this.state.userAnswer,\n                          currentQuestionCheck: this.props.currentQuestionProps,\n                        },\n                      });\n                      this.setState(\n                        {\n                          userAnswer: index,\n                          changeColor: this.state.changeColor + 1,\n                        },\n                        () => {\n                          console.log(this.state.userAnswer);\n                        }\n                      );\n                    }}\n                    style={\n                      this.props.correctAnswer?.correctAnswer === undefined\n                        ? this.normalAnswerStyle\n                        : this.props.correctAnswer?.correctAnswer === index\n                        ? this.correctAnswerStyle\n                        : this.wrongAnswerStyle\n                    }\n                  >\n                    {value}\n                  </button>\n                );\n              })}\n            </div>\n          </div>\n        </div>\n        {/* <div id=\"warn\">content: \"mobile not supported yet\";</div> */}\n      </div>\n    );\n  }\n}\n\nexport default Answering_MC;\n"]},"metadata":{},"sourceType":"module"}