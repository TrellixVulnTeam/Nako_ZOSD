{"ast":null,"code":"var _jsxFileName = \"/Users/mac/Desktop/Nako/nako/src/desktop/AnsweringMC/answeringModule.tsx\";\nimport * as React from \"react\";\nimport style from \"./AnsweringMC.module.scss\";\nimport RoundTimer from \"../RoundTimer/RoundTimer\";\nimport TimerBack from \"./Group_816.svg\";\nimport CorrectSound from \"./Nako Correct.wav\";\nimport WrongSound from \"./Nako Fail.wav\";\nimport MCModule from \"./MultipleChoiceModule\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass AnsweringModule extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.Play = music => {\n      let audio = new Audio(music);\n      audio.play();\n    };\n\n    this.Classify = () => {\n      return this.props.questionInfo.type === \"multiple_choice\" ? this.setState({\n        sending: this.props.questionInfo\n      }) : console.log(this.props.questionInfo);\n    };\n\n    this.state = {\n      imgRef: /*#__PURE__*/React.createRef(),\n      targetTimerSize: 0,\n      resizeObserver: new ResizeObserver(entries => {\n        for (const entry of entries) {\n          if (entry.target === this.state.imgRef.current) {\n            this.setState({\n              targetTimerSize: entry.contentRect.height - 12\n            });\n          }\n        }\n      }),\n      userAnswer: 7,\n      changeColor: 0,\n      sending: this.props.questionInfo\n    };\n  }\n\n  componentDidMount() {\n    this.Classify();\n  }\n\n  componentWillUnmount() {\n    this.state.resizeObserver.disconnect();\n    console.log(\"unmount\");\n  }\n\n  componentDidUpdate(Props) {\n    var _this$props$correctAn2;\n\n    if (this.state.userAnswer !== 7) {\n      var _this$props$correctAn;\n\n      console.log(\"changed\");\n      console.log((_this$props$correctAn = this.props.correctAnswer) === null || _this$props$correctAn === void 0 ? void 0 : _this$props$correctAn.correctAnswer);\n    }\n\n    if (((_this$props$correctAn2 = this.props.correctAnswer) === null || _this$props$correctAn2 === void 0 ? void 0 : _this$props$correctAn2.correctAnswer) !== undefined) {\n      console.log(\"send\");\n\n      for (let i = 0; i < ((_this$props$correctAn3 = this.props.correctAnswer) === null || _this$props$correctAn3 === void 0 ? void 0 : _this$props$correctAn3.correctAnswer.length); i++) {\n        var _this$props$correctAn3, _this$props$correctAn4;\n\n        if (((_this$props$correctAn4 = this.props.correctAnswer) === null || _this$props$correctAn4 === void 0 ? void 0 : _this$props$correctAn4.correctAnswer[i]) === this.state.userAnswer) {\n          this.Play(CorrectSound);\n          console.log(\"Correct\");\n        } else {\n          this.Play(WrongSound);\n          console.log(\"Wrong\");\n        }\n      }\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      id: style[\"background-wrapper\"],\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        id: style[\"Grid-wrapper\"],\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          id: style[\"left\"],\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            id: style[\"left-inline\"],\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              id: style[\"back-box\"],\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                id: style[\"back-button\"],\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  id: style[\"arrow-left\"]\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 126,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: \"Back\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 127,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 125,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                id: style[\"left-flex\"],\n                children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                  id: style[\"question-content\"],\n                  children: this.props.questionInfo.question\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 130,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  id: style[\"left-icon-box\"],\n                  children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                    id: style[\"question-icon1\"],\n                    children: \"Answer\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 134,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                    id: style[\"question-icon2\"],\n                    children: \"Answer\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 135,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 133,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  id: style[\"question-text\"],\n                  children: \"Click to choose the answer\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 137,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 129,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 124,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          id: style[\"right\"],\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            id: style[\"right-timer-box\"],\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              id: style[\"right-timer-background-wrapper\"],\n              children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                ref: this.state.imgRef,\n                id: style[\"right-timer-background\"],\n                src: TimerBack,\n                alt: \"I am\",\n                onLoad: e => this.state.resizeObserver.observe(e.currentTarget)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 146,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(RoundTimer, {\n                id: style[\"timer-background-wrapper\"],\n                time: this.props.questionInfo.timeLimit,\n                timerSize: this.state.targetTimerSize - 60\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 155,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 145,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(MCModule, {\n              connection: this.props.connection,\n              correctAnswer: this.props.correctAnswer,\n              currentQuestionProps: this.props.currentQuestionProps,\n              questionInfo: this.props.questionInfo.type === \"multiple_choice\" ? this.props.questionInfo : this.props.questionInfo,\n              onAnswerSelected: e => {\n                this.setState({\n                  userAnswer: e\n                }, () => {\n                  this.props.connection.send({\n                    method: \"req\",\n                    type: \"answer_question\",\n                    payload: {\n                      choice: this.state.userAnswer,\n                      currentQuestionCheck: this.props.currentQuestionProps\n                    }\n                  });\n                });\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 165,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 164,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nAnsweringModule.defaultProps = {\n  question: \"2 x 2 = ?\",\n  choices: [\"What time is it? dasfadsadsfasdffhjkhjkjkhjklhjg\", \"What time is it? dasfadsadsfasdffhjkhjkjkhjklhjg\", \"What time is it? dasfadsadsfasdffhjkhjkjkhjklhjg\", \"What time is it? dasfadsadsfasdffhjkhjkjkhjklhjg\", \"What time is it? dasfadsadsfasdffhjkhjkjkhjklhjg\", \"What time is it? dasfadsadsfasdffhjkhjkjkhjklhjg\"],\n  timeLimit: 120,\n  correctAnswer: 0\n};\nexport default AnsweringModule;","map":{"version":3,"sources":["/Users/mac/Desktop/Nako/nako/src/desktop/AnsweringMC/answeringModule.tsx"],"names":["React","style","RoundTimer","CorrectSound","WrongSound","MCModule","AnsweringModule","Component","constructor","props","Play","music","audio","Audio","play","Classify","questionInfo","type","setState","sending","console","log","state","imgRef","createRef","targetTimerSize","resizeObserver","ResizeObserver","entries","entry","target","current","contentRect","height","userAnswer","changeColor","componentDidMount","componentWillUnmount","disconnect","componentDidUpdate","Props","correctAnswer","undefined","i","length","render","question","TimerBack","e","observe","currentTarget","timeLimit","connection","currentQuestionProps","send","method","payload","choice","currentQuestionCheck","defaultProps","choices"],"mappings":";AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AAEA,OAAOC,KAAP,MAAkB,2BAAlB;AACA,OAAOC,UAAP,MAAuB,0BAAvB;;AAQA,OAAOC,YAAP,MAAyB,oBAAzB;AACA,OAAOC,UAAP,MAAuB,iBAAvB;AACA,OAAOC,QAAP,MAAqB,wBAArB;;;AAmBA,MAAMC,eAAN,SAA8BN,KAAK,CAACO,SAApC,CAA4D;AAe1DC,EAAAA,WAAW,CAACC,KAAD,EAAe;AACxB,UAAMA,KAAN;;AADwB,SAgD1BC,IAhD0B,GAgDlBC,KAAD,IAAmB;AACxB,UAAIC,KAAK,GAAG,IAAIC,KAAJ,CAAUF,KAAV,CAAZ;AACAC,MAAAA,KAAK,CAACE,IAAN;AACD,KAnDyB;;AAAA,SAqD1BC,QArD0B,GAqDf,MAAM;AACf,aAAO,KAAKN,KAAL,CAAWO,YAAX,CAAwBC,IAAxB,KAAiC,iBAAjC,GACH,KAAKC,QAAL,CAAc;AACZC,QAAAA,OAAO,EAAE,KAAKV,KAAL,CAAWO;AADR,OAAd,CADG,GAOHI,OAAO,CAACC,GAAR,CACE,KAAKZ,KAAL,CAAWO,YADb,CAPJ;AAaD,KAnEyB;;AAExB,SAAKM,KAAL,GAAa;AACXC,MAAAA,MAAM,eAAEvB,KAAK,CAACwB,SAAN,EADG;AAEXC,MAAAA,eAAe,EAAE,CAFN;AAGXC,MAAAA,cAAc,EAAE,IAAIC,cAAJ,CAAoBC,OAAD,IAAa;AAC9C,aAAK,MAAMC,KAAX,IAAoBD,OAApB,EAA6B;AAC3B,cAAIC,KAAK,CAACC,MAAN,KAAiB,KAAKR,KAAL,CAAWC,MAAX,CAAkBQ,OAAvC,EAAgD;AAC9C,iBAAKb,QAAL,CAAc;AAAEO,cAAAA,eAAe,EAAEI,KAAK,CAACG,WAAN,CAAkBC,MAAlB,GAA2B;AAA9C,aAAd;AACD;AACF;AACF,OANe,CAHL;AAUXC,MAAAA,UAAU,EAAE,CAVD;AAWXC,MAAAA,WAAW,EAAE,CAXF;AAYXhB,MAAAA,OAAO,EAAE,KAAKV,KAAL,CAAWO;AAZT,KAAb;AAcD;;AAEDoB,EAAAA,iBAAiB,GAAG;AAClB,SAAKrB,QAAL;AACD;;AAEDsB,EAAAA,oBAAoB,GAAG;AACrB,SAAKf,KAAL,CAAWI,cAAX,CAA0BY,UAA1B;AACAlB,IAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ;AACD;;AAEDkB,EAAAA,kBAAkB,CAACC,KAAD,EAAe;AAAA;;AAC/B,QAAI,KAAKlB,KAAL,CAAWY,UAAX,KAA0B,CAA9B,EAAiC;AAAA;;AAC/Bd,MAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ;AACAD,MAAAA,OAAO,CAACC,GAAR,0BAAY,KAAKZ,KAAL,CAAWgC,aAAvB,0DAAY,sBAA0BA,aAAtC;AACD;;AACD,QAAI,gCAAKhC,KAAL,CAAWgC,aAAX,kFAA0BA,aAA1B,MAA4CC,SAAhD,EAA2D;AACzDtB,MAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ;;AACA,WAAK,IAAIsB,CAAC,GAAG,CAAb,EAAgBA,CAAC,8BAAG,KAAKlC,KAAL,CAAWgC,aAAd,2DAAG,uBAA0BA,aAA1B,CAAwCG,MAA3C,CAAjB,EAAoED,CAAC,EAArE,EAAyE;AAAA;;AACvE,YACE,gCAAKlC,KAAL,CAAWgC,aAAX,kFAA0BA,aAA1B,CAAwCE,CAAxC,OAA+C,KAAKrB,KAAL,CAAWY,UAD5D,EAEE;AACA,eAAKxB,IAAL,CAAUP,YAAV;AACAiB,UAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ;AACD,SALD,MAKO;AACL,eAAKX,IAAL,CAAUN,UAAV;AACAgB,UAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ;AACD;AACF;AACF;AACF;;AAuBDwB,EAAAA,MAAM,GAAG;AACP,wBACE;AAAK,MAAA,EAAE,EAAE5C,KAAK,CAAC,oBAAD,CAAd;AAAA,6BACE;AAAK,QAAA,EAAE,EAAEA,KAAK,CAAC,cAAD,CAAd;AAAA,gCAEE;AAAK,UAAA,EAAE,EAAEA,KAAK,CAAC,MAAD,CAAd;AAAA,iCACE;AAAK,YAAA,EAAE,EAAEA,KAAK,CAAC,aAAD,CAAd;AAAA,mCACE;AAAK,cAAA,EAAE,EAAEA,KAAK,CAAC,UAAD,CAAd;AAAA,sCACE;AAAQ,gBAAA,EAAE,EAAEA,KAAK,CAAC,aAAD,CAAjB;AAAA,wCACE;AAAM,kBAAA,EAAE,EAAEA,KAAK,CAAC,YAAD;AAAf;AAAA;AAAA;AAAA;AAAA,wBADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,eAKE;AAAK,gBAAA,EAAE,EAAEA,KAAK,CAAC,WAAD,CAAd;AAAA,wCACE;AAAG,kBAAA,EAAE,EAAEA,KAAK,CAAC,kBAAD,CAAZ;AAAA,4BACG,KAAKQ,KAAL,CAAWO,YAAX,CAAwB8B;AAD3B;AAAA;AAAA;AAAA;AAAA,wBADF,eAIE;AAAK,kBAAA,EAAE,EAAE7C,KAAK,CAAC,eAAD,CAAd;AAAA,0CACE;AAAG,oBAAA,EAAE,EAAEA,KAAK,CAAC,gBAAD,CAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADF,eAEE;AAAG,oBAAA,EAAE,EAAEA,KAAK,CAAC,gBAAD,CAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAFF;AAAA;AAAA;AAAA;AAAA;AAAA,wBAJF,eAQE;AAAG,kBAAA,EAAE,EAAEA,KAAK,CAAC,eAAD,CAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBARF;AAAA;AAAA;AAAA;AAAA;AAAA,sBALF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBAFF,eAuBE;AAAK,UAAA,EAAE,EAAEA,KAAK,CAAC,OAAD,CAAd;AAAA,kCACE;AAAK,YAAA,EAAE,EAAEA,KAAK,CAAC,iBAAD,CAAd;AAAA,mCACE;AAAK,cAAA,EAAE,EAAEA,KAAK,CAAC,gCAAD,CAAd;AAAA,sCACE;AACE,gBAAA,GAAG,EAAE,KAAKqB,KAAL,CAAWC,MADlB;AAEE,gBAAA,EAAE,EAAEtB,KAAK,CAAC,wBAAD,CAFX;AAGE,gBAAA,GAAG,EAAE8C,SAHP;AAIE,gBAAA,GAAG,EAAC,MAJN;AAKE,gBAAA,MAAM,EAAGC,CAAD,IACN,KAAK1B,KAAL,CAAWI,cAAX,CAA0BuB,OAA1B,CAAkCD,CAAC,CAACE,aAApC;AANJ;AAAA;AAAA;AAAA;AAAA,sBADF,eAUE,QAAC,UAAD;AACE,gBAAA,EAAE,EAAEjD,KAAK,CAAC,0BAAD,CADX;AAEE,gBAAA,IAAI,EAAE,KAAKQ,KAAL,CAAWO,YAAX,CAAwBmC,SAFhC;AAGE,gBAAA,SAAS,EAAE,KAAK7B,KAAL,CAAWG,eAAX,GAA6B;AAH1C;AAAA;AAAA;AAAA;AAAA,sBAVF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBADF,eAqBE;AAAA,mCACE,QAAC,QAAD;AACE,cAAA,UAAU,EAAE,KAAKhB,KAAL,CAAW2C,UADzB;AAEE,cAAA,aAAa,EAAE,KAAK3C,KAAL,CAAWgC,aAF5B;AAGE,cAAA,oBAAoB,EAAE,KAAKhC,KAAL,CAAW4C,oBAHnC;AAIE,cAAA,YAAY,EACV,KAAK5C,KAAL,CAAWO,YAAX,CAAwBC,IAAxB,KAAiC,iBAAjC,GACK,KAAKR,KAAL,CAAWO,YADhB,GAKK,KAAKP,KAAL,CAAWO,YAVpB;AAeE,cAAA,gBAAgB,EAAGgC,CAAD,IAAO;AACvB,qBAAK9B,QAAL,CAAc;AAAEgB,kBAAAA,UAAU,EAAEc;AAAd,iBAAd,EAAiC,MAAM;AACrC,uBAAKvC,KAAL,CAAW2C,UAAX,CAAsBE,IAAtB,CAA2B;AACzBC,oBAAAA,MAAM,EAAE,KADiB;AAEzBtC,oBAAAA,IAAI,EAAE,iBAFmB;AAGzBuC,oBAAAA,OAAO,EAAE;AACPC,sBAAAA,MAAM,EAAE,KAAKnC,KAAL,CAAWY,UADZ;AAEPwB,sBAAAA,oBAAoB,EAAE,KAAKjD,KAAL,CAAW4C;AAF1B;AAHgB,mBAA3B;AAQD,iBATD;AAUD;AA1BH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBArBF;AAAA;AAAA;AAAA;AAAA;AAAA,gBAvBF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF;AAiFD;;AAtKyD;;AAAtD/C,e,CACGqD,Y,GAAe;AACpBb,EAAAA,QAAQ,EAAE,WADU;AAEpBc,EAAAA,OAAO,EAAE,CACP,kDADO,EAEP,kDAFO,EAGP,kDAHO,EAIP,kDAJO,EAKP,kDALO,EAMP,kDANO,CAFW;AAUpBT,EAAAA,SAAS,EAAE,GAVS;AAWpBV,EAAAA,aAAa,EAAE;AAXK,C;AAwKxB,eAAenC,eAAf","sourcesContent":["import * as React from \"react\";\nimport CSS from \"csstype\";\nimport style from \"./AnsweringMC.module.scss\";\nimport RoundTimer from \"../RoundTimer/RoundTimer\";\nimport TimerBack from \"./Group_816.svg\";\nimport NakoAPI, {\n  QuestionInfo,\n  QuestionEndRequest,\n  Question,\n  QuestionType,\n} from \"../../modules/websocket-messages\";\nimport CorrectSound from \"./Nako Correct.wav\";\nimport WrongSound from \"./Nako Fail.wav\";\nimport MCModule from \"./MultipleChoiceModule\";\n\nexport interface Props {\n  correctAnswer?: QuestionEndRequest;\n  connection: NakoAPI;\n  questionInfo: QuestionInfo<\"student\", Question<QuestionType>>;\n  currentQuestionProps: number;\n  timing?: (fn: () => void) => void;\n}\n\ninterface State {\n  imgRef: React.RefObject<HTMLImageElement>;\n  targetTimerSize: number;\n  resizeObserver: ResizeObserver;\n  userAnswer: number;\n  changeColor: number;\n  sending: QuestionInfo<\"student\", Question<QuestionType>>;\n}\n\nclass AnsweringModule extends React.Component<Props, State> {\n  static defaultProps = {\n    question: \"2 x 2 = ?\",\n    choices: [\n      \"What time is it? dasfadsadsfasdffhjkhjkjkhjklhjg\",\n      \"What time is it? dasfadsadsfasdffhjkhjkjkhjklhjg\",\n      \"What time is it? dasfadsadsfasdffhjkhjkjkhjklhjg\",\n      \"What time is it? dasfadsadsfasdffhjkhjkjkhjklhjg\",\n      \"What time is it? dasfadsadsfasdffhjkhjkjkhjklhjg\",\n      \"What time is it? dasfadsadsfasdffhjkhjkjkhjklhjg\",\n    ],\n    timeLimit: 120,\n    correctAnswer: 0,\n  };\n\n  constructor(props: Props) {\n    super(props);\n    this.state = {\n      imgRef: React.createRef<HTMLImageElement>(),\n      targetTimerSize: 0,\n      resizeObserver: new ResizeObserver((entries) => {\n        for (const entry of entries) {\n          if (entry.target === this.state.imgRef.current) {\n            this.setState({ targetTimerSize: entry.contentRect.height - 12 });\n          }\n        }\n      }),\n      userAnswer: 7,\n      changeColor: 0,\n      sending: this.props.questionInfo,\n    };\n  }\n\n  componentDidMount() {\n    this.Classify();\n  }\n\n  componentWillUnmount() {\n    this.state.resizeObserver.disconnect();\n    console.log(\"unmount\");\n  }\n\n  componentDidUpdate(Props: Props) {\n    if (this.state.userAnswer !== 7) {\n      console.log(\"changed\");\n      console.log(this.props.correctAnswer?.correctAnswer);\n    }\n    if (this.props.correctAnswer?.correctAnswer !== undefined) {\n      console.log(\"send\");\n      for (let i = 0; i < this.props.correctAnswer?.correctAnswer.length; i++) {\n        if (\n          this.props.correctAnswer?.correctAnswer[i] === this.state.userAnswer\n        ) {\n          this.Play(CorrectSound);\n          console.log(\"Correct\");\n        } else {\n          this.Play(WrongSound);\n          console.log(\"Wrong\");\n        }\n      }\n    }\n  }\n\n  Play = (music: string) => {\n    let audio = new Audio(music);\n    audio.play();\n  };\n\n  Classify = () => {\n    return this.props.questionInfo.type === \"multiple_choice\"\n      ? this.setState({\n          sending: this.props.questionInfo as QuestionInfo<\n            \"student\",\n            Question<\"multiple_choice\">\n          >,\n        })\n      : console.log(\n          this.props.questionInfo as QuestionInfo<\n            \"student\",\n            Question<\"multiple_choice\">\n          >\n        );\n  };\n\n  render() {\n    return (\n      <div id={style[\"background-wrapper\"]}>\n        <div id={style[\"Grid-wrapper\"]}>\n          {/*The left grid*/}\n          <div id={style[\"left\"]}>\n            <div id={style[\"left-inline\"]}>\n              <div id={style[\"back-box\"]}>\n                <button id={style[\"back-button\"]}>\n                  <span id={style[\"arrow-left\"]} />\n                  <span>Back</span>\n                </button>\n                <div id={style[\"left-flex\"]}>\n                  <p id={style[\"question-content\"]}>\n                    {this.props.questionInfo.question}\n                  </p>\n                  <div id={style[\"left-icon-box\"]}>\n                    <p id={style[\"question-icon1\"]}>Answer</p>\n                    <p id={style[\"question-icon2\"]}>Answer</p>\n                  </div>\n                  <p id={style[\"question-text\"]}>Click to choose the answer</p>\n                </div>\n              </div>\n            </div>\n          </div>\n          {/*The right grid*/}\n          <div id={style[\"right\"]}>\n            <div id={style[\"right-timer-box\"]}>\n              <div id={style[\"right-timer-background-wrapper\"]}>\n                <img\n                  ref={this.state.imgRef}\n                  id={style[\"right-timer-background\"]}\n                  src={TimerBack}\n                  alt=\"I am\"\n                  onLoad={(e) =>\n                    this.state.resizeObserver.observe(e.currentTarget)\n                  }\n                />\n                <RoundTimer\n                  id={style[\"timer-background-wrapper\"]}\n                  time={this.props.questionInfo.timeLimit}\n                  timerSize={this.state.targetTimerSize - 60}\n                />\n              </div>\n              {/* <div id=\"AnsweringMC-Timer\">\n                </div> */}\n            </div>\n            <div>\n              <MCModule\n                connection={this.props.connection}\n                correctAnswer={this.props.correctAnswer}\n                currentQuestionProps={this.props.currentQuestionProps}\n                questionInfo={\n                  this.props.questionInfo.type === \"multiple_choice\"\n                    ? (this.props.questionInfo as QuestionInfo<\n                        \"student\",\n                        Question<\"multiple_choice\">\n                      >)\n                    : (this.props.questionInfo as QuestionInfo<\n                        \"student\",\n                        Question<\"multiple_choice\">\n                      >)\n                }\n                onAnswerSelected={(e) => {\n                  this.setState({ userAnswer: e }, () => {\n                    this.props.connection.send({\n                      method: \"req\",\n                      type: \"answer_question\",\n                      payload: {\n                        choice: this.state.userAnswer,\n                        currentQuestionCheck: this.props.currentQuestionProps,\n                      },\n                    });\n                  });\n                }}\n              />\n            </div>\n          </div>\n        </div>\n        {/* <div id=\"warn\">content: \"mobile not supported yet\";</div> */}\n      </div>\n    );\n  }\n}\n\nexport default AnsweringModule;\n"]},"metadata":{},"sourceType":"module"}