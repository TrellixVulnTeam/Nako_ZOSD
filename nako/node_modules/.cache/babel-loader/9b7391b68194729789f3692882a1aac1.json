{"ast":null,"code":"var _jsxFileName = \"/Users/mac/Desktop/Nako/nako/src/index.tsx\";\nimport React from \"react\";\nimport * as Device from \"react-device-detect\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter as Router, Link, Redirect, Route, Switch } from \"react-router-dom\";\nimport { imagesWithAltText } from \"./assets/images/test\";\nimport Lobby from \"./desktop/lobby/lobby\";\nimport Login from \"./desktop/login/login\";\nimport Options from \"./desktop/Options/options\";\nimport Profile from \"./desktop/profile/profile\";\nimport Register from \"./desktop/register/register\";\nimport \"./index.scss\";\nimport MLogin from \"./mobile/login/login\";\nimport AnsweringMC from \"../src/desktop/Answering(MC)/answering(MultipleChoice)\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nif (Device.isBrowser) {\n  import(\"./font-desktop.scss\");\n} else {\n  import(\"./font-mobile.scss\");\n}\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(Router, {\n      children: /*#__PURE__*/_jsxDEV(Switch, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/\",\n          children: [/*#__PURE__*/_jsxDEV(Link, {\n            to: \"/play\",\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Lobby\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Link, {\n            to: \"/login\",\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Login\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Link, {\n            to: \"/register\",\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Register\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Link, {\n            to: {\n              pathname: \"/answering\",\n              state: {\n                Question: \"Halo\",\n                OptionA: \"True\",\n                OptionB: \"False\",\n                OptionC: \"C\",\n                OptionD: \"D\"\n              }\n            },\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Mutiple Chioces\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/answeringmc\",\n          children: /*#__PURE__*/_jsxDEV(AnsweringMC, {\n            question: \"1 x 1= ?\",\n            choices: [\"mmmmmmmmmmmmmmmmmmmm\", \"mmmmmmmmmmmmmmmmmmmm\", \"mmmmmmmmmmmmmmmmmmmm\", \"mmmmmmmmmmmmmmmmmmmm\", \"mmmmmmmmmmmmmmmmmmmm\", \"mmmmmmmmmmmmmmmmmmmm\"],\n            timeLimit: 120\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/options\",\n          children: /*#__PURE__*/_jsxDEV(Options, {\n            pictures: [imagesWithAltText, imagesWithAltText]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/play\",\n          children: /*#__PURE__*/_jsxDEV(Lobby, {\n            className: \"lobby-component fill-parent\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/login\",\n          children: this.state.accountInfo ? /*#__PURE__*/_jsxDEV(Redirect, {\n            to: \"/profile\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 15\n          }, this) : Device.isBrowser ? /*#__PURE__*/_jsxDEV(Login, {\n            className: \"fill-parent\",\n            onLoggedIn: accountInfo => this.setState({\n              accountInfo: accountInfo\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(MLogin, {\n            className: \"m-login-component fill-parent\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/register\",\n          children: /*#__PURE__*/_jsxDEV(Register, {\n            className: \"fill-parent\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/profile\",\n          children: i => this.state.accountInfo ? /*#__PURE__*/_jsxDEV(Profile, {\n            className: \"fill-parent\",\n            accountInfo: this.state.accountInfo,\n            ...i\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 17\n          }, this) : /*#__PURE__*/_jsxDEV(Redirect, {\n            to: \"/login\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Redirect, {\n          to: \"/login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nReactDOM.render( /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 131,\n  columnNumber: 17\n}, this), document.getElementById(\"root\"));","map":{"version":3,"sources":["/Users/mac/Desktop/Nako/nako/src/index.tsx"],"names":["React","Device","ReactDOM","BrowserRouter","Router","Link","Redirect","Route","Switch","imagesWithAltText","Lobby","Login","Options","Profile","Register","MLogin","AnsweringMC","isBrowser","App","Component","constructor","props","state","render","pathname","Question","OptionA","OptionB","OptionC","OptionD","accountInfo","setState","i","document","getElementById"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport * as Device from \"react-device-detect\";\nimport ReactDOM from \"react-dom\";\nimport {\n  BrowserRouter as Router,\n  Link,\n  Redirect,\n  Route,\n  Switch,\n} from \"react-router-dom\";\nimport { imagesWithAltText } from \"./assets/images/test\";\nimport Lobby from \"./desktop/lobby/lobby\";\nimport Login from \"./desktop/login/login\";\nimport Options from \"./desktop/Options/options\";\nimport Profile from \"./desktop/profile/profile\";\nimport Register from \"./desktop/register/register\";\nimport \"./index.scss\";\nimport MLogin from \"./mobile/login/login\";\nimport { AccountInfo } from \"./modules/account-info\";\nimport AnsweringMC from \"../src/desktop/Answering(MC)/answering(MultipleChoice)\";\nimport AnsweringTF from \"../src/desktop/Answering(TF)/answering(TrueOrFalse)\";\n\nif (Device.isBrowser) {\n  import(\"./font-desktop.scss\");\n} else {\n  import(\"./font-mobile.scss\");\n}\n\ninterface AppState {\n  accountInfo?: AccountInfo;\n}\n\nclass App extends React.Component<{}, AppState> {\n  constructor(props: {}) {\n    super(props);\n\n    this.state = {};\n  }\n\n  render() {\n    return (\n      <Router>\n        <Switch>\n          <Route exact path=\"/\">\n            {/* <Link to=\"/options\">\n              <p>Options</p>\n            </Link> */}\n            <Link to=\"/play\">\n              <p>Lobby</p>\n            </Link>\n            <Link to=\"/login\">\n              <p>Login</p>\n            </Link>\n            <Link to=\"/register\">\n              <p>Register</p>\n            </Link>\n            <Link\n              to={{\n                pathname: \"/answering\",\n                state: {\n                  Question: \"Halo\",\n                  OptionA: \"True\",\n                  OptionB: \"False\",\n                  OptionC: \"C\",\n                  OptionD: \"D\",\n                },\n              }}\n            >\n              <p>Mutiple Chioces</p>\n            </Link>\n          </Route>\n          <Route path=\"/answeringmc\">\n            <AnsweringMC\n              question=\"1 x 1= ?\"\n              choices={[\n                \"mmmmmmmmmmmmmmmmmmmm\",\n                \"mmmmmmmmmmmmmmmmmmmm\",\n                \"mmmmmmmmmmmmmmmmmmmm\",\n                \"mmmmmmmmmmmmmmmmmmmm\",\n                \"mmmmmmmmmmmmmmmmmmmm\",\n                \"mmmmmmmmmmmmmmmmmmmm\",\n              ]}\n              timeLimit={120}\n            />\n          </Route>\n          {/* <Game {...rest} player={[\"a\", \"b\", \"c\"]} onGameEnded={() => {}} gameID=\"123\"/> */}\n          <Route path=\"/options\">\n            <Options pictures={[imagesWithAltText, imagesWithAltText]} />\n          </Route>\n          <Route path=\"/play\">\n            <Lobby className=\"lobby-component fill-parent\" />\n          </Route>\n          <Route path=\"/login\">\n            {this.state.accountInfo ? (\n              <Redirect to=\"/profile\" />\n            ) : Device.isBrowser ? (\n              <Login\n                className=\"fill-parent\"\n                onLoggedIn={(accountInfo) =>\n                  this.setState({ accountInfo: accountInfo })\n                }\n              />\n            ) : (\n              <MLogin className=\"m-login-component fill-parent\" />\n            )}\n          </Route>\n          <Route path=\"/register\">\n            <Register className=\"fill-parent\"></Register>\n          </Route>\n          <Route path=\"/profile\">\n            {(i) =>\n              this.state.accountInfo ? (\n                <Profile\n                  className=\"fill-parent\"\n                  accountInfo={this.state.accountInfo}\n                  {...i}\n                />\n              ) : (\n                <Redirect to=\"/login\" />\n              )\n            }\n            {/* {i => <Profile className=\"fill-parent\" accountInfo={{ name: \"Test\", role: \"student\" }} {...i}/>} */}\n          </Route>\n          <Redirect to=\"/login\" />\n        </Switch>\n      </Router>\n    );\n  }\n}\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"]},"metadata":{},"sourceType":"module"}