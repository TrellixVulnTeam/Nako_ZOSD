{"ast":null,"code":"var _jsxFileName = \"/Users/mac/Desktop/Nako/nako/src/desktop/teacher/question-edit.tsx\";\nimport React from \"react\";\nimport Select from \"react-select\";\nimport ScoreSelector from \"./selector/ScoreSelector\";\nimport TimeSelector from \"./selector/TimeSelector\";\nimport styles from \"./teacher.module.scss\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class QuestionEdit extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      dropDownRef: /*#__PURE__*/React.createRef(),\n      questionRef: /*#__PURE__*/React.createRef(),\n      timeRefs: [/*#__PURE__*/React.createRef(), /*#__PURE__*/React.createRef()]\n    };\n  }\n\n  componentDidUpdate(prevProps) {\n    try {\n      if (prevProps.currentQuestion !== this.props.currentQuestion) {\n        console.log(prevProps.currentQuestion, this.props.currentQuestion); // this.state.dropDownRef.current!.setState({ value: this.props.currentQuestion.type === \"Multiple\" ? this.props.data[0] : this.props.data[1] });\n\n        this.setState({\n          tempDropDownValue: this.props.currentQuestion.type === \"Multiple\" ? this.props.data[0] : this.props.data[1]\n        }, () => {\n          this.state.timeRefs[0].current.value = Math.floor(this.props.currentQuestion.timeLimit / 60).toString();\n          this.state.timeRefs[1].current.value = (this.props.currentQuestion.timeLimit % 60).toString();\n\n          if (this.props.currentQuestion.type === \"Multiple\") {\n            for (let i = 0; i < this.props.mcRefs.length; i++) {\n              var _this$props$currentQu;\n\n              this.props.mcRefs[i].text.current.value = (_this$props$currentQu = this.props.currentQuestion.choices[i]) !== null && _this$props$currentQu !== void 0 ? _this$props$currentQu : \"\";\n              this.props.mcRefs[i].checkbox.current.checked = false;\n            }\n\n            if (typeof this.props.currentQuestion.corr === \"number\") {\n              this.props.mcRefs[this.props.currentQuestion.corr].checkbox.current.checked = true;\n            } else {\n              for (const i of this.props.currentQuestion.corr) {\n                this.props.mcRefs[i].checkbox.current.checked = true;\n              }\n            }\n          } else {\n            // I'm assuming that corr is either 0/1 if the type is T/F\n            this.props.tfRefs[this.props.currentQuestion.corr ? 1 : 0].current.checked = true;\n            this.props.tfRefs[this.props.currentQuestion.corr ? 0 : 1].current.checked = false;\n          }\n        });\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      id: styles[\"background-wrapper\"],\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        id: styles[\"timer\"],\n        children: /*#__PURE__*/_jsxDEV(TimeSelector, {\n          minsValuePass: value => this.props.minsValuePass(value),\n          secsValuePass: value => this.props.secsValuePass(value),\n          inputRefs: this.state.timeRefs\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: styles[\"scorer\"],\n        children: /*#__PURE__*/_jsxDEV(ScoreSelector, {\n          scoreValuePass: value => this.props.scoreValuePass(value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: styles[\"selector\"],\n        children: [/*#__PURE__*/_jsxDEV(Select, {\n          ref: this.state.dropDownRef,\n          id: styles[\"select\"],\n          defaultValue: {\n            label: \"Multiple Choices\",\n            value: \"Multiple\"\n          } //value={this.state.selectedOption}\n          ,\n          value: this.state.tempDropDownValue,\n          onChange: value => this.props.onSelectionChange(value),\n          options: this.props.data\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          id: styles[\"Next-buttom\"],\n          onClick: () => this.props.keep(),\n          children: \" Next\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: styles[\"inputer\"],\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          ref: this.state.questionRef,\n          placeholder: \"Add Question...\",\n          id: styles[\"question-input\"],\n          type: \"text\",\n          onChange: e => this.props.onQuestionInputChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 9\n      }, this), this.props.renderTarget]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/Users/mac/Desktop/Nako/nako/src/desktop/teacher/question-edit.tsx"],"names":["React","Select","ScoreSelector","TimeSelector","styles","QuestionEdit","Component","constructor","props","state","dropDownRef","createRef","questionRef","timeRefs","componentDidUpdate","prevProps","currentQuestion","console","log","setState","tempDropDownValue","type","data","current","value","Math","floor","timeLimit","toString","i","mcRefs","length","text","choices","checkbox","checked","corr","tfRefs","error","render","minsValuePass","secsValuePass","scoreValuePass","label","onSelectionChange","keep","e","onQuestionInputChange","renderTarget"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport Select from \"react-select\";\nimport ScoreSelector from \"./selector/ScoreSelector\";\nimport TimeSelector from \"./selector/TimeSelector\";\nimport styles from \"./teacher.module.scss\";\n\ninterface QuestionEditProps {\n  currentQuestion: {\n    question: string;\n    type: string;\n    choices: string[];\n    timeLimit: number;\n    corr: number | number[];\n  };\n  minsValuePass: (value: number) => void;\n  secsValuePass: (value: number) => void;\n  scoreValuePass: (value: number) => void;\n  onSelectionChange: (value: {\n    label: string,\n    value: string\n  } | null) => void,\n  data: {\n    label: string;\n    value: string;\n  }[],\n  keep: () => void;\n  onQuestionInputChange: (e: React.ChangeEvent<HTMLInputElement>) => void;\n  renderTarget: JSX.Element;\n  mcRefs: [\n    { text: React.RefObject<HTMLInputElement>, checkbox: React.RefObject<HTMLInputElement> },\n    { text: React.RefObject<HTMLInputElement>, checkbox: React.RefObject<HTMLInputElement> },\n    { text: React.RefObject<HTMLInputElement>, checkbox: React.RefObject<HTMLInputElement> },\n    { text: React.RefObject<HTMLInputElement>, checkbox: React.RefObject<HTMLInputElement> },\n    { text: React.RefObject<HTMLInputElement>, checkbox: React.RefObject<HTMLInputElement> },\n    { text: React.RefObject<HTMLInputElement>, checkbox: React.RefObject<HTMLInputElement> }\n  ];\n  tfRefs: [React.RefObject<HTMLInputElement>, React.RefObject<HTMLInputElement>];\n}\n\ninterface QuestionEditState {\n  dropDownRef: React.RefObject<Select<{ label: string; value: string; }>>;\n  questionRef: React.RefObject<HTMLInputElement>;\n  timeRefs: [min: React.RefObject<HTMLInputElement>, sec: React.RefObject<HTMLInputElement>];\n  tempDropDownValue?: { label: string, value: string };\n}\n\nexport default class QuestionEdit extends React.Component<QuestionEditProps, QuestionEditState> {\n  constructor(props: QuestionEditProps) {\n    super(props);\n\n    this.state = {\n      dropDownRef: React.createRef<Select<{ label: string; value: string; }>>(),\n      questionRef: React.createRef<HTMLInputElement>(),\n      timeRefs: [React.createRef<HTMLInputElement>(), React.createRef<HTMLInputElement>()]\n    };\n  }\n  \n  componentDidUpdate(prevProps: QuestionEditProps) {\n    try {\n      if (prevProps.currentQuestion !== this.props.currentQuestion) {\n        console.log(prevProps.currentQuestion, this.props.currentQuestion);\n        // this.state.dropDownRef.current!.setState({ value: this.props.currentQuestion.type === \"Multiple\" ? this.props.data[0] : this.props.data[1] });\n        this.setState({ tempDropDownValue: this.props.currentQuestion.type === \"Multiple\" ? this.props.data[0] : this.props.data[1] }, () => {\n          this.state.timeRefs[0].current!.value = Math.floor(this.props.currentQuestion.timeLimit / 60).toString();\n          this.state.timeRefs[1].current!.value = (this.props.currentQuestion.timeLimit % 60).toString();\n    \n          if (this.props.currentQuestion.type === \"Multiple\") {\n            for (let i = 0; i < this.props.mcRefs.length; i++) {\n              this.props.mcRefs[i].text.current!.value = this.props.currentQuestion.choices[i] ?? \"\";\n              this.props.mcRefs[i].checkbox.current!.checked = false;\n            }\n    \n            if (typeof this.props.currentQuestion.corr === \"number\") {\n              this.props.mcRefs[this.props.currentQuestion.corr].checkbox.current!.checked = true;\n            } else {\n              for (const i of this.props.currentQuestion.corr) {\n                this.props.mcRefs[i].checkbox.current!.checked = true;\n              }\n            }\n          } else {\n            // I'm assuming that corr is either 0/1 if the type is T/F\n            this.props.tfRefs[this.props.currentQuestion.corr ? 1 : 0].current!.checked = true;\n            this.props.tfRefs[this.props.currentQuestion.corr ? 0 : 1].current!.checked = false;\n          }\n        });\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  render() {\n    return (\n      <div id={styles[\"background-wrapper\"]}>\n        <div id={styles[\"timer\"]}>\n          <TimeSelector\n            minsValuePass={value => this.props.minsValuePass(value)}\n            secsValuePass={value => this.props.secsValuePass(value)}\n            inputRefs={this.state.timeRefs}\n          />\n        </div>\n        <div id={styles[\"scorer\"]}>\n          <ScoreSelector scoreValuePass={value => this.props.scoreValuePass(value)} />\n        </div>\n        <div id={styles[\"selector\"]}>\n          <Select\n            ref={this.state.dropDownRef}\n            id={styles[\"select\"]}\n            defaultValue={{ label: \"Multiple Choices\", value: \"Multiple\" }}\n            //value={this.state.selectedOption}\n            value={this.state.tempDropDownValue}\n            onChange={value => this.props.onSelectionChange(value)}\n            options={this.props.data}\n          />\n          <button id={styles[\"Next-buttom\"]} onClick={() => this.props.keep()}> Next</button>\n        </div>\n        <div id={styles[\"inputer\"]}>\n          <input\n            ref={this.state.questionRef}\n            placeholder=\"Add Question...\"\n            id={styles[\"question-input\"]}\n            type=\"text\"\n            onChange={e => this.props.onQuestionInputChange}\n          />\n        </div>\n        {this.props.renderTarget}\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}