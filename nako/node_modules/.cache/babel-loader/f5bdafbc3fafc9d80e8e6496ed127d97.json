{"ast":null,"code":"var _jsxFileName = \"/Users/mac/Desktop/Nako/nako/src/desktop/lobby/lobby.tsx\";\nimport React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { CSSTransition } from \"react-transition-group\";\nimport { animate, delay } from \"../../utils\";\nimport styles from \"./lobby.module.scss\";\nimport Logo from \"../../modules/logo/logo\";\nimport GameStartCountdown from \"./game-start-countdown\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nvar ProgressPhase;\n\n(function (ProgressPhase) {\n  ProgressPhase[ProgressPhase[\"Name\"] = 0] = \"Name\";\n  ProgressPhase[ProgressPhase[\"LobbyID\"] = 1] = \"LobbyID\";\n  ProgressPhase[ProgressPhase[\"Lobby\"] = 2] = \"Lobby\";\n  ProgressPhase[ProgressPhase[\"Starting\"] = 3] = \"Starting\";\n  ProgressPhase[ProgressPhase[\"Ended\"] = 4] = \"Ended\";\n})(ProgressPhase || (ProgressPhase = {}));\n\nvar ErrorMessage;\n\n(function (ErrorMessage) {\n  ErrorMessage[\"Generic\"] = \"An error occurred while your request was being processed.\";\n  ErrorMessage[\"TimedOut\"] = \"Your request was timed out. Please try again.\";\n  ErrorMessage[\"MissingLobby\"] = \"The provided lobby ID does not exist.\";\n})(ErrorMessage || (ErrorMessage = {}));\n\nclass Lobby extends React.Component {\n  constructor(props) {\n    super(props);\n\n    window.test = () => this.setState({\n      lobbyInfo: {\n        id: 1,\n        players: [\"Test1\", \"Test2\"]\n      }\n    });\n\n    this.state = {\n      name: this.props.accountInfo.name,\n      lobbyIDInput: \"\",\n      currentProgress: this.props.accountInfo.role === \"student\" ? ProgressPhase.Name : ProgressPhase.LobbyID,\n      inputParams: [{\n        className: \"box-shadow\",\n        type: \"text\",\n        placeholder: \"Enter name...\",\n        defaultValue: this.props.accountInfo.name,\n        onChange: e => this.setState({\n          name: e.target.value\n        })\n      }, {\n        className: \"box-shadow hide-number-buttons\",\n        type: \"number\",\n        placeholder: \"Enter game ID\",\n        onChange: e => this.setState({\n          lobbyIDInput: e.target.value\n        })\n      }],\n      inputRef: /*#__PURE__*/React.createRef(),\n      inputTransitioning: false,\n      error: {\n        occurred: false,\n        message: ErrorMessage.Generic\n      },\n      transitionReady: this.props.accountInfo.role === \"student\",\n      transitionedToLobby: false\n    };\n    this.props.connection.subscribe(\"req\", \"keep_alive\", () => this.props.connection.send({\n      method: \"res\",\n      type: \"keep_alive\",\n      payload: {\n        name: this.state.name,\n        lobbyID: this.state.lobbyInfo.id\n      }\n    }));\n\n    if (this.props.accountInfo.role === \"teacher\") {\n      this.props.connection.send({\n        method: \"req\",\n        type: \"lobby_create\",\n        payload: null\n      }).then(payload => {\n        this.props.connection.send({\n          method: \"req\",\n          type: \"lobby_join\",\n          payload: {\n            lobbyID: payload.lobbyID,\n            accountInfo: this.props.accountInfo\n          }\n        }).then(payload => {\n          if (payload.lobbyInfo) {\n            this.setState({\n              lobbyInfo: payload.lobbyInfo\n            });\n          } else {\n            console.error(\"Could not join lobby after lobby creation.\");\n          }\n        });\n      });\n    }\n  }\n\n  lobbyNotFoundHandler(error) {\n    console.log(error);\n  } // For student`\n\n\n  async onFormSubmitHandler(e, ms) {\n    e.preventDefault();\n    this.setState({\n      error: { ...this.state.error,\n        occurred: false\n      }\n    });\n\n    const triggerNextProgressPhase = () => {\n      if (this.state.currentProgress < ProgressPhase.Ended) {\n        this.setState({\n          currentProgress: this.state.currentProgress + 1\n        });\n      }\n    };\n\n    const invalidAnimation = () => {\n      animate(\"shake\", this.state.inputRef.current, 500);\n    };\n\n    const triggerDelay = async () => {\n      if (ms) {\n        this.setState({\n          inputTransitioning: true\n        });\n        await delay(ms);\n        this.setState({\n          inputTransitioning: false\n        });\n      }\n    };\n\n    switch (this.state.currentProgress) {\n      case ProgressPhase.Name:\n        if (this.state.name !== \"\") {\n          await triggerDelay();\n          triggerNextProgressPhase();\n        } else {\n          invalidAnimation();\n        }\n\n        break;\n\n      case ProgressPhase.LobbyID:\n        if (this.state.lobbyIDInput !== \"\") {\n          this.props.connection.send({\n            method: \"req\",\n            type: \"lobby_join\",\n            payload: {\n              lobbyID: Number(this.state.lobbyIDInput),\n              accountInfo: { ...this.props.accountInfo,\n                name: this.state.name\n              }\n            }\n          }, 10000).then(async res => {\n            if (res) {\n              if (res.lobbyInfo) {\n                var _this$props$onEntered, _this$props;\n\n                this.setState({\n                  lobbyInfo: res.lobbyInfo\n                });\n                (_this$props$onEntered = (_this$props = this.props).onEnteredLobby) === null || _this$props$onEntered === void 0 ? void 0 : _this$props$onEntered.call(_this$props);\n                this.props.connection.subscribe(\"res\", \"lobby_update\", msg => {\n                  this.setState({\n                    lobbyInfo: msg.lobbyInfo\n                  });\n                });\n                this.props.connection.subscribe(\"req\", \"game_start\").then(msg => {\n                  this.setState({\n                    gameInfo: msg.gameInfo\n                  });\n                  this.props.connection.send({\n                    method: \"res\",\n                    type: \"game_start\",\n                    payload: null\n                  });\n                  triggerNextProgressPhase();\n                });\n                await triggerDelay();\n                triggerNextProgressPhase();\n              } else {\n                this.setState({\n                  error: {\n                    occurred: true,\n                    message: ErrorMessage.MissingLobby\n                  }\n                });\n                console.log(res.error);\n              }\n            } else {\n              this.setState({\n                error: {\n                  occurred: true,\n                  message: ErrorMessage.TimedOut\n                }\n              });\n            }\n          }).catch(e => {\n            console.log(e);\n            this.setState({\n              error: {\n                occurred: true,\n                message: ErrorMessage.Generic\n              }\n            });\n          });\n        } else {\n          invalidAnimation();\n        }\n\n        break;\n\n      default:\n        break;\n    }\n  } // For teacher\n\n\n  onButtonClickHandler() {\n    var _this$props$onEntered2, _this$props2;\n\n    this.setState({\n      transitionReady: true\n    });\n    (_this$props$onEntered2 = (_this$props2 = this.props).onEnteredLobby) === null || _this$props$onEntered2 === void 0 ? void 0 : _this$props$onEntered2.call(_this$props2);\n  }\n\n  render() {\n    const {\n      connection,\n      onGameStart,\n      ...rest\n    } = this.props;\n    return /*#__PURE__*/_jsxDEV(\"div\", { ...rest,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles[\"lobby-container\"],\n        children: [/*#__PURE__*/_jsxDEV(Link, {\n          to: \"/\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            id: styles.back,\n            className: \"box-shadow\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: styles[\"arrow-left\"]\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 229,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"Back\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 230,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 228,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(CSSTransition, {\n          in: this.state.lobbyInfo !== undefined && this.state.transitionReady,\n          timeout: 500,\n          classNames: {\n            enter: styles[\"background-top-enter\"],\n            enterActive: styles[\"background-top-enter-active\"],\n            enterDone: styles[\"background-top-enter-done\"],\n            exit: styles[\"background-top-exit\"],\n            exitActive: styles[\"background-top-exit-active\"],\n            exitDone: styles[\"background-top-exit-done\"]\n          },\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            id: this.state.transitionedToLobby ? styles.background : styles[\"background-top\"],\n            children: [/*#__PURE__*/_jsxDEV(CSSTransition, {\n              in: this.state.lobbyInfo === undefined || !this.state.transitionReady,\n              timeout: 500,\n              classNames: {\n                enter: styles[\"title-container-enter\"],\n                enterActive: styles[\"title-container-enter-active\"],\n                enterDone: styles[\"title-container-enter-done\"],\n                exit: styles[\"title-container-exit\"],\n                exitActive: styles[\"title-container-exit-active\"],\n                exitDone: styles[\"title-container-exit-done\"]\n              },\n              onExited: () => this.setState({\n                transitionedToLobby: true\n              }),\n              mountOnEnter: true,\n              unmountOnExit: true,\n              children: /*#__PURE__*/_jsxDEV(Logo, {\n                id: styles[\"title-container\"],\n                role: \"student\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 271,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 258,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(CSSTransition, {\n              in: this.state.transitionedToLobby && this.state.lobbyInfo !== undefined,\n              timeout: 500,\n              classNames: {\n                enter: styles[\"lobby-info-container-enter\"],\n                enterActive: styles[\"lobby-info-container-enter-active\"],\n                enterDone: styles[\"lobby-info-container-enter-done\"],\n                exit: styles[\"lobby-info-container-exit\"],\n                exitActive: styles[\"lobby-info-container-exit-active\"],\n                exitDone: styles[\"lobby-info-container-exit-done\"]\n              },\n              onExit: () => this.setState({\n                transitionedToLobby: false\n              }),\n              mountOnEnter: true,\n              unmountOnExit: true,\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                id: styles[\"lobby-info-container\"],\n                children: this.state.currentProgress !== ProgressPhase.Starting ? /*#__PURE__*/_jsxDEV(_Fragment, {\n                  children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                    children: [this.props.accountInfo.role === \"teacher\" ? \"Students in lobby\" : \"You are playing with\", \":\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 290,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    id: styles[\"player-list\"],\n                    children: this.state.lobbyInfo !== undefined ? this.state.lobbyInfo.players.map((player, i) => /*#__PURE__*/_jsxDEV(\"p\", {\n                      children: player\n                    }, i, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 292,\n                      columnNumber: 112\n                    }, this)) : null\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 291,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true) : /*#__PURE__*/_jsxDEV(GameStartCountdown, {\n                  onCountdownEnd: () => {\n                    if (this.state.gameInfo) {\n                      console.log(\"Game starting\");\n                      this.props.onGameStart(this.state.gameInfo);\n                    } else {\n                      throw new Error(\"Game start was triggered but game info was missing.\");\n                    }\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 295,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 287,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 273,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 257,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 245,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(CSSTransition, {\n          in: this.state.lobbyInfo === undefined || !this.state.transitionReady,\n          timeout: 500,\n          classNames: {\n            enter: styles[\"background-bottom-enter\"],\n            enterActive: styles[\"background-bottom-enter-active\"],\n            enterDone: styles[\"background-bottom-enter-done\"],\n            exit: styles[\"background-bottom-exit\"],\n            exitActive: styles[\"background-bottom-exit-active\"],\n            exitDone: styles[\"background-bottom-exit-done\"]\n          },\n          unmountOnExit: true,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            id: styles[\"background-bottom\"],\n            className: \"box-shadow-inner\",\n            children: this.props.accountInfo.role === \"teacher\" ? /*#__PURE__*/_jsxDEV(\"div\", {\n              id: styles[\"input-container\"],\n              children: this.state.lobbyInfo ? /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  children: [\"Your lobby is ready! ID: \", this.state.lobbyInfo.id]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 328,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  id: styles.submit,\n                  className: \"box-shadow\",\n                  onClick: () => this.onButtonClickHandler(),\n                  children: \"Start\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 329,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true) : /*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"Creating your lobby...\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 331,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 325,\n              columnNumber: 17\n            }, this) : /*#__PURE__*/_jsxDEV(\"form\", {\n              id: styles[\"input-container\"],\n              onSubmit: e => this.onFormSubmitHandler(e, 600),\n              children: [/*#__PURE__*/_jsxDEV(CSSTransition, {\n                in: !this.state.inputTransitioning,\n                timeout: 500,\n                classNames: \"fade-rtl\",\n                children: /*#__PURE__*/_jsxDEV(\"input\", {\n                  ref: this.state.inputRef,\n                  id: styles.input,\n                  ...this.state.inputParams[this.state.currentProgress]\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 336,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 335,\n                columnNumber: 19\n              }, this), this.state.error.occurred ? /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"error\",\n                children: this.state.error.message\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 342,\n                columnNumber: 48\n              }, this) : null, /*#__PURE__*/_jsxDEV(\"button\", {\n                id: styles.submit,\n                className: \"box-shadow\",\n                type: \"submit\",\n                children: \"Enter\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 343,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 334,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 323,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 310,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default Lobby;","map":{"version":3,"sources":["/Users/mac/Desktop/Nako/nako/src/desktop/lobby/lobby.tsx"],"names":["React","Link","CSSTransition","animate","delay","styles","Logo","GameStartCountdown","ProgressPhase","ErrorMessage","Lobby","Component","constructor","props","window","test","setState","lobbyInfo","id","players","state","name","accountInfo","lobbyIDInput","currentProgress","role","Name","LobbyID","inputParams","className","type","placeholder","defaultValue","onChange","e","target","value","inputRef","createRef","inputTransitioning","error","occurred","message","Generic","transitionReady","transitionedToLobby","connection","subscribe","send","method","payload","lobbyID","then","console","lobbyNotFoundHandler","log","onFormSubmitHandler","ms","preventDefault","triggerNextProgressPhase","Ended","invalidAnimation","current","triggerDelay","Number","res","onEnteredLobby","msg","gameInfo","MissingLobby","TimedOut","catch","onButtonClickHandler","render","onGameStart","rest","back","undefined","enter","enterActive","enterDone","exit","exitActive","exitDone","background","Starting","map","player","i","Error","submit","input"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { CSSTransition } from \"react-transition-group\";\nimport { animate, delay } from \"../../utils\";\nimport styles from \"./lobby.module.scss\";\nimport NakoAPI, { GameInfo, LobbyInfo } from \"../../modules/websocket-messages\";\nimport Logo from \"../../modules/logo/logo\";\nimport GameStartCountdown from \"./game-start-countdown\";\nimport { AccountInfo } from \"../../modules/account-info\";\n\nenum ProgressPhase {\n  Name,\n  LobbyID,\n  Lobby,\n  Starting,\n  Ended\n}\n\nenum ErrorMessage {\n  Generic = \"An error occurred while your request was being processed.\",\n  TimedOut = \"Your request was timed out. Please try again.\",\n  MissingLobby = \"The provided lobby ID does not exist.\"\n}\n\ninterface LobbyProps {\n  connection: NakoAPI;\n  accountInfo: AccountInfo;\n  onGameStart: (gameInfo: GameInfo) => void;\n  onEnteredLobby?: () => void;\n}\n\ninterface LobbyStates {\n  name: string;\n  lobbyIDInput: string;\n  currentProgress: ProgressPhase;\n  inputParams: React.InputHTMLAttributes<HTMLInputElement>[];\n  inputRef: React.RefObject<HTMLInputElement>;\n  inputTransitioning: boolean;\n  error: {\n    occurred: boolean;\n    message: ErrorMessage;\n  };\n  transitionReady: boolean;\n  transitionedToLobby: boolean;\n  lobbyInfo?: LobbyInfo;\n  gameInfo?: GameInfo;\n}\n\nclass Lobby extends React.Component<LobbyProps & React.HTMLAttributes<HTMLDivElement>, LobbyStates> {\n  constructor(props: LobbyProps & React.HTMLAttributes<HTMLDivElement>) {\n    super(props);\n\n    (window as any).test = () => this.setState({ lobbyInfo: { id: 1, players: [\"Test1\", \"Test2\"] }});\n\n    this.state = {\n      name: this.props.accountInfo.name,\n      lobbyIDInput: \"\",\n      currentProgress: this.props.accountInfo.role === \"student\" ? ProgressPhase.Name : ProgressPhase.LobbyID,\n      inputParams: [{\n        className: \"box-shadow\",\n        type: \"text\",\n        placeholder: \"Enter name...\",\n        defaultValue: this.props.accountInfo.name,\n        onChange: e => this.setState({ name: e.target.value })\n      }, {\n        className: \"box-shadow hide-number-buttons\",\n        type: \"number\",\n        placeholder: \"Enter game ID\",\n        onChange: e => this.setState({ lobbyIDInput: e.target.value })\n      }],\n      inputRef: React.createRef<HTMLInputElement>(),\n      inputTransitioning: false,\n      error: {\n        occurred: false,\n        message: ErrorMessage.Generic\n      },\n      transitionReady: this.props.accountInfo.role === \"student\",\n      transitionedToLobby: false\n    };\n\n    this.props.connection.subscribe(\"req\", \"keep_alive\", () => this.props.connection.send({\n      method: \"res\",\n      type: \"keep_alive\",\n      payload: {\n        name: this.state.name,\n        lobbyID: this.state.lobbyInfo!.id\n      }\n    }));\n\n    if (this.props.accountInfo.role === \"teacher\") {\n      this.props.connection.send({\n        method: \"req\",\n        type: \"lobby_create\",\n        payload: null\n      }).then(payload => {\n        this.props.connection.send({\n          method: \"req\",\n          type: \"lobby_join\",\n          payload: {\n            lobbyID: payload.lobbyID,\n            accountInfo: this.props.accountInfo\n          }\n        }).then(payload => {\n          if (payload.lobbyInfo) {\n            this.setState({ lobbyInfo: payload.lobbyInfo });\n          } else {\n            console.error(\"Could not join lobby after lobby creation.\");\n          }\n        });\n      });\n    }\n  }\n\n  lobbyNotFoundHandler(error: string) {\n    console.log(error);\n  }\n\n  // For student`\n  async onFormSubmitHandler(e: React.FormEvent<HTMLFormElement>, ms?: number) {\n    e.preventDefault();\n    this.setState({ error: { ...this.state.error, occurred: false } });\n\n    const triggerNextProgressPhase = () => {\n      if (this.state.currentProgress < ProgressPhase.Ended) {\n        this.setState({ currentProgress: this.state.currentProgress + 1 });\n      }\n    };\n\n    const invalidAnimation = () => {\n      animate(\"shake\", this.state.inputRef.current!, 500);\n    };\n\n    const triggerDelay = async () => {\n      if (ms) {\n        this.setState({\n          inputTransitioning: true\n        });\n\n        await delay(ms);\n\n        this.setState({\n          inputTransitioning: false\n        });\n      }\n    };\n\n    switch (this.state.currentProgress) {\n      case ProgressPhase.Name:\n        if (this.state.name !== \"\") {\n          await triggerDelay();\n          triggerNextProgressPhase();\n        } else {\n          invalidAnimation();\n        }\n\n        break;\n      \n      case ProgressPhase.LobbyID:\n        if (this.state.lobbyIDInput !== \"\") {\n          this.props.connection.send({\n            method: \"req\",\n            type: \"lobby_join\",\n            payload: {\n              lobbyID: Number(this.state.lobbyIDInput),\n              accountInfo: {\n                ...this.props.accountInfo,\n                name: this.state.name\n              }\n            }\n          }, 10000).then(async res => {\n            if (res) {\n              if (res.lobbyInfo) {\n                this.setState({ lobbyInfo: res.lobbyInfo });\n                this.props.onEnteredLobby?.();\n\n                this.props.connection.subscribe(\"res\", \"lobby_update\", msg => {\n                  this.setState({ lobbyInfo: msg.lobbyInfo });\n                });\n\n                this.props.connection.subscribe(\"req\", \"game_start\").then(msg => {\n                  this.setState({ gameInfo: msg.gameInfo });\n\n                  this.props.connection.send({\n                    method: \"res\",\n                    type: \"game_start\",\n                    payload: null\n                  });\n\n                  triggerNextProgressPhase();\n                });\n\n                await triggerDelay();\n                triggerNextProgressPhase();\n              } else {\n                this.setState({ error: { occurred: true, message: ErrorMessage.MissingLobby } });\n                console.log(res.error);\n              }\n            } else {\n              this.setState({ error: { occurred: true, message: ErrorMessage.TimedOut } });\n            }\n          }).catch(e => {\n            console.log(e);\n            this.setState({ error: { occurred: true, message: ErrorMessage.Generic } });\n          });\n        } else {\n          invalidAnimation();\n        }\n        break;\n\n      default:\n        break;\n    }\n  }\n\n  // For teacher\n  onButtonClickHandler() {\n    this.setState({ transitionReady: true });\n    this.props.onEnteredLobby?.();\n  }\n  \n  render() {\n    const { connection, onGameStart, ...rest } = this.props;\n\n    return (\n      <div {...rest}>\n        <div className={styles[\"lobby-container\"]}>\n          <Link to=\"/\">\n            <button id={styles.back} className=\"box-shadow\">\n              <span className={styles[\"arrow-left\"]}/>\n              <span>Back</span>\n            </button>\n          </Link>\n          {/* <button\n            style={{position: \"absolute\", zIndex: 1, bottom: 0, right: 0}}\n            onClick={() => this.setState({\n              lobbyInfo: this.state.lobbyInfo ? undefined : {\n                id: 0,\n                players: [this.state.name, \"Test1\", \"Test2\", \"Test3\", \"Test4\", \"Test5\", \"Test6\", \"Test7\", \"Test8\", \"Test9\", \"Test10\", \"Test11\", \"Test12\"]\n              },\n              currentProgress: this.state.currentProgress === ProgressPhase.Lobby ? ProgressPhase.Name : ProgressPhase.Lobby\n            })}\n          >\n            Test\n          </button> */}\n          <CSSTransition\n            in={this.state.lobbyInfo !== undefined && this.state.transitionReady}\n            timeout={500}\n            classNames={{\n              enter: styles[\"background-top-enter\"],\n              enterActive: styles[\"background-top-enter-active\"],\n              enterDone: styles[\"background-top-enter-done\"],\n              exit: styles[\"background-top-exit\"],\n              exitActive: styles[\"background-top-exit-active\"],\n              exitDone: styles[\"background-top-exit-done\"]\n            }}\n          >\n            <div id={this.state.transitionedToLobby ? styles.background : styles[\"background-top\"]}>\n              <CSSTransition\n                in={this.state.lobbyInfo === undefined || !this.state.transitionReady} timeout={500}\n                classNames={{\n                  enter: styles[\"title-container-enter\"],\n                  enterActive: styles[\"title-container-enter-active\"],\n                  enterDone: styles[\"title-container-enter-done\"],\n                  exit: styles[\"title-container-exit\"],\n                  exitActive: styles[\"title-container-exit-active\"],\n                  exitDone: styles[\"title-container-exit-done\"]\n                }}\n                onExited={() => this.setState({ transitionedToLobby: true })}\n                mountOnEnter unmountOnExit\n              >\n                <Logo id={styles[\"title-container\"]} role=\"student\"/>\n              </CSSTransition>\n              <CSSTransition\n                in={this.state.transitionedToLobby && this.state.lobbyInfo !== undefined}\n                timeout={500}\n                classNames={{\n                  enter: styles[\"lobby-info-container-enter\"],\n                  enterActive: styles[\"lobby-info-container-enter-active\"],\n                  enterDone: styles[\"lobby-info-container-enter-done\"],\n                  exit: styles[\"lobby-info-container-exit\"],\n                  exitActive: styles[\"lobby-info-container-exit-active\"],\n                  exitDone: styles[\"lobby-info-container-exit-done\"]\n                }}\n                onExit={() => this.setState({ transitionedToLobby: false })}\n                mountOnEnter unmountOnExit\n              >\n                <div id={styles[\"lobby-info-container\"]}>\n                  {this.state.currentProgress !== ProgressPhase.Starting ?\n                    <>\n                      <h3>{this.props.accountInfo.role === \"teacher\" ? \"Students in lobby\" : \"You are playing with\"}:</h3>\n                      <div id={styles[\"player-list\"]}>\n                        {this.state.lobbyInfo !== undefined ? this.state.lobbyInfo!.players.map((player, i) => <p key={i}>{player}</p>) : null}\n                      </div>\n                    </> :\n                    <GameStartCountdown\n                      onCountdownEnd={() => {\n                        if (this.state.gameInfo) {\n                          console.log(\"Game starting\");\n                          this.props.onGameStart(this.state.gameInfo);\n                        } else {\n                          throw new Error(\"Game start was triggered but game info was missing.\");\n                        }\n                      }}\n                    />\n                  }\n                </div>\n              </CSSTransition>\n            </div>\n          </CSSTransition>\n          <CSSTransition\n            in={this.state.lobbyInfo === undefined || !this.state.transitionReady}\n            timeout={500}\n            classNames={{\n              enter: styles[\"background-bottom-enter\"],\n              enterActive: styles[\"background-bottom-enter-active\"],\n              enterDone: styles[\"background-bottom-enter-done\"],\n              exit: styles[\"background-bottom-exit\"],\n              exitActive: styles[\"background-bottom-exit-active\"],\n              exitDone: styles[\"background-bottom-exit-done\"]\n            }}\n            unmountOnExit\n          >\n            <div id={styles[\"background-bottom\"]} className=\"box-shadow-inner\">\n              {this.props.accountInfo.role === \"teacher\" ?\n                <div id={styles[\"input-container\"]}>\n                  {this.state.lobbyInfo ?\n                    <>\n                      <span>Your lobby is ready! ID: {this.state.lobbyInfo.id}</span>\n                      <button id={styles.submit} className=\"box-shadow\" onClick={() => this.onButtonClickHandler()}>Start</button>\n                    </> :\n                    <span>Creating your lobby...</span>\n                  }\n                </div> :\n                <form id={styles[\"input-container\"]} onSubmit={e => this.onFormSubmitHandler(e, 600)}>\n                  <CSSTransition in={!this.state.inputTransitioning} timeout={500} classNames=\"fade-rtl\">\n                    <input\n                      ref={this.state.inputRef}\n                      id={styles.input}\n                      {...this.state.inputParams[this.state.currentProgress]}\n                    />\n                  </CSSTransition>\n                  {this.state.error.occurred ? <p className=\"error\">{this.state.error.message}</p> : null}\n                  <button id={styles.submit} className=\"box-shadow\" type=\"submit\">Enter</button>\n                </form>\n              }\n            </div>\n          </CSSTransition>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Lobby;"]},"metadata":{},"sourceType":"module"}