{"ast":null,"code":"var _jsxFileName = \"/Users/mac/Desktop/Nako/nako/src/desktop/teacher/selector/ScoreSelector.tsx\";\nimport React from \"react\";\nimport style from \"./ScoreSelector.module.scss\";\nimport Slider from \"rc-slider\";\nimport \"rc-slider/assets/index.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default class ScoreSelector extends React.Component {\n  componentDidMount() {//document.body.id = \"app\";\n  }\n\n  constructor(props) {\n    super(props);\n\n    this.updateScoreValue = e => {\n      if (this.state.scoreValue <= 100) {\n        this.setState({\n          scoreValue: e.target.value\n        });\n      } else {\n        this.setState({\n          scoreValue: 100\n        });\n      }\n\n      if (this.state.scoreValue < 0) {\n        this.setState({\n          scoreValue: 0\n        });\n      }\n    };\n\n    this.TrackStyle = {\n      backgroundColor: \"#888888\",\n      height: \"15px\",\n      boxShadow: \"5px 5px 5px rgb(0, 0, 0, 0.45)\"\n    };\n    this.railStyle = {\n      backgroundColor: \"#00F600\",\n      height: \"15px\"\n    };\n    this.handleStyle = {\n      border: \"solid 2px #888888\",\n      height: \"31px\",\n      width: \"31px\",\n      boxShadow: \"5px 5px 5px rgba(0, 0, 0, 0.45)\"\n    };\n    this.timeText = {\n      width: \"2vw\",\n      marginLeft: \"5%\",\n      marginRight: \"5%\",\n      fontSize: \"3rem\"\n    };\n    this.state = {\n      scoreValue: 0\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"table\", {\n        cellPadding: \"5\",\n        id: style.table,\n        children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n          className: style.listbox,\n          children: /*#__PURE__*/_jsxDEV(\"td\", {\n            className: style.sliderBox,\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              className: style.tagText,\n              children: \"Score Weight\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n          className: style.listbox,\n          children: /*#__PURE__*/_jsxDEV(\"td\", {\n            id: style.inputBox,\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              children: /*#__PURE__*/_jsxDEV(\"input\", {\n                className: style.input,\n                type: \"number\",\n                value: this.state.scoreValue,\n                onChange: this.updateScoreValue\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 74,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n          className: style.listbox,\n          children: /*#__PURE__*/_jsxDEV(\"td\", {\n            className: style.sliderBox,\n            children: /*#__PURE__*/_jsxDEV(Slider, {\n              min: 0,\n              max: 100,\n              trackStyle: this.TrackStyle,\n              railStyle: this.railStyle,\n              handleStyle: this.handleStyle,\n              value: this.state.scoreValue,\n              onChange: e => {\n                this.setState({\n                  scoreValue: e\n                }, () => {\n                  this.props.scoreValuePass(e);\n                });\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this)\n    }, void 0, false);\n  }\n\n}","map":{"version":3,"sources":["/Users/mac/Desktop/Nako/nako/src/desktop/teacher/selector/ScoreSelector.tsx"],"names":["React","style","Slider","ScoreSelector","Component","componentDidMount","constructor","props","updateScoreValue","e","state","scoreValue","setState","target","value","TrackStyle","backgroundColor","height","boxShadow","railStyle","handleStyle","border","width","timeText","marginLeft","marginRight","fontSize","render","table","listbox","sliderBox","tagText","inputBox","input","scoreValuePass"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport style from \"./ScoreSelector.module.scss\";\nimport CSS from \"csstype\";\nimport Slider from \"rc-slider\";\nimport \"rc-slider/assets/index.css\";\n\ninterface Props {\n  scoreValuePass: (value: number) => void;\n}\n\ninterface States {\n  scoreValue: number;\n}\nexport default class ScoreSelector extends React.Component<Props, States> {\n  componentDidMount() {\n    //document.body.id = \"app\";\n  }\n\n  updateScoreValue = (e: any) => {\n    if (this.state.scoreValue <= 100) {\n      this.setState({ scoreValue: e.target.value });\n    } else {\n      this.setState({ scoreValue: 100 });\n    }\n    if (this.state.scoreValue < 0) {\n      this.setState({ scoreValue: 0 });\n    }\n  };\n\n  constructor(props: Props) {\n    super(props);\n    this.state = {\n      scoreValue: 0,\n    };\n  }\n\n  TrackStyle: CSS.Properties = {\n    backgroundColor: \"#888888\",\n    height: \"15px\",\n    boxShadow: \"5px 5px 5px rgb(0, 0, 0, 0.45)\",\n  };\n\n  railStyle: CSS.Properties = {\n    backgroundColor: \"#00F600\",\n    height: \"15px\",\n  };\n\n  handleStyle: CSS.Properties = {\n    border: \"solid 2px #888888\",\n    height: \"31px\",\n    width: \"31px\",\n    boxShadow: \"5px 5px 5px rgba(0, 0, 0, 0.45)\",\n  };\n\n  timeText: CSS.Properties = {\n    width: \"2vw\",\n    marginLeft: \"5%\",\n    marginRight: \"5%\",\n    fontSize: \"3rem\",\n  };\n\n  render() {\n    return (\n      <>\n        <table cellPadding=\"5\" id={style.table}>\n          <tr className={style.listbox}>\n            <td className={style.sliderBox}>\n              <p className={style.tagText}>Score Weight</p>\n            </td>\n          </tr>\n          <tr className={style.listbox}>\n            <td id={style.inputBox}>\n              <div>\n                <input\n                  className={style.input}\n                  type=\"number\"\n                  value={this.state.scoreValue}\n                  onChange={this.updateScoreValue}\n                />\n              </div>\n            </td>\n          </tr>\n          <tr className={style.listbox}>\n            <td className={style.sliderBox}>\n              <Slider\n                min={0}\n                max={100}\n                trackStyle={this.TrackStyle}\n                railStyle={this.railStyle}\n                handleStyle={this.handleStyle}\n                value={this.state.scoreValue}\n                onChange={(e: number) => {\n                  this.setState({ scoreValue: e }, () => {\n                    this.props.scoreValuePass(e);\n                  });\n                }}\n              />\n            </td>\n          </tr>\n        </table>\n      </>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}