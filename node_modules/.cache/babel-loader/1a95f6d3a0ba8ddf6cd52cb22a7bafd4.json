{"ast":null,"code":"export async function animate(className, node, timeout) {\n  if (!node.className.includes(` ${className}`)) {\n    node.className += ` ${className}`;\n    await new Promise(res => setTimeout(res, timeout));\n    node.className = node.className.replace(` ${className}`, \"\");\n  }\n}\nexport function delay(ms) {\n  return new Promise(res => setTimeout(res, ms));\n}\nexport async function waitForVideoData(video) {\n  return new Promise(resolve => {\n    video.onloadeddata = () => {\n      resolve();\n    };\n  });\n}\nexport function clamp(value, min = 0, max = 1) {\n  return value < min ? min : value > max ? max : value;\n}","map":{"version":3,"sources":["/Users/mac/Desktop/Nako/nako/src/utils/utils.ts"],"names":["animate","className","node","timeout","includes","Promise","res","setTimeout","replace","delay","ms","waitForVideoData","video","resolve","onloadeddata","clamp","value","min","max"],"mappings":"AAAA,OAAO,eAAeA,OAAf,CAAuBC,SAAvB,EAA0CC,IAA1C,EAA6DC,OAA7D,EAA8E;AACnF,MAAI,CAACD,IAAI,CAACD,SAAL,CAAeG,QAAf,CAAyB,IAAGH,SAAU,EAAtC,CAAL,EAA+C;AAC7CC,IAAAA,IAAI,CAACD,SAAL,IAAmB,IAAGA,SAAU,EAAhC;AACA,UAAM,IAAII,OAAJ,CAAYC,GAAG,IAAIC,UAAU,CAACD,GAAD,EAAMH,OAAN,CAA7B,CAAN;AACAD,IAAAA,IAAI,CAACD,SAAL,GAAiBC,IAAI,CAACD,SAAL,CAAeO,OAAf,CAAwB,IAAGP,SAAU,EAArC,EAAwC,EAAxC,CAAjB;AACD;AACF;AAED,OAAO,SAASQ,KAAT,CAAeC,EAAf,EAA2B;AAChC,SAAO,IAAIL,OAAJ,CAAkBC,GAAG,IAAIC,UAAU,CAACD,GAAD,EAAMI,EAAN,CAAnC,CAAP;AACD;AAED,OAAO,eAAeC,gBAAf,CAAgCC,KAAhC,EAAyD;AAC9D,SAAO,IAAIP,OAAJ,CAAkBQ,OAAO,IAAI;AAClCD,IAAAA,KAAK,CAACE,YAAN,GAAqB,MAAM;AACzBD,MAAAA,OAAO;AACR,KAFD;AAGD,GAJM,CAAP;AAKD;AAED,OAAO,SAASE,KAAT,CAAeC,KAAf,EAA8BC,GAAG,GAAG,CAApC,EAAuCC,GAAG,GAAG,CAA7C,EAAgD;AACrD,SAAOF,KAAK,GAAGC,GAAR,GAAcA,GAAd,GAAoBD,KAAK,GAAGE,GAAR,GAAcA,GAAd,GAAoBF,KAA/C;AACD","sourcesContent":["export async function animate(className: string, node: HTMLElement, timeout: number) {\n  if (!node.className.includes(` ${className}`)) {\n    node.className += ` ${className}`;\n    await new Promise(res => setTimeout(res, timeout));\n    node.className = node.className.replace(` ${className}`, \"\");\n  }\n}\n\nexport function delay(ms: number) {\n  return new Promise<void>(res => setTimeout(res, ms));\n}\n\nexport async function waitForVideoData(video: HTMLVideoElement) {\n  return new Promise<void>(resolve => {\n    video.onloadeddata = () => {\n      resolve();\n    };\n  });\n}\n\nexport function clamp(value: number, min = 0, max = 1) {\n  return value < min ? min : value > max ? max : value;\n}"]},"metadata":{},"sourceType":"module"}