{"ast":null,"code":"var _jsxFileName = \"/Users/mac/Desktop/Nako/nako/src/desktop/AnsweringMC/answering_MultipleChoice.tsx\";\nimport * as React from \"react\";\nimport style from \"./AnsweringMC.module.scss\";\nimport RoundTimer from \"../RoundTimer/RoundTimer\";\nimport TimerBack from \"./Group_818.svg\";\nimport CorrectSound from \"./Nako Correct.wav\";\nimport WrongSound from \"./Nako Wrong.wav\";\nimport AnsweringMC from \"./MultipleChoiceModule\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Answering_MC extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.Play = music => {\n      let audio = new Audio(music);\n      audio.play();\n    };\n\n    this.state = {\n      imgRef: /*#__PURE__*/React.createRef(),\n      targetTimerSize: 0,\n      resizeObserver: new ResizeObserver(entries => {\n        for (const entry of entries) {\n          if (entry.target === this.state.imgRef.current) {\n            this.setState({\n              targetTimerSize: entry.contentRect.height - 12\n            });\n          }\n        }\n      }),\n      userAnswer: 0,\n      sending: false\n    };\n  }\n\n  componentWillUnmount() {\n    this.state.resizeObserver.disconnect();\n    this.setState({\n      sending: false\n    });\n  }\n\n  componentDidUpdate(Props) {\n    var _this$props$correctAn2;\n\n    if (this.state.userAnswer !== 7) {\n      var _this$props$correctAn;\n\n      console.log(\"changed\");\n      console.log((_this$props$correctAn = this.props.correctAnswer) === null || _this$props$correctAn === void 0 ? void 0 : _this$props$correctAn.correctAnswer);\n    }\n\n    if (((_this$props$correctAn2 = this.props.correctAnswer) === null || _this$props$correctAn2 === void 0 ? void 0 : _this$props$correctAn2.correctAnswer) !== undefined) {\n      var _this$props$correctAn3;\n\n      this.props.connection.send({\n        method: \"req\",\n        type: \"answer_question\",\n        payload: {\n          choice: this.state.userAnswer,\n          currentQuestionCheck: this.props.currentQuestionProps\n        }\n      });\n      console.log(\"send\");\n\n      if (((_this$props$correctAn3 = this.props.correctAnswer) === null || _this$props$correctAn3 === void 0 ? void 0 : _this$props$correctAn3.correctAnswer) === this.state.userAnswer) {\n        this.Play(CorrectSound);\n        console.log(\"Correct\");\n      } else {\n        this.Play(WrongSound);\n        console.log(\"Wrong\");\n      }\n    }\n  }\n\n  // correctAnswer = (e: number) => {};\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      id: style[\"background-wrapper\"],\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        id: style[\"Grid-wrapper\"],\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          id: style[\"left\"],\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            id: style[\"left-inline\"],\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              id: style[\"back-box\"],\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                id: style[\"back-button\"],\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  id: style[\"arrow-left\"]\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 109,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: \"Back\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 110,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 108,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                id: style[\"left-flex\"],\n                children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                  id: style[\"question-content\"],\n                  children: this.props.questionInfo.question\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 113,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  id: style[\"left-icon-box\"],\n                  children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                    id: style[\"question-icon1\"],\n                    children: \"Answer\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 117,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                    id: style[\"question-icon2\"],\n                    children: \"Answer\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 118,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 116,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  id: style[\"question-text\"],\n                  children: \"Click to choose the answer\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 120,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 112,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 107,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          id: style[\"right\"],\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            id: style[\"right-timer-box\"],\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              id: style[\"right-timer-background-wrapper\"],\n              children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                ref: this.state.imgRef,\n                id: style[\"right-timer-background\"],\n                src: TimerBack,\n                alt: \"I am\",\n                onLoad: e => this.state.resizeObserver.observe(e.currentTarget)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 129,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(RoundTimer, {\n                id: style[\"timer-background-wrapper\"],\n                time: this.props.questionInfo.timeLimit,\n                timerSize: this.state.targetTimerSize - 60\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 138,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 128,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(AnsweringMC, {\n              connection: this.props.connection,\n              correctAnswer: this.props.correctAnswer,\n              questionInfo: this.props.questionInfo,\n              currentQuestionProps: this.props.currentQuestionProps,\n              onAnswerSelected: e => {\n                this.setState({\n                  userAnswer: e\n                });\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 146,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nAnswering_MC.defaultProps = {\n  question: \"2 x 2 = ?\",\n  choices: [\"What time is it? dasfadsadsfasdffhjkhjkjkhjklhjg\", \"What time is it? dasfadsadsfasdffhjkhjkjkhjklhjg\", \"What time is it? dasfadsadsfasdffhjkhjkjkhjklhjg\", \"What time is it? dasfadsadsfasdffhjkhjkjkhjklhjg\", \"What time is it? dasfadsadsfasdffhjkhjkjkhjklhjg\", \"What time is it? dasfadsadsfasdffhjkhjkjkhjklhjg\"],\n  timeLimit: 120,\n  correctAnswer: 0\n};\nexport default Answering_MC;","map":{"version":3,"sources":["/Users/mac/Desktop/Nako/nako/src/desktop/AnsweringMC/answering_MultipleChoice.tsx"],"names":["React","style","RoundTimer","CorrectSound","WrongSound","AnsweringMC","Answering_MC","Component","constructor","props","Play","music","audio","Audio","play","state","imgRef","createRef","targetTimerSize","resizeObserver","ResizeObserver","entries","entry","target","current","setState","contentRect","height","userAnswer","sending","componentWillUnmount","disconnect","componentDidUpdate","Props","console","log","correctAnswer","undefined","connection","send","method","type","payload","choice","currentQuestionCheck","currentQuestionProps","render","questionInfo","question","TimerBack","e","observe","currentTarget","timeLimit","defaultProps","choices"],"mappings":"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","sourcesContent":["import * as React from \"react\";\nimport CSS from \"csstype\";\nimport style from \"./AnsweringMC.module.scss\";\nimport RoundTimer from \"../RoundTimer/RoundTimer\";\nimport TimerBack from \"./Group_818.svg\";\nimport NakoAPI, {\n  QuestionInfo,\n  QuestionEndRequest,\n} from \"../../modules/websocket-messages\";\nimport CorrectSound from \"./Nako Correct.wav\";\nimport WrongSound from \"./Nako Wrong.wav\";\nimport AnsweringMC from \"./MultipleChoiceModule\";\n\nexport interface Props {\n  correctAnswer?: QuestionEndRequest;\n  connection: NakoAPI;\n  questionInfo: QuestionInfo<\"student\">;\n  currentQuestionProps: number;\n  timing?: (fn: () => void) => void;\n}\n\ninterface State {\n  imgRef: React.RefObject<HTMLImageElement>;\n  targetTimerSize: number;\n  resizeObserver: ResizeObserver;\n  userAnswer: number;\n  sending: boolean;\n}\n\nclass Answering_MC extends React.Component<Props, State> {\n  static defaultProps = {\n    question: \"2 x 2 = ?\",\n    choices: [\n      \"What time is it? dasfadsadsfasdffhjkhjkjkhjklhjg\",\n      \"What time is it? dasfadsadsfasdffhjkhjkjkhjklhjg\",\n      \"What time is it? dasfadsadsfasdffhjkhjkjkhjklhjg\",\n      \"What time is it? dasfadsadsfasdffhjkhjkjkhjklhjg\",\n      \"What time is it? dasfadsadsfasdffhjkhjkjkhjklhjg\",\n      \"What time is it? dasfadsadsfasdffhjkhjkjkhjklhjg\",\n    ],\n    timeLimit: 120,\n    correctAnswer: 0,\n  };\n\n  constructor(props: Props) {\n    super(props);\n\n    this.state = {\n      imgRef: React.createRef<HTMLImageElement>(),\n      targetTimerSize: 0,\n      resizeObserver: new ResizeObserver((entries) => {\n        for (const entry of entries) {\n          if (entry.target === this.state.imgRef.current) {\n            this.setState({ targetTimerSize: entry.contentRect.height - 12 });\n          }\n        }\n      }),\n      userAnswer: 0,\n      sending: false,\n    };\n  }\n\n  componentWillUnmount() {\n    this.state.resizeObserver.disconnect();\n    this.setState({ sending: false });\n  }\n\n  componentDidUpdate(Props: Props) {\n    if (this.state.userAnswer !== 7) {\n      console.log(\"changed\");\n      console.log(this.props.correctAnswer?.correctAnswer);\n    }\n    if (this.props.correctAnswer?.correctAnswer !== undefined) {\n      this.props.connection.send({\n        method: \"req\",\n        type: \"answer_question\",\n        payload: {\n          choice: this.state.userAnswer,\n          currentQuestionCheck: this.props.currentQuestionProps,\n        },\n      });\n      console.log(\"send\");\n      if (this.props.correctAnswer?.correctAnswer === this.state.userAnswer) {\n        this.Play(CorrectSound);\n        console.log(\"Correct\");\n      } else {\n        this.Play(WrongSound);\n        console.log(\"Wrong\");\n      }\n    }\n  }\n\n  Play = (music: string) => {\n    let audio = new Audio(music);\n    audio.play();\n  };\n\n  // correctAnswer = (e: number) => {};\n\n  render() {\n    return (\n      <div id={style[\"background-wrapper\"]}>\n        <div id={style[\"Grid-wrapper\"]}>\n          {/*The left grid*/}\n          <div id={style[\"left\"]}>\n            <div id={style[\"left-inline\"]}>\n              <div id={style[\"back-box\"]}>\n                <button id={style[\"back-button\"]}>\n                  <span id={style[\"arrow-left\"]} />\n                  <span>Back</span>\n                </button>\n                <div id={style[\"left-flex\"]}>\n                  <p id={style[\"question-content\"]}>\n                    {this.props.questionInfo.question}\n                  </p>\n                  <div id={style[\"left-icon-box\"]}>\n                    <p id={style[\"question-icon1\"]}>Answer</p>\n                    <p id={style[\"question-icon2\"]}>Answer</p>\n                  </div>\n                  <p id={style[\"question-text\"]}>Click to choose the answer</p>\n                </div>\n              </div>\n            </div>\n          </div>\n          {/*The right grid*/}\n          <div id={style[\"right\"]}>\n            <div id={style[\"right-timer-box\"]}>\n              <div id={style[\"right-timer-background-wrapper\"]}>\n                <img\n                  ref={this.state.imgRef}\n                  id={style[\"right-timer-background\"]}\n                  src={TimerBack}\n                  alt=\"I am\"\n                  onLoad={(e) =>\n                    this.state.resizeObserver.observe(e.currentTarget)\n                  }\n                />\n                <RoundTimer\n                  id={style[\"timer-background-wrapper\"]}\n                  time={this.props.questionInfo.timeLimit}\n                  timerSize={this.state.targetTimerSize - 60}\n                />\n              </div>\n            </div>\n            <div>\n              <AnsweringMC\n                connection={this.props.connection}\n                correctAnswer={this.props.correctAnswer}\n                questionInfo={this.props.questionInfo}\n                currentQuestionProps={this.props.currentQuestionProps}\n                onAnswerSelected={(e) => {\n                  this.setState({ userAnswer: e });\n                }}\n              />\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Answering_MC;\n"]},"metadata":{},"sourceType":"module"}