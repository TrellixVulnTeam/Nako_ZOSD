{"ast":null,"code":"var _jsxFileName = \"/Users/mac/Desktop/Nako/nako/src/desktop/AnsweringMC/answering_MultipleChoice.tsx\";\nimport * as React from \"react\";\nimport \"./AnsweringMC.scss\";\nimport RoundTimer from \"../RoundTimer/RoundTimer\";\nimport TimerBack from \"./Group_818.svg\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Answering_MC extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.correctAnswer = e => {};\n\n    this.state = {\n      imgRef: /*#__PURE__*/React.createRef(),\n      targetTimerSize: 0,\n      resizeObserver: new ResizeObserver(entries => {\n        for (const entry of entries) {\n          if (entry.target === this.state.imgRef.current) {\n            this.setState({\n              targetTimerSize: entry.contentRect.height - 12\n            });\n          }\n        }\n      }),\n      userAnswer: 7,\n      changeColor: 0\n    };\n  }\n\n  componentWillUnmount() {\n    this.state.resizeObserver.disconnect();\n  }\n\n  componentDidUpdate(Props) {\n    var _this$props$correctAn;\n\n    if (((_this$props$correctAn = this.props.correctAnswer) === null || _this$props$correctAn === void 0 ? void 0 : _this$props$correctAn.correctAnswer) !== undefined && this.state.userAnswer !== 7) {\n      var _this$props$correctAn2;\n\n      if (((_this$props$correctAn2 = this.props.correctAnswer) === null || _this$props$correctAn2 === void 0 ? void 0 : _this$props$correctAn2.correctAnswer) === this.state.userAnswer) {\n        console.log(\"asdasdasd\");\n        this.props.connection.send({\n          method: \"req\",\n          type: \"answer_question\",\n          payload: {\n            choice: this.state.userAnswer,\n            currentQuestionCheck: this.props.currentQuestionProps\n          }\n        });\n        this.setState({\n          changeColor: 1\n        });\n      } else {\n        this.props.connection.send({\n          method: \"req\",\n          type: \"answer_question\",\n          payload: {\n            choice: this.state.userAnswer,\n            currentQuestionCheck: this.props.currentQuestionProps\n          }\n        });\n        this.setState({\n          changeColor: 2\n        });\n      }\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"AnsweringMC-background-wrapper\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"AnsweringMC-Grid-wrapper\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"AnsweringMC-left\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"AnsweringMC-left-inline\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"AnsweringMC-back-box\",\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"AnsweringMC-back-button\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"arrow-left\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 103,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: \"Back\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 104,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 102,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"AnsweringMC-left-flex\",\n                children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"AnsweringMC-question-content\",\n                  children: this.props.questionInfo.question\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 107,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"AnsweringMC-left-icon-box\",\n                  children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                    className: \"AnsweringMC-question-icon1\",\n                    children: \"Answer\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 111,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                    className: \"AnsweringMC-question-icon2\",\n                    children: \"Answer\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 112,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 110,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"AnsweringMC-question-text\",\n                  children: \"Click to choose the answer\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 114,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 106,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"AnsweringMC-right\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"AnsweringMC-right-timer-box\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \" AnsweringMC-Right-timer-background-wrapper\",\n              children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                ref: this.state.imgRef,\n                className: \"AnsweringMC-right-timer-background\",\n                src: TimerBack,\n                alt: \"I am\",\n                onLoad: e => this.state.resizeObserver.observe(e.currentTarget)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 128,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(RoundTimer, {\n                className: \"background-wrapper\",\n                time: this.props.questionInfo.timeLimit,\n                timerSize: this.state.targetTimerSize - 60\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 137,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 124,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"AnsweringMC-muti-wrapper\",\n            children: this.props.questionInfo.choices.map((value, index) => {\n              return /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"AnsweringsMC-button\",\n                onClick: () => {\n                  this.setState({\n                    userAnswer: index\n                  }, () => {\n                    console.log(this.state.userAnswer);\n                    this.props.connection.send({\n                      method: \"req\",\n                      type: \"answer_question\",\n                      payload: {\n                        choice: this.state.userAnswer,\n                        currentQuestionCheck: this.props.currentQuestionProps\n                      }\n                    });\n                  });\n                  console.log(this.props.currentQuestionProps);\n                },\n                style: this.state.changeColor === 1 ? {\n                  border: \"7px solid green\"\n                } : this.state.changeColor === 2 ? {\n                  border: \"7px solid red\"\n                } : {\n                  border: \"7px solid #4ed02c\"\n                },\n                children: value\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 149,\n                columnNumber: 19\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nAnswering_MC.defaultProps = {\n  question: \"2 x 2 = ?\",\n  choices: [\"What time is it? dasfadsadsfasdffhjkhjkjkhjklhjg\", \"What time is it? dasfadsadsfasdffhjkhjkjkhjklhjg\", \"What time is it? dasfadsadsfasdffhjkhjkjkhjklhjg\", \"What time is it? dasfadsadsfasdffhjkhjkjkhjklhjg\", \"What time is it? dasfadsadsfasdffhjkhjkjkhjklhjg\", \"What time is it? dasfadsadsfasdffhjkhjkjkhjklhjg\"],\n  timeLimit: 120\n};\nexport default Answering_MC;","map":{"version":3,"sources":["/Users/mac/Desktop/Nako/nako/src/desktop/AnsweringMC/answering_MultipleChoice.tsx"],"names":["React","RoundTimer","Answering_MC","Component","constructor","props","correctAnswer","e","state","imgRef","createRef","targetTimerSize","resizeObserver","ResizeObserver","entries","entry","target","current","setState","contentRect","height","userAnswer","changeColor","componentWillUnmount","disconnect","componentDidUpdate","Props","undefined","console","log","connection","send","method","type","payload","choice","currentQuestionCheck","currentQuestionProps","render","questionInfo","question","TimerBack","observe","currentTarget","timeLimit","choices","map","value","index","border","defaultProps"],"mappings":"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","sourcesContent":["import * as React from \"react\";\nimport \"./AnsweringMC.scss\";\nimport RoundTimer from \"../RoundTimer/RoundTimer\";\nimport TimerBack from \"./Group_818.svg\";\nimport NakoAPI, {\n  QuestionInfo,\n  QuestionEndRequest,\n} from \"../../modules/websocket-messages\";\n\nexport interface Props {\n  correctAnswer?: QuestionEndRequest | undefined;\n  connection: NakoAPI;\n  questionInfo: QuestionInfo;\n  currentQuestionProps: number;\n}\n\ninterface State {\n  imgRef: React.RefObject<HTMLImageElement>;\n  targetTimerSize: number;\n  resizeObserver: ResizeObserver;\n  userAnswer: number;\n  changeColor: number;\n}\n\nclass Answering_MC extends React.Component<Props, State> {\n  static defaultProps = {\n    question: \"2 x 2 = ?\",\n    choices: [\n      \"What time is it? dasfadsadsfasdffhjkhjkjkhjklhjg\",\n      \"What time is it? dasfadsadsfasdffhjkhjkjkhjklhjg\",\n      \"What time is it? dasfadsadsfasdffhjkhjkjkhjklhjg\",\n      \"What time is it? dasfadsadsfasdffhjkhjkjkhjklhjg\",\n      \"What time is it? dasfadsadsfasdffhjkhjkjkhjklhjg\",\n      \"What time is it? dasfadsadsfasdffhjkhjkjkhjklhjg\",\n    ],\n    timeLimit: 120,\n  };\n\n  constructor(props: Props) {\n    super(props);\n\n    this.state = {\n      imgRef: React.createRef<HTMLImageElement>(),\n      targetTimerSize: 0,\n      resizeObserver: new ResizeObserver((entries) => {\n        for (const entry of entries) {\n          if (entry.target === this.state.imgRef.current) {\n            this.setState({ targetTimerSize: entry.contentRect.height - 12 });\n          }\n        }\n      }),\n      userAnswer: 7,\n      changeColor: 0,\n    };\n  }\n\n  componentWillUnmount() {\n    this.state.resizeObserver.disconnect();\n  }\n\n  componentDidUpdate(Props: Props) {\n    if (\n      this.props.correctAnswer?.correctAnswer !== undefined &&\n      this.state.userAnswer !== 7\n    ) {\n      if (this.props.correctAnswer?.correctAnswer === this.state.userAnswer) {\n        console.log(\"asdasdasd\");\n        this.props.connection.send({\n          method: \"req\",\n          type: \"answer_question\",\n          payload: {\n            choice: this.state.userAnswer,\n            currentQuestionCheck: this.props.currentQuestionProps,\n          },\n        });\n\n        this.setState({ changeColor: 1 });\n      } else {\n        this.props.connection.send({\n          method: \"req\",\n          type: \"answer_question\",\n          payload: {\n            choice: this.state.userAnswer,\n            currentQuestionCheck: this.props.currentQuestionProps,\n          },\n        });\n        this.setState({ changeColor: 2 });\n      }\n    }\n  }\n\n  correctAnswer = (e: number) => {};\n\n  render() {\n    return (\n      <div className=\"AnsweringMC-background-wrapper\">\n        <div className=\"AnsweringMC-Grid-wrapper\">\n          {/*The left grid*/}\n          <div className=\"AnsweringMC-left\">\n            <div className=\"AnsweringMC-left-inline\">\n              <div className=\"AnsweringMC-back-box\">\n                <button className=\"AnsweringMC-back-button\">\n                  <span className=\"arrow-left\" />\n                  <span>Back</span>\n                </button>\n                <div className=\"AnsweringMC-left-flex\">\n                  <p className=\"AnsweringMC-question-content\">\n                    {this.props.questionInfo.question}\n                  </p>\n                  <div className=\"AnsweringMC-left-icon-box\">\n                    <p className=\"AnsweringMC-question-icon1\">Answer</p>\n                    <p className=\"AnsweringMC-question-icon2\">Answer</p>\n                  </div>\n                  <p className=\"AnsweringMC-question-text\">\n                    Click to choose the answer\n                  </p>\n                </div>\n              </div>\n            </div>\n          </div>\n          {/*The right grid*/}\n          <div className=\"AnsweringMC-right\">\n            <div className=\"AnsweringMC-right-timer-box\">\n              <div\n                className=\"\n                 AnsweringMC-Right-timer-background-wrapper\"\n              >\n                <img\n                  ref={this.state.imgRef}\n                  className=\"AnsweringMC-right-timer-background\"\n                  src={TimerBack}\n                  alt=\"I am\"\n                  onLoad={(e) =>\n                    this.state.resizeObserver.observe(e.currentTarget)\n                  }\n                />\n                <RoundTimer\n                  className=\"background-wrapper\"\n                  time={this.props.questionInfo.timeLimit}\n                  timerSize={this.state.targetTimerSize - 60}\n                />\n              </div>\n              {/* <div className=\"AnsweringMC-Timer\">\n              </div> */}\n            </div>\n            <div className=\"AnsweringMC-muti-wrapper\">\n              {this.props.questionInfo.choices.map((value, index) => {\n                return (\n                  <button\n                    className=\"AnsweringsMC-button\"\n                    key={index}\n                    onClick={() => {\n                      this.setState({ userAnswer: index }, () => {\n                        console.log(this.state.userAnswer);\n\n                        this.props.connection.send({\n                          method: \"req\",\n                          type: \"answer_question\",\n                          payload: {\n                            choice: this.state.userAnswer,\n                            currentQuestionCheck: this.props\n                              .currentQuestionProps,\n                          },\n                        });\n                      });\n                      console.log(this.props.currentQuestionProps);\n                    }}\n                    style={\n                      this.state.changeColor === 1\n                        ? { border: \"7px solid green\" }\n                        : this.state.changeColor === 2\n                        ? { border: \"7px solid red\" }\n                        : { border: \"7px solid #4ed02c\" }\n                    }\n                  >\n                    {value}\n                  </button>\n                );\n              })}\n            </div>\n          </div>\n        </div>\n        {/* <div className=\"warn\">content: \"mobile not supported yet\";</div> */}\n      </div>\n    );\n  }\n}\n\nexport default Answering_MC;\n"]},"metadata":{},"sourceType":"module"}