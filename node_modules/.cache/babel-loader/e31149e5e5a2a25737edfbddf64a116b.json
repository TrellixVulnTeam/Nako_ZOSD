{"ast":null,"code":"var _jsxFileName = \"/Users/mac/Desktop/Nako/nako/src/desktop/Answering(MC)/answering(MultipleChoice).tsx\";\nimport * as React from \"react\";\nimport \"./AnsweringMC.scss\";\nimport RoundTimer from \"../RoundTimer/RoundTimer\";\nimport TimerBack from \"./Group_818.svg\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Answering_MC extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.correctAnswer = e => {};\n\n    this.state = {\n      imgRef: /*#__PURE__*/React.createRef(),\n      targetTimerSize: 0,\n      resizeObserver: new ResizeObserver(entries => {\n        for (const entry of entries) {\n          if (entry.target === this.state.imgRef.current) {\n            this.setState({\n              targetTimerSize: entry.contentRect.height - 12\n            });\n          }\n        }\n      })\n    };\n  }\n\n  componentWillUnmount() {\n    this.state.resizeObserver.disconnect();\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"AnsweringMC-background-wrapper\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"AnsweringMC-Grid-wrapper\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"AnsweringMC-left\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"AnsweringMC-left-inline\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"AnsweringMC-back-box\",\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"AnsweringMC-back-button\",\n                children: \"Back\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 64,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"AnsweringMC-left-flex\",\n                children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"AnsweringMC-question-content\",\n                  children: this.props.question\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 66,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"AnsweringMC-left-icon-box\",\n                  children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                    className: \"AnsweringMC-question-icon1\",\n                    children: \"Answer\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 70,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                    className: \"AnsweringMC-question-icon2\",\n                    children: \"Answer\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 71,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 69,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"AnsweringMC-question-text\",\n                  children: \"Click to choose the answer\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 73,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 65,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"AnsweringMC-right\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"AnsweringMC-right-timer-box\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \" AnsweringMC-Right-timer-background-wrapper\",\n              children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                ref: this.state.imgRef,\n                className: \"AnsweringMC-right-timer-background\",\n                src: TimerBack,\n                alt: \"I am\",\n                onLoad: e => this.state.resizeObserver.observe(e.currentTarget)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 87,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(RoundTimer, {\n                className: \"background-wrapper\",\n                time: this.props.timeLimit,\n                timerSize: this.state.targetTimerSize - 60\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 96,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"AnsweringMC-muti-wrapper\",\n            children: this.props.choices.map(value => {\n              return /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"AnsweringsMC-button\",\n                children: value\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 107,\n                columnNumber: 24\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nAnswering_MC.defaultProps = {\n  question: \"2 x 2 = ?\",\n  choices: [\"What time is it? dasfadsadsfasdffhjkhjkjkhjklhjg\", \"What time is it? dasfadsadsfasdffhjkhjkjkhjklhjg\", \"What time is it? dasfadsadsfasdffhjkhjkjkhjklhjg\", \"What time is it? dasfadsadsfasdffhjkhjkjkhjklhjg\", \"What time is it? dasfadsadsfasdffhjkhjkjkhjklhjg\", \"What time is it? dasfadsadsfasdffhjkhjkjkhjklhjg\"],\n  timeLimit: 120,\n  CoectAnswer: 1\n};\nexport default Answering_MC;","map":{"version":3,"sources":["/Users/mac/Desktop/Nako/nako/src/desktop/Answering(MC)/answering(MultipleChoice).tsx"],"names":["React","RoundTimer","Answering_MC","Component","constructor","props","correctAnswer","e","state","imgRef","createRef","targetTimerSize","resizeObserver","ResizeObserver","entries","entry","target","current","setState","contentRect","height","componentWillUnmount","disconnect","render","question","TimerBack","observe","currentTarget","timeLimit","choices","map","value","defaultProps","CoectAnswer"],"mappings":"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","sourcesContent":["import * as React from \"react\";\nimport \"./AnsweringMC.scss\";\nimport RoundTimer from \"../RoundTimer/RoundTimer\";\nimport TimerBack from \"./Group_818.svg\";\n\nexport interface Props {\n  question: string;\n  choices: string[];\n  timeLimit: number;\n  CoectAnswer: number;\n}\n\ninterface State {\n  imgRef: React.RefObject<HTMLImageElement>;\n  targetTimerSize: number;\n  resizeObserver: ResizeObserver;\n}\n\nclass Answering_MC extends React.Component<Props, State> {\n  static defaultProps = {\n    question: \"2 x 2 = ?\",\n    choices: [\n      \"What time is it? dasfadsadsfasdffhjkhjkjkhjklhjg\",\n      \"What time is it? dasfadsadsfasdffhjkhjkjkhjklhjg\",\n      \"What time is it? dasfadsadsfasdffhjkhjkjkhjklhjg\",\n      \"What time is it? dasfadsadsfasdffhjkhjkjkhjklhjg\",\n      \"What time is it? dasfadsadsfasdffhjkhjkjkhjklhjg\",\n      \"What time is it? dasfadsadsfasdffhjkhjkjkhjklhjg\",\n    ],\n    timeLimit: 120,\n    CoectAnswer: 1,\n  };\n\n  constructor(props: Props) {\n    super(props);\n\n    this.state = {\n      imgRef: React.createRef<HTMLImageElement>(),\n      targetTimerSize: 0,\n      resizeObserver: new ResizeObserver((entries) => {\n        for (const entry of entries) {\n          if (entry.target === this.state.imgRef.current) {\n            this.setState({ targetTimerSize: entry.contentRect.height - 12 });\n          }\n        }\n      }),\n    };\n  }\n\n  componentWillUnmount() {\n    this.state.resizeObserver.disconnect();\n  }\n\n  correctAnswer = (e: number) => {};\n\n  render() {\n    return (\n      <div className=\"AnsweringMC-background-wrapper\">\n        <div className=\"AnsweringMC-Grid-wrapper\">\n          {/*The left grid*/}\n          <div className=\"AnsweringMC-left\">\n            <div className=\"AnsweringMC-left-inline\">\n              <div className=\"AnsweringMC-back-box\">\n                <button className=\"AnsweringMC-back-button\">Back</button>\n                <div className=\"AnsweringMC-left-flex\">\n                  <p className=\"AnsweringMC-question-content\">\n                    {this.props.question}\n                  </p>\n                  <div className=\"AnsweringMC-left-icon-box\">\n                    <p className=\"AnsweringMC-question-icon1\">Answer</p>\n                    <p className=\"AnsweringMC-question-icon2\">Answer</p>\n                  </div>\n                  <p className=\"AnsweringMC-question-text\">\n                    Click to choose the answer\n                  </p>\n                </div>\n              </div>\n            </div>\n          </div>\n          {/*The right grid*/}\n          <div className=\"AnsweringMC-right\">\n            <div className=\"AnsweringMC-right-timer-box\">\n              <div\n                className=\"\n                 AnsweringMC-Right-timer-background-wrapper\"\n              >\n                <img\n                  ref={this.state.imgRef}\n                  className=\"AnsweringMC-right-timer-background\"\n                  src={TimerBack}\n                  alt=\"I am\"\n                  onLoad={(e) =>\n                    this.state.resizeObserver.observe(e.currentTarget)\n                  }\n                />\n                <RoundTimer\n                  className=\"background-wrapper\"\n                  time={this.props.timeLimit}\n                  timerSize={this.state.targetTimerSize - 60}\n                />\n              </div>\n              {/* <div className=\"AnsweringMC-Timer\">\n              </div> */}\n            </div>\n            <div className=\"AnsweringMC-muti-wrapper\">\n              {this.props.choices.map((value) => {\n                return <button className=\"AnsweringsMC-button\">{value}</button>;\n              })}\n            </div>\n          </div>\n        </div>\n        {/* <div className=\"warn\">content: \"mobile not supported yet\";</div> */}\n      </div>\n    );\n  }\n}\n\nexport default Answering_MC;\n"]},"metadata":{},"sourceType":"module"}