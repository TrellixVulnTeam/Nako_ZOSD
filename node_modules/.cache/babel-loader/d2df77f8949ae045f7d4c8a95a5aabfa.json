{"ast":null,"code":"var _jsxFileName = \"/Users/mac/Desktop/Nako/nako/src/desktop/lobby/lobby.tsx\";\nimport React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { CSSTransition } from \"react-transition-group\";\nimport { animate, delay } from \"../../utils/utils\";\nimport styles from \"./lobby.module.scss\";\nimport Logo from \"../../modules/logo/logo\";\nimport GameStartCountdown from \"./game-start-countdown\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nvar ProgressPhase;\n\n(function (ProgressPhase) {\n  ProgressPhase[ProgressPhase[\"Name\"] = 0] = \"Name\";\n  ProgressPhase[ProgressPhase[\"LobbyID\"] = 1] = \"LobbyID\";\n  ProgressPhase[ProgressPhase[\"Lobby\"] = 2] = \"Lobby\";\n  ProgressPhase[ProgressPhase[\"Starting\"] = 3] = \"Starting\";\n  ProgressPhase[ProgressPhase[\"Ended\"] = 4] = \"Ended\";\n})(ProgressPhase || (ProgressPhase = {}));\n\nvar ErrorMessage;\n\n(function (ErrorMessage) {\n  ErrorMessage[\"Generic\"] = \"An error occurred while your request was being processed.\";\n  ErrorMessage[\"TimedOut\"] = \"Your request was timed out. Please try again.\";\n  ErrorMessage[\"MissingLobby\"] = \"The provided lobby ID does not exist.\";\n})(ErrorMessage || (ErrorMessage = {}));\n\nclass Lobby extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      name: this.props.accountInfo.name,\n      lobbyIDInput: \"\",\n      currentProgress: this.props.accountInfo.role === \"student\" ? ProgressPhase.Name : ProgressPhase.LobbyID,\n      inputParams: [{\n        className: \"box-shadow\",\n        type: \"text\",\n        placeholder: \"Enter name...\",\n        defaultValue: this.props.accountInfo.name,\n        onChange: e => this.setState({\n          name: e.target.value\n        })\n      }, {\n        className: \"box-shadow hide-number-buttons\",\n        type: \"number\",\n        placeholder: \"Enter game ID\",\n        onChange: e => this.setState({\n          lobbyIDInput: e.target.value\n        })\n      }],\n      inputRef: /*#__PURE__*/React.createRef(),\n      inputTransitioning: false,\n      error: {\n        occurred: false,\n        message: ErrorMessage.Generic\n      },\n      transitionedToLobby: false\n    };\n    this.props.connection.subscribe(\"req\", \"keep_alive\", () => this.props.connection.send({\n      method: \"res\",\n      type: \"keep_alive\",\n      payload: {\n        name: this.state.name,\n        lobbyID: this.state.lobbyInfo.id\n      }\n    }));\n\n    if (this.props.accountInfo.role === \"teacher\") {\n      this.props.connection.send({\n        method: \"req\",\n        type: \"lobby_create\",\n        payload: null\n      }).then(payload => {\n        this.props.connection.send({\n          method: \"req\",\n          type: \"lobby_join\",\n          payload: {\n            lobbyID: payload.lobbyID,\n            accountInfo: this.props.accountInfo\n          }\n        }).then(payload => {\n          if (payload.lobbyInfo) {\n            this.setState({\n              lobbyInfo: payload.lobbyInfo\n            });\n          } else {\n            console.error(\"Could not join lobby after lobby creation.\");\n          }\n        });\n      });\n    }\n  }\n\n  lobbyNotFoundHandler(error) {\n    console.log(error);\n  } // For student`\n  // eslint-disable-next-line camelcase\n\n\n  async s_formSubmitHandler(e, ms) {\n    e.preventDefault();\n    this.setState({\n      error: { ...this.state.error,\n        occurred: false\n      }\n    });\n\n    const triggerNextProgressPhase = () => {\n      if (this.state.currentProgress < ProgressPhase.Ended) {\n        this.setState({\n          currentProgress: this.state.currentProgress + 1\n        });\n      }\n    };\n\n    const invalidAnimation = () => {\n      animate(\"shake\", this.state.inputRef.current, 500);\n    };\n\n    const triggerDelay = async () => {\n      if (ms) {\n        this.setState({\n          inputTransitioning: true\n        });\n        await delay(ms);\n        this.setState({\n          inputTransitioning: false\n        });\n      }\n    };\n\n    switch (this.state.currentProgress) {\n      case ProgressPhase.Name:\n        if (this.state.name !== \"\") {\n          await triggerDelay();\n          triggerNextProgressPhase();\n        } else {\n          invalidAnimation();\n        }\n\n        break;\n\n      case ProgressPhase.LobbyID:\n        if (this.state.lobbyIDInput !== \"\") {\n          this.props.connection.send({\n            method: \"req\",\n            type: \"lobby_join\",\n            payload: {\n              lobbyID: Number(this.state.lobbyIDInput),\n              accountInfo: { ...this.props.accountInfo,\n                name: this.state.name\n              }\n            }\n          }, 10000).then(async res => {\n            if (res) {\n              if (res.lobbyInfo) {\n                var _this$props$onEntered, _this$props;\n\n                this.setState({\n                  lobbyInfo: res.lobbyInfo\n                });\n                (_this$props$onEntered = (_this$props = this.props).onEnteredLobby) === null || _this$props$onEntered === void 0 ? void 0 : _this$props$onEntered.call(_this$props);\n                this.props.connection.subscribe(\"res\", \"lobby_update\", msg => {\n                  this.setState({\n                    lobbyInfo: msg.lobbyInfo\n                  });\n                });\n                this.props.connection.subscribe(\"req\", \"game_start\").then(msg => {\n                  this.setState({\n                    gameInfo: msg.gameInfo\n                  });\n                  this.props.connection.send({\n                    method: \"res\",\n                    type: \"game_start\",\n                    payload: null\n                  });\n                  triggerNextProgressPhase();\n                });\n                await triggerDelay();\n                triggerNextProgressPhase();\n              } else {\n                this.setState({\n                  error: {\n                    occurred: true,\n                    message: ErrorMessage.MissingLobby\n                  }\n                });\n                console.log(res.error);\n              }\n            } else {\n              this.setState({\n                error: {\n                  occurred: true,\n                  message: ErrorMessage.TimedOut\n                }\n              });\n            }\n          }).catch(e => {\n            console.log(e);\n            this.setState({\n              error: {\n                occurred: true,\n                message: ErrorMessage.Generic\n              }\n            });\n          });\n        } else {\n          invalidAnimation();\n        }\n\n        break;\n\n      default:\n        break;\n    }\n  } // For teacher\n  // eslint-disable-next-line camelcase\n\n\n  t_onEnterButtonHandler() {\n    var _this$props$onEntered2, _this$props2;\n\n    (_this$props$onEntered2 = (_this$props2 = this.props).onEnteredLobby) === null || _this$props$onEntered2 === void 0 ? void 0 : _this$props$onEntered2.call(_this$props2);\n    this.setState({\n      currentProgress: ProgressPhase.Lobby\n    });\n    this.props.connection.subscribe(\"res\", \"lobby_update\", payload => {\n      this.setState({\n        lobbyInfo: payload.lobbyInfo\n      });\n    });\n    this.props.connection.subscribe(\"req\", \"game_start\").then(payload => {\n      this.setState({\n        currentProgress: ProgressPhase.Starting,\n        gameInfo: payload.gameInfo\n      });\n      this.props.connection.send({\n        method: \"res\",\n        type: \"game_start\",\n        payload: null\n      });\n    });\n  } // eslint-disable-next-line camelcase\n\n\n  t_startGameButtonHandler() {\n    this.props.connection.send({\n      method: \"req\",\n      type: \"game_start\",\n      payload: {\n        gameInfo: {\n          role: \"teacher\",\n          questions: [{\n            question: \"TypeScript is a(n) ________ of JavaScript.\",\n            choices: [\"subset\", \"superset\", \"upperset\", \"inclusion\"],\n            timeLimit: 10,\n            answer: 1,\n            type: \"multiple_choice\"\n          }, {\n            question: \"To get changes from a remote repository, the user needs to run:\",\n            choices: [\"npm i\", \"git merge\", \"git commit\", \"git fetch\"],\n            timeLimit: 10,\n            answer: 3,\n            type: \"multiple_choice\"\n          }]\n        }\n      }\n    });\n  }\n\n  render() {\n    const {\n      connection,\n      accountInfo,\n      onGameStart,\n      onEnteredLobby,\n      ...rest\n    } = this.props;\n    return /*#__PURE__*/_jsxDEV(\"div\", { ...rest,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles[\"lobby-container\"],\n        children: [/*#__PURE__*/_jsxDEV(Link, {\n          to: \"/profile\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            id: styles.back,\n            className: \"box-shadow\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"arrow-left\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 268,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"Back\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 269,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 267,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 266,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(CSSTransition, {\n          in: this.state.lobbyInfo !== undefined && this.state.currentProgress >= ProgressPhase.Lobby,\n          timeout: 500,\n          classNames: {\n            enter: styles[\"background-top-enter\"],\n            enterActive: styles[\"background-top-enter-active\"],\n            enterDone: styles[\"background-top-enter-done\"],\n            exit: styles[\"background-top-exit\"],\n            exitActive: styles[\"background-top-exit-active\"],\n            exitDone: styles[\"background-top-exit-done\"]\n          },\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            id: this.state.transitionedToLobby ? styles.background : styles[\"background-top\"],\n            className: this.props.accountInfo.role === \"student\" ? styles.student : styles.teacher,\n            children: [/*#__PURE__*/_jsxDEV(CSSTransition, {\n              in: this.state.lobbyInfo === undefined || !(this.state.currentProgress >= ProgressPhase.Lobby),\n              timeout: 500,\n              classNames: {\n                enter: styles[\"title-container-enter\"],\n                enterActive: styles[\"title-container-enter-active\"],\n                enterDone: styles[\"title-container-enter-done\"],\n                exit: styles[\"title-container-exit\"],\n                exitActive: styles[\"title-container-exit-active\"],\n                exitDone: styles[\"title-container-exit-done\"]\n              },\n              onExited: () => this.setState({\n                transitionedToLobby: true\n              }),\n              mountOnEnter: true,\n              unmountOnExit: true,\n              children: /*#__PURE__*/_jsxDEV(Logo, {\n                id: styles[\"title-container\"],\n                role: this.props.accountInfo.role\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 310,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 297,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(CSSTransition, {\n              in: this.state.transitionedToLobby && this.state.lobbyInfo !== undefined,\n              timeout: 500,\n              classNames: {\n                enter: styles[\"lobby-info-container-enter\"],\n                enterActive: styles[\"lobby-info-container-enter-active\"],\n                enterDone: styles[\"lobby-info-container-enter-done\"],\n                exit: styles[\"lobby-info-container-exit\"],\n                exitActive: styles[\"lobby-info-container-exit-active\"],\n                exitDone: styles[\"lobby-info-container-exit-done\"]\n              },\n              onExit: () => this.setState({\n                transitionedToLobby: false\n              }),\n              mountOnEnter: true,\n              unmountOnExit: true,\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                id: styles[\"lobby-info-container\"],\n                children: this.state.currentProgress !== ProgressPhase.Starting ? /*#__PURE__*/_jsxDEV(_Fragment, {\n                  children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                    children: [this.props.accountInfo.role === \"teacher\" ? \"Students in lobby\" : \"You are playing with\", \":\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 329,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    id: styles[\"player-list\"],\n                    children: this.state.lobbyInfo !== undefined ? this.state.lobbyInfo.players.map((player, i) => /*#__PURE__*/_jsxDEV(\"p\", {\n                      children: player\n                    }, i, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 331,\n                      columnNumber: 112\n                    }, this)) : null\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 330,\n                    columnNumber: 23\n                  }, this), this.props.accountInfo.role === \"teacher\" ? /*#__PURE__*/_jsxDEV(\"button\", {\n                    onClick: () => this.t_startGameButtonHandler(),\n                    children: \"Let's begin!\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 333,\n                    columnNumber: 68\n                  }, this) : null]\n                }, void 0, true) : /*#__PURE__*/_jsxDEV(GameStartCountdown, {\n                  onCountdownEnd: () => {\n                    if (this.state.gameInfo) {\n                      console.log(\"Game starting\");\n                      this.props.onGameStart(this.state.gameInfo);\n                    } else {\n                      throw new Error(\"Game start was triggered but game info was missing.\");\n                    }\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 335,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 326,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 312,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 296,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 284,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(CSSTransition, {\n          in: this.state.lobbyInfo === undefined || !(this.state.currentProgress >= ProgressPhase.Lobby),\n          timeout: 500,\n          classNames: {\n            enter: styles[\"background-bottom-enter\"],\n            enterActive: styles[\"background-bottom-enter-active\"],\n            enterDone: styles[\"background-bottom-enter-done\"],\n            exit: styles[\"background-bottom-exit\"],\n            exitActive: styles[\"background-bottom-exit-active\"],\n            exitDone: styles[\"background-bottom-exit-done\"]\n          },\n          unmountOnExit: true,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            id: styles[\"background-bottom\"],\n            className: `box-shadow-inner ${this.props.accountInfo.role === \"student\" ? styles.student : styles.teacher}`,\n            children: this.props.accountInfo.role === \"teacher\" ? /*#__PURE__*/_jsxDEV(\"div\", {\n              id: styles[\"input-container\"],\n              children: this.state.lobbyInfo ? /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  children: [\"Your lobby is ready! ID: \", this.state.lobbyInfo.id]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 368,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  id: styles.submit,\n                  className: `box-shadow ${styles.teacher}`,\n                  onClick: () => this.t_onEnterButtonHandler(),\n                  children: \"Start\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 369,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true) : /*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"Creating your lobby...\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 371,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 365,\n              columnNumber: 17\n            }, this) : /*#__PURE__*/_jsxDEV(\"form\", {\n              id: styles[\"input-container\"],\n              onSubmit: e => this.s_formSubmitHandler(e, this.state.currentProgress === ProgressPhase.Name ? 600 : 0),\n              children: [/*#__PURE__*/_jsxDEV(CSSTransition, {\n                in: !this.state.inputTransitioning,\n                timeout: 500,\n                classNames: \"fade-rtl\",\n                children: /*#__PURE__*/_jsxDEV(\"input\", {\n                  ref: this.state.inputRef,\n                  id: styles.input,\n                  ...this.state.inputParams[this.state.currentProgress]\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 376,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 375,\n                columnNumber: 19\n              }, this), this.state.error.occurred ? /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"error\",\n                children: this.state.error.message\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 382,\n                columnNumber: 48\n              }, this) : null, /*#__PURE__*/_jsxDEV(\"button\", {\n                id: styles.submit,\n                className: `box-shadow ${styles.student}`,\n                type: \"submit\",\n                children: \"Enter\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 383,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 374,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 363,\n            columnNumber: 12\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 350,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 265,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 264,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default Lobby;","map":{"version":3,"sources":["/Users/mac/Desktop/Nako/nako/src/desktop/lobby/lobby.tsx"],"names":["React","Link","CSSTransition","animate","delay","styles","Logo","GameStartCountdown","ProgressPhase","ErrorMessage","Lobby","Component","constructor","props","state","name","accountInfo","lobbyIDInput","currentProgress","role","Name","LobbyID","inputParams","className","type","placeholder","defaultValue","onChange","e","setState","target","value","inputRef","createRef","inputTransitioning","error","occurred","message","Generic","transitionedToLobby","connection","subscribe","send","method","payload","lobbyID","lobbyInfo","id","then","console","lobbyNotFoundHandler","log","s_formSubmitHandler","ms","preventDefault","triggerNextProgressPhase","Ended","invalidAnimation","current","triggerDelay","Number","res","onEnteredLobby","msg","gameInfo","MissingLobby","TimedOut","catch","t_onEnterButtonHandler","Starting","t_startGameButtonHandler","questions","question","choices","timeLimit","answer","render","onGameStart","rest","back","undefined","enter","enterActive","enterDone","exit","exitActive","exitDone","background","student","teacher","players","map","player","i","Error","submit","input"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { CSSTransition } from \"react-transition-group\";\nimport { animate, delay } from \"../../utils/utils\";\nimport styles from \"./lobby.module.scss\";\nimport NakoAPI, { AccountRole, GameInfo, LobbyInfo } from \"../../modules/websocket-messages\";\nimport Logo from \"../../modules/logo/logo\";\nimport GameStartCountdown from \"./game-start-countdown\";\nimport { AccountInfo } from \"../../modules/account-info\";\n\nenum ProgressPhase {\n  Name,\n  LobbyID,\n  Lobby,\n  Starting,\n  Ended\n}\n\nenum ErrorMessage {\n  Generic = \"An error occurred while your request was being processed.\",\n  TimedOut = \"Your request was timed out. Please try again.\",\n  MissingLobby = \"The provided lobby ID does not exist.\"\n}\n\ninterface LobbyProps {\n  connection: NakoAPI;\n  accountInfo: AccountInfo;\n  onGameStart: (gameInfo: GameInfo<AccountRole>) => void;\n  onEnteredLobby?: () => void;\n}\n\ninterface LobbyStates {\n  name: string;\n  lobbyIDInput: string;\n  currentProgress: ProgressPhase;\n  inputParams: React.InputHTMLAttributes<HTMLInputElement>[];\n  inputRef: React.RefObject<HTMLInputElement>;\n  inputTransitioning: boolean;\n  error: {\n    occurred: boolean;\n    message: ErrorMessage;\n  };\n  transitionedToLobby: boolean;\n  lobbyInfo?: LobbyInfo;\n  gameInfo?: GameInfo<AccountRole>;\n}\n\nclass Lobby extends React.Component<LobbyProps & React.HTMLAttributes<HTMLDivElement>, LobbyStates> {\n  constructor(props: LobbyProps & React.HTMLAttributes<HTMLDivElement>) {\n    super(props);\n\n    this.state = {\n      name: this.props.accountInfo.name,\n      lobbyIDInput: \"\",\n      currentProgress: this.props.accountInfo.role === \"student\" ? ProgressPhase.Name : ProgressPhase.LobbyID,\n      inputParams: [{\n        className: \"box-shadow\",\n        type: \"text\",\n        placeholder: \"Enter name...\",\n        defaultValue: this.props.accountInfo.name,\n        onChange: e => this.setState({ name: e.target.value })\n      }, {\n        className: \"box-shadow hide-number-buttons\",\n        type: \"number\",\n        placeholder: \"Enter game ID\",\n        onChange: e => this.setState({ lobbyIDInput: e.target.value })\n      }],\n      inputRef: React.createRef<HTMLInputElement>(),\n      inputTransitioning: false,\n      error: {\n        occurred: false,\n        message: ErrorMessage.Generic\n      },\n      transitionedToLobby: false\n    };\n\n    this.props.connection.subscribe(\"req\", \"keep_alive\", () => this.props.connection.send({\n      method: \"res\",\n      type: \"keep_alive\",\n      payload: {\n        name: this.state.name,\n        lobbyID: this.state.lobbyInfo!.id\n      }\n    }));\n\n    if (this.props.accountInfo.role === \"teacher\") {\n      this.props.connection.send({\n        method: \"req\",\n        type: \"lobby_create\",\n        payload: null\n      }).then(payload => {\n        this.props.connection.send({\n          method: \"req\",\n          type: \"lobby_join\",\n          payload: {\n            lobbyID: payload.lobbyID,\n            accountInfo: this.props.accountInfo\n          }\n        }).then(payload => {\n          if (payload.lobbyInfo) {\n            this.setState({ lobbyInfo: payload.lobbyInfo });\n          } else {\n            console.error(\"Could not join lobby after lobby creation.\");\n          }\n        });\n      });\n    }\n  }\n\n  lobbyNotFoundHandler(error: string) {\n    console.log(error);\n  }\n\n  // For student`\n  // eslint-disable-next-line camelcase\n  async s_formSubmitHandler(e: React.FormEvent<HTMLFormElement>, ms?: number) {\n    e.preventDefault();\n    this.setState({ error: { ...this.state.error, occurred: false } });\n\n    const triggerNextProgressPhase = () => {\n      if (this.state.currentProgress < ProgressPhase.Ended) {\n        this.setState({ currentProgress: this.state.currentProgress + 1 });\n      }\n    };\n\n    const invalidAnimation = () => {\n      animate(\"shake\", this.state.inputRef.current!, 500);\n    };\n\n    const triggerDelay = async () => {\n      if (ms) {\n        this.setState({\n          inputTransitioning: true\n        });\n\n        await delay(ms);\n\n        this.setState({\n          inputTransitioning: false\n        });\n      }\n    };\n\n    switch (this.state.currentProgress) {\n      case ProgressPhase.Name:\n        if (this.state.name !== \"\") {\n          await triggerDelay();\n          triggerNextProgressPhase();\n        } else {\n          invalidAnimation();\n        }\n\n        break;\n      \n      case ProgressPhase.LobbyID:\n        if (this.state.lobbyIDInput !== \"\") {\n          this.props.connection.send({\n            method: \"req\",\n            type: \"lobby_join\",\n            payload: {\n              lobbyID: Number(this.state.lobbyIDInput),\n              accountInfo: {\n                ...this.props.accountInfo,\n                name: this.state.name\n              }\n            }\n          }, 10000).then(async res => {\n            if (res) {\n              if (res.lobbyInfo) {\n                this.setState({ lobbyInfo: res.lobbyInfo });\n                this.props.onEnteredLobby?.();\n\n                this.props.connection.subscribe(\"res\", \"lobby_update\", msg => {\n                  this.setState({ lobbyInfo: msg.lobbyInfo });\n                });\n\n                this.props.connection.subscribe(\"req\", \"game_start\").then(msg => {\n                  this.setState({ gameInfo: msg.gameInfo });\n\n                  this.props.connection.send({\n                    method: \"res\",\n                    type: \"game_start\",\n                    payload: null\n                  });\n\n                  triggerNextProgressPhase();\n                });\n\n                await triggerDelay();\n                triggerNextProgressPhase();\n              } else {\n                this.setState({ error: { occurred: true, message: ErrorMessage.MissingLobby } });\n                console.log(res.error);\n              }\n            } else {\n              this.setState({ error: { occurred: true, message: ErrorMessage.TimedOut } });\n            }\n          }).catch(e => {\n            console.log(e);\n            this.setState({ error: { occurred: true, message: ErrorMessage.Generic } });\n          });\n        } else {\n          invalidAnimation();\n        }\n        break;\n\n      default:\n        break;\n    }\n  }\n\n  // For teacher\n  // eslint-disable-next-line camelcase\n  t_onEnterButtonHandler() {\n    this.props.onEnteredLobby?.();\n\n    this.setState({ currentProgress: ProgressPhase.Lobby });\n\n    this.props.connection.subscribe(\"res\", \"lobby_update\", payload => {\n      this.setState({ lobbyInfo: payload.lobbyInfo });\n    });\n\n    this.props.connection.subscribe(\"req\", \"game_start\").then(payload => {\n      this.setState({ currentProgress: ProgressPhase.Starting, gameInfo: payload.gameInfo });\n\n      this.props.connection.send({\n        method: \"res\",\n        type: \"game_start\",\n        payload: null\n      });\n    });\n  }\n\n  // eslint-disable-next-line camelcase\n  t_startGameButtonHandler() {\n    this.props.connection.send({\n      method: \"req\",\n      type: \"game_start\",\n      payload: {\n        gameInfo: {\n          role: \"teacher\",\n          questions: [{\n            question: \"TypeScript is a(n) ________ of JavaScript.\",\n            choices: [\"subset\", \"superset\", \"upperset\", \"inclusion\"],\n            timeLimit: 10,\n            answer: 1,\n            type: \"multiple_choice\"\n          }, {\n            question: \"To get changes from a remote repository, the user needs to run:\",\n            choices: [\"npm i\", \"git merge\", \"git commit\", \"git fetch\"],\n            timeLimit: 10,\n            answer: 3,\n            type: \"multiple_choice\"\n          }]\n        }\n      }\n    });\n  }\n  \n  render() {\n    const { connection, accountInfo, onGameStart, onEnteredLobby, ...rest } = this.props;\n\n    return (\n      <div {...rest}>\n        <div className={styles[\"lobby-container\"]}>\n          <Link to=\"/profile\">\n            <button id={styles.back} className=\"box-shadow\" >\n              <span className={\"arrow-left\"}/>\n              <span>Back</span>\n            </button>\n          </Link>\n          {/* <button\n            style={{position: \"absolute\", zIndex: 1, bottom: 0, right: 0}}\n            onClick={() => this.setState({\n              lobbyInfo: this.state.lobbyInfo ? undefined : {\n                id: 0,\n                players: [this.state.name, \"Test1\", \"Test2\", \"Test3\", \"Test4\", \"Test5\", \"Test6\", \"Test7\", \"Test8\", \"Test9\", \"Test10\", \"Test11\", \"Test12\"]\n              },\n              currentProgress: this.state.currentProgress === ProgressPhase.Lobby ? ProgressPhase.Name : ProgressPhase.Lobby\n            })}\n          >\n            Test\n          </button> */}\n          <CSSTransition\n            in={this.state.lobbyInfo !== undefined && this.state.currentProgress >= ProgressPhase.Lobby}\n            timeout={500}\n            classNames={{\n              enter: styles[\"background-top-enter\"],\n              enterActive: styles[\"background-top-enter-active\"],\n              enterDone: styles[\"background-top-enter-done\"],\n              exit: styles[\"background-top-exit\"],\n              exitActive: styles[\"background-top-exit-active\"],\n              exitDone: styles[\"background-top-exit-done\"]\n            }}\n          >\n            <div id={this.state.transitionedToLobby ? styles.background : styles[\"background-top\"]} className={this.props.accountInfo.role === \"student\" ? styles.student : styles.teacher}>\n              <CSSTransition\n                in={this.state.lobbyInfo === undefined || !(this.state.currentProgress >= ProgressPhase.Lobby)} timeout={500}\n                classNames={{\n                  enter: styles[\"title-container-enter\"],\n                  enterActive: styles[\"title-container-enter-active\"],\n                  enterDone: styles[\"title-container-enter-done\"],\n                  exit: styles[\"title-container-exit\"],\n                  exitActive: styles[\"title-container-exit-active\"],\n                  exitDone: styles[\"title-container-exit-done\"]\n                }}\n                onExited={() => this.setState({ transitionedToLobby: true })}\n                mountOnEnter unmountOnExit\n              >\n                <Logo id={styles[\"title-container\"]} role={this.props.accountInfo.role}/>\n              </CSSTransition>\n              <CSSTransition\n                in={this.state.transitionedToLobby && this.state.lobbyInfo !== undefined}\n                timeout={500}\n                classNames={{\n                  enter: styles[\"lobby-info-container-enter\"],\n                  enterActive: styles[\"lobby-info-container-enter-active\"],\n                  enterDone: styles[\"lobby-info-container-enter-done\"],\n                  exit: styles[\"lobby-info-container-exit\"],\n                  exitActive: styles[\"lobby-info-container-exit-active\"],\n                  exitDone: styles[\"lobby-info-container-exit-done\"]\n                }}\n                onExit={() => this.setState({ transitionedToLobby: false })}\n                mountOnEnter unmountOnExit\n              >\n                <div id={styles[\"lobby-info-container\"]}>\n                  {this.state.currentProgress !== ProgressPhase.Starting ?\n                    <>\n                      <h3>{this.props.accountInfo.role === \"teacher\" ? \"Students in lobby\" : \"You are playing with\"}:</h3>\n                      <div id={styles[\"player-list\"]}>\n                        {this.state.lobbyInfo !== undefined ? this.state.lobbyInfo!.players.map((player, i) => <p key={i}>{player}</p>) : null}\n                      </div>\n                      {this.props.accountInfo.role === \"teacher\" ? <button onClick={() => this.t_startGameButtonHandler()}>Let's begin!</button> : null}\n                    </> :\n                    <GameStartCountdown\n                      onCountdownEnd={() => {\n                        if (this.state.gameInfo) {\n                          console.log(\"Game starting\");\n                          this.props.onGameStart(this.state.gameInfo);\n                        } else {\n                          throw new Error(\"Game start was triggered but game info was missing.\");\n                        }\n                      }}\n                    />\n                  }\n                </div>\n              </CSSTransition>\n            </div>\n          </CSSTransition>\n          <CSSTransition\n            in={this.state.lobbyInfo === undefined || !(this.state.currentProgress >= ProgressPhase.Lobby)}\n            timeout={500}\n            classNames={{\n              enter: styles[\"background-bottom-enter\"],\n              enterActive: styles[\"background-bottom-enter-active\"],\n              enterDone: styles[\"background-bottom-enter-done\"],\n              exit: styles[\"background-bottom-exit\"],\n              exitActive: styles[\"background-bottom-exit-active\"],\n              exitDone: styles[\"background-bottom-exit-done\"]\n            }}\n            unmountOnExit\n          >\n           <div id={styles[\"background-bottom\"]} className={`box-shadow-inner ${this.props.accountInfo.role === \"student\" ? styles.student : styles.teacher}`}>\n              {this.props.accountInfo.role === \"teacher\" ?\n                <div id={styles[\"input-container\"]}>\n                  {this.state.lobbyInfo ?\n                    <>\n                      <span>Your lobby is ready! ID: {this.state.lobbyInfo.id}</span>\n                      <button id={styles.submit} className={`box-shadow ${styles.teacher}`} onClick={() => this.t_onEnterButtonHandler()}>Start</button>\n                    </> :\n                    <span>Creating your lobby...</span>\n                  }\n                </div> :\n                <form id={styles[\"input-container\"]} onSubmit={e => this.s_formSubmitHandler(e, this.state.currentProgress === ProgressPhase.Name ? 600 : 0)}>\n                  <CSSTransition in={!this.state.inputTransitioning} timeout={500} classNames=\"fade-rtl\">\n                    <input\n                      ref={this.state.inputRef}\n                      id={styles.input}\n                      {...this.state.inputParams[this.state.currentProgress]}\n                    />\n                  </CSSTransition>\n                  {this.state.error.occurred ? <p className=\"error\">{this.state.error.message}</p> : null}\n                  <button id={styles.submit} className={`box-shadow ${styles.student}`} type=\"submit\">Enter</button>\n                </form>\n              }\n            </div>\n          </CSSTransition>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Lobby;"]},"metadata":{},"sourceType":"module"}