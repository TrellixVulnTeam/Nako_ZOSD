{"ast":null,"code":"var _jsxFileName = \"/Users/mac/Desktop/Nako/nako/src/desktop/AnsweringMC/answeringModule.tsx\";\nimport * as React from \"react\";\nimport style from \"./AnsweringMC.module.scss\";\nimport RoundTimer from \"../RoundTimer/RoundTimer\";\nimport TimerBack from \"./Group_818.svg\";\nimport CorrectSound from \"./Nako Correct.wav\";\nimport WrongSound from \"./Nako Fail.wav\";\nimport MCModule from \"./MultipleChoiceModule\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass AnsweringModule extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.Play = music => {\n      let audio = new Audio(music);\n      audio.play();\n    };\n\n    this.Classify = e => {\n      if (e.type === \"multiple_choice\") {\n        return e.choices;\n      }\n    };\n\n    this.normalAnswerStyle = {\n      width: \"45%\",\n      maxHeight: \"50em\",\n      marginTop: \"3%\",\n      flexShrink: 1,\n      flexGrow: 1,\n      color: \"black\",\n      fontSize: \"1.6em\",\n      textAlign: \"center\",\n      padding: \"2%\",\n      borderRadius: \"50px\",\n      border: \"7px solid #4ed02c\",\n      background: \"white\",\n      boxShadow: \"10px 10px 10px rgba(0, 0, 0, 0.45),-10px -10px 10px rgba(255, 255, 255, 0.45)\",\n      transitionDuration: \"0.3s\",\n      outline: \"none\"\n    };\n    this.correctAnswerStyle = {\n      width: \"45%\",\n      maxHeight: \"50em\",\n      marginTop: \"3%\",\n      flexShrink: 1,\n      flexGrow: 1,\n      color: \"black\",\n      fontSize: \"1.6em\",\n      textAlign: \"center\",\n      padding: \"2%\",\n      borderRadius: \"50px\",\n      border: \"7px solid black\",\n      background: \"white\",\n      boxShadow: \"10px 10px 10px rgba(0, 0, 0, 0.45),-10px -10px 10px rgba(255, 255, 255, 0.45)\",\n      transitionDuration: \"0.3s\",\n      outline: \"none\"\n    };\n    this.wrongAnswerStyle = {\n      width: \"45%\",\n      maxHeight: \"50em\",\n      marginTop: \"3%\",\n      flexShrink: 1,\n      flexGrow: 1,\n      color: \"black\",\n      fontSize: \"1.6em\",\n      textAlign: \"center\",\n      padding: \"2%\",\n      borderRadius: \"50px\",\n      border: \"7px solid red\",\n      background: \"white\",\n      boxShadow: \"10px 10px 10px rgba(0, 0, 0, 0.45),-10px -10px 10px rgba(255, 255, 255, 0.45)\",\n      transitionDuration: \"0.3s\",\n      outline: \"none\"\n    };\n    this.state = {\n      imgRef: /*#__PURE__*/React.createRef(),\n      targetTimerSize: 0,\n      resizeObserver: new ResizeObserver(entries => {\n        for (const entry of entries) {\n          if (entry.target === this.state.imgRef.current) {\n            this.setState({\n              targetTimerSize: entry.contentRect.height - 12\n            });\n          }\n        }\n      }),\n      userAnswer: 7,\n      changeColor: 0,\n      sending: false\n    };\n  }\n\n  componentWillUnmount() {\n    this.state.resizeObserver.disconnect();\n    console.log(\"unmount\");\n  }\n\n  componentDidUpdate(Props) {\n    var _this$props$correctAn2;\n\n    if (this.state.userAnswer !== 7) {\n      var _this$props$correctAn;\n\n      console.log(\"changed\");\n      console.log((_this$props$correctAn = this.props.correctAnswer) === null || _this$props$correctAn === void 0 ? void 0 : _this$props$correctAn.correctAnswer);\n    }\n\n    if (((_this$props$correctAn2 = this.props.correctAnswer) === null || _this$props$correctAn2 === void 0 ? void 0 : _this$props$correctAn2.correctAnswer) !== undefined) {\n      var _this$props$correctAn3;\n\n      console.log(\"send\");\n\n      if (((_this$props$correctAn3 = this.props.correctAnswer) === null || _this$props$correctAn3 === void 0 ? void 0 : _this$props$correctAn3.correctAnswer) === this.state.userAnswer) {\n        this.Play(CorrectSound);\n        console.log(\"Correct\");\n      } else {\n        this.Play(WrongSound);\n        console.log(\"Wrong\");\n      }\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      id: style[\"background-wrapper\"],\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        id: style[\"Grid-wrapper\"],\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          id: style[\"left\"],\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            id: style[\"left-inline\"],\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              id: style[\"back-box\"],\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                id: style[\"back-button\"],\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  id: style[\"arrow-left\"]\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 168,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: \"Back\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 169,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 167,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                id: style[\"left-flex\"],\n                children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                  id: style[\"question-content\"],\n                  children: this.props.questionInfo.question\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 172,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  id: style[\"left-icon-box\"],\n                  children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                    id: style[\"question-icon1\"],\n                    children: \"Answer\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 176,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                    id: style[\"question-icon2\"],\n                    children: \"Answer\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 177,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 175,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  id: style[\"question-text\"],\n                  children: \"Click to choose the answer\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 179,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 171,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 166,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 165,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          id: style[\"right\"],\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            id: style[\"right-timer-box\"],\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              id: style[\"right-timer-background-wrapper\"],\n              children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                ref: this.state.imgRef,\n                id: style[\"right-timer-background\"],\n                src: TimerBack,\n                alt: \"I am\",\n                onLoad: e => this.state.resizeObserver.observe(e.currentTarget)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 188,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(RoundTimer, {\n                id: style[\"timer-background-wrapper\"],\n                time: this.props.questionInfo.timeLimit,\n                timerSize: this.state.targetTimerSize - 60\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 197,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 187,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 186,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            id: style[\"muti-wrapper\"],\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [this.props.questionInfo.type === \"multiple_choice\" ? this.props.questionInfo.choices : this.props.questionInfo.choices, /*#__PURE__*/_jsxDEV(MCModule, {\n                connection: this.props.connection,\n                currentQuestionProps: this.props.currentQuestionProps,\n                questionInfo: this.props.questionInfo.type === \"multiple_choice\" ? this.props.questionInfo : this.props.questionInfo,\n                onAnswerSelected: e => {\n                  this.setState({\n                    userAnswer: e\n                  }, () => {\n                    this.props.connection.send({\n                      method: \"req\",\n                      type: \"answer_question\",\n                      payload: {\n                        choice: this.state.userAnswer,\n                        currentQuestionCheck: this.props.currentQuestionProps\n                      }\n                    });\n                  });\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 217,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 207,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 206,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nAnsweringModule.defaultProps = {\n  question: \"2 x 2 = ?\",\n  choices: [\"What time is it? dasfadsadsfasdffhjkhjkjkhjklhjg\", \"What time is it? dasfadsadsfasdffhjkhjkjkhjklhjg\", \"What time is it? dasfadsadsfasdffhjkhjkjkhjklhjg\", \"What time is it? dasfadsadsfasdffhjkhjkjkhjklhjg\", \"What time is it? dasfadsadsfasdffhjkhjkjkhjklhjg\", \"What time is it? dasfadsadsfasdffhjkhjkjkhjklhjg\"],\n  timeLimit: 120,\n  correctAnswer: 0\n};\nexport default AnsweringModule;","map":{"version":3,"sources":["/Users/mac/Desktop/Nako/nako/src/desktop/AnsweringMC/answeringModule.tsx"],"names":["React","style","RoundTimer","CorrectSound","WrongSound","MCModule","AnsweringModule","Component","constructor","props","Play","music","audio","Audio","play","Classify","e","type","choices","normalAnswerStyle","width","maxHeight","marginTop","flexShrink","flexGrow","color","fontSize","textAlign","padding","borderRadius","border","background","boxShadow","transitionDuration","outline","correctAnswerStyle","wrongAnswerStyle","state","imgRef","createRef","targetTimerSize","resizeObserver","ResizeObserver","entries","entry","target","current","setState","contentRect","height","userAnswer","changeColor","sending","componentWillUnmount","disconnect","console","log","componentDidUpdate","Props","correctAnswer","undefined","render","questionInfo","question","TimerBack","observe","currentTarget","timeLimit","connection","currentQuestionProps","send","method","payload","choice","currentQuestionCheck","defaultProps"],"mappings":";AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AAEA,OAAOC,KAAP,MAAkB,2BAAlB;AACA,OAAOC,UAAP,MAAuB,0BAAvB;;AASA,OAAOC,YAAP,MAAyB,oBAAzB;AACA,OAAOC,UAAP,MAAuB,iBAAvB;AACA,OAAOC,QAAP,MAAqB,wBAArB;;;AAoBA,MAAMC,eAAN,SAA8BN,KAAK,CAACO,SAApC,CAA4D;AAe1DC,EAAAA,WAAW,CAACC,KAAD,EAAe;AACxB,UAAMA,KAAN;;AADwB,SAwC1BC,IAxC0B,GAwClBC,KAAD,IAAmB;AACxB,UAAIC,KAAK,GAAG,IAAIC,KAAJ,CAAUF,KAAV,CAAZ;AACAC,MAAAA,KAAK,CAACE,IAAN;AACD,KA3CyB;;AAAA,SA6C1BC,QA7C0B,GA6CdC,CAAD,IAA+B;AACxC,UAAIA,CAAC,CAACC,IAAF,KAAW,iBAAf,EAAkC;AAChC,eAAOD,CAAC,CAACE,OAAT;AACD;AACF,KAjDyB;;AAAA,SAoD1BC,iBApD0B,GAoDU;AAClCC,MAAAA,KAAK,EAAE,KAD2B;AAElCC,MAAAA,SAAS,EAAE,MAFuB;AAGlCC,MAAAA,SAAS,EAAE,IAHuB;AAIlCC,MAAAA,UAAU,EAAE,CAJsB;AAKlCC,MAAAA,QAAQ,EAAE,CALwB;AAMlCC,MAAAA,KAAK,EAAE,OAN2B;AAOlCC,MAAAA,QAAQ,EAAE,OAPwB;AAQlCC,MAAAA,SAAS,EAAE,QARuB;AASlCC,MAAAA,OAAO,EAAE,IATyB;AAUlCC,MAAAA,YAAY,EAAE,MAVoB;AAWlCC,MAAAA,MAAM,EAAE,mBAX0B;AAYlCC,MAAAA,UAAU,EAAE,OAZsB;AAalCC,MAAAA,SAAS,EACP,+EAdgC;AAelCC,MAAAA,kBAAkB,EAAE,MAfc;AAgBlCC,MAAAA,OAAO,EAAE;AAhByB,KApDV;AAAA,SAuE1BC,kBAvE0B,GAuEW;AACnCf,MAAAA,KAAK,EAAE,KAD4B;AAEnCC,MAAAA,SAAS,EAAE,MAFwB;AAGnCC,MAAAA,SAAS,EAAE,IAHwB;AAInCC,MAAAA,UAAU,EAAE,CAJuB;AAKnCC,MAAAA,QAAQ,EAAE,CALyB;AAMnCC,MAAAA,KAAK,EAAE,OAN4B;AAOnCC,MAAAA,QAAQ,EAAE,OAPyB;AAQnCC,MAAAA,SAAS,EAAE,QARwB;AASnCC,MAAAA,OAAO,EAAE,IAT0B;AAUnCC,MAAAA,YAAY,EAAE,MAVqB;AAWnCC,MAAAA,MAAM,EAAE,iBAX2B;AAYnCC,MAAAA,UAAU,EAAE,OAZuB;AAanCC,MAAAA,SAAS,EACP,+EAdiC;AAenCC,MAAAA,kBAAkB,EAAE,MAfe;AAgBnCC,MAAAA,OAAO,EAAE;AAhB0B,KAvEX;AAAA,SA0F1BE,gBA1F0B,GA0FS;AACjChB,MAAAA,KAAK,EAAE,KAD0B;AAEjCC,MAAAA,SAAS,EAAE,MAFsB;AAGjCC,MAAAA,SAAS,EAAE,IAHsB;AAIjCC,MAAAA,UAAU,EAAE,CAJqB;AAKjCC,MAAAA,QAAQ,EAAE,CALuB;AAMjCC,MAAAA,KAAK,EAAE,OAN0B;AAOjCC,MAAAA,QAAQ,EAAE,OAPuB;AAQjCC,MAAAA,SAAS,EAAE,QARsB;AASjCC,MAAAA,OAAO,EAAE,IATwB;AAUjCC,MAAAA,YAAY,EAAE,MAVmB;AAWjCC,MAAAA,MAAM,EAAE,eAXyB;AAYjCC,MAAAA,UAAU,EAAE,OAZqB;AAajCC,MAAAA,SAAS,EACP,+EAd+B;AAejCC,MAAAA,kBAAkB,EAAE,MAfa;AAgBjCC,MAAAA,OAAO,EAAE;AAhBwB,KA1FT;AAExB,SAAKG,KAAL,GAAa;AACXC,MAAAA,MAAM,eAAEtC,KAAK,CAACuC,SAAN,EADG;AAEXC,MAAAA,eAAe,EAAE,CAFN;AAGXC,MAAAA,cAAc,EAAE,IAAIC,cAAJ,CAAoBC,OAAD,IAAa;AAC9C,aAAK,MAAMC,KAAX,IAAoBD,OAApB,EAA6B;AAC3B,cAAIC,KAAK,CAACC,MAAN,KAAiB,KAAKR,KAAL,CAAWC,MAAX,CAAkBQ,OAAvC,EAAgD;AAC9C,iBAAKC,QAAL,CAAc;AAAEP,cAAAA,eAAe,EAAEI,KAAK,CAACI,WAAN,CAAkBC,MAAlB,GAA2B;AAA9C,aAAd;AACD;AACF;AACF,OANe,CAHL;AAUXC,MAAAA,UAAU,EAAE,CAVD;AAWXC,MAAAA,WAAW,EAAE,CAXF;AAYXC,MAAAA,OAAO,EAAE;AAZE,KAAb;AAcD;;AAEDC,EAAAA,oBAAoB,GAAG;AACrB,SAAKhB,KAAL,CAAWI,cAAX,CAA0Ba,UAA1B;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ;AACD;;AAEDC,EAAAA,kBAAkB,CAACC,KAAD,EAAe;AAAA;;AAC/B,QAAI,KAAKrB,KAAL,CAAWa,UAAX,KAA0B,CAA9B,EAAiC;AAAA;;AAC/BK,MAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ;AACAD,MAAAA,OAAO,CAACC,GAAR,0BAAY,KAAK/C,KAAL,CAAWkD,aAAvB,0DAAY,sBAA0BA,aAAtC;AACD;;AACD,QAAI,gCAAKlD,KAAL,CAAWkD,aAAX,kFAA0BA,aAA1B,MAA4CC,SAAhD,EAA2D;AAAA;;AACzDL,MAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ;;AACA,UAAI,gCAAK/C,KAAL,CAAWkD,aAAX,kFAA0BA,aAA1B,MAA4C,KAAKtB,KAAL,CAAWa,UAA3D,EAAuE;AACrE,aAAKxC,IAAL,CAAUP,YAAV;AACAoD,QAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ;AACD,OAHD,MAGO;AACL,aAAK9C,IAAL,CAAUN,UAAV;AACAmD,QAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ;AACD;AACF;AACF;;AAuEDK,EAAAA,MAAM,GAAG;AACP,wBACE;AAAK,MAAA,EAAE,EAAE5D,KAAK,CAAC,oBAAD,CAAd;AAAA,6BACE;AAAK,QAAA,EAAE,EAAEA,KAAK,CAAC,cAAD,CAAd;AAAA,gCAEE;AAAK,UAAA,EAAE,EAAEA,KAAK,CAAC,MAAD,CAAd;AAAA,iCACE;AAAK,YAAA,EAAE,EAAEA,KAAK,CAAC,aAAD,CAAd;AAAA,mCACE;AAAK,cAAA,EAAE,EAAEA,KAAK,CAAC,UAAD,CAAd;AAAA,sCACE;AAAQ,gBAAA,EAAE,EAAEA,KAAK,CAAC,aAAD,CAAjB;AAAA,wCACE;AAAM,kBAAA,EAAE,EAAEA,KAAK,CAAC,YAAD;AAAf;AAAA;AAAA;AAAA;AAAA,wBADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,eAKE;AAAK,gBAAA,EAAE,EAAEA,KAAK,CAAC,WAAD,CAAd;AAAA,wCACE;AAAG,kBAAA,EAAE,EAAEA,KAAK,CAAC,kBAAD,CAAZ;AAAA,4BACG,KAAKQ,KAAL,CAAWqD,YAAX,CAAwBC;AAD3B;AAAA;AAAA;AAAA;AAAA,wBADF,eAIE;AAAK,kBAAA,EAAE,EAAE9D,KAAK,CAAC,eAAD,CAAd;AAAA,0CACE;AAAG,oBAAA,EAAE,EAAEA,KAAK,CAAC,gBAAD,CAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADF,eAEE;AAAG,oBAAA,EAAE,EAAEA,KAAK,CAAC,gBAAD,CAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAFF;AAAA;AAAA;AAAA;AAAA;AAAA,wBAJF,eAQE;AAAG,kBAAA,EAAE,EAAEA,KAAK,CAAC,eAAD,CAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBARF;AAAA;AAAA;AAAA;AAAA;AAAA,sBALF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBAFF,eAuBE;AAAK,UAAA,EAAE,EAAEA,KAAK,CAAC,OAAD,CAAd;AAAA,kCACE;AAAK,YAAA,EAAE,EAAEA,KAAK,CAAC,iBAAD,CAAd;AAAA,mCACE;AAAK,cAAA,EAAE,EAAEA,KAAK,CAAC,gCAAD,CAAd;AAAA,sCACE;AACE,gBAAA,GAAG,EAAE,KAAKoC,KAAL,CAAWC,MADlB;AAEE,gBAAA,EAAE,EAAErC,KAAK,CAAC,wBAAD,CAFX;AAGE,gBAAA,GAAG,EAAE+D,SAHP;AAIE,gBAAA,GAAG,EAAC,MAJN;AAKE,gBAAA,MAAM,EAAGhD,CAAD,IACN,KAAKqB,KAAL,CAAWI,cAAX,CAA0BwB,OAA1B,CAAkCjD,CAAC,CAACkD,aAApC;AANJ;AAAA;AAAA;AAAA;AAAA,sBADF,eAUE,QAAC,UAAD;AACE,gBAAA,EAAE,EAAEjE,KAAK,CAAC,0BAAD,CADX;AAEE,gBAAA,IAAI,EAAE,KAAKQ,KAAL,CAAWqD,YAAX,CAAwBK,SAFhC;AAGE,gBAAA,SAAS,EAAE,KAAK9B,KAAL,CAAWG,eAAX,GAA6B;AAH1C;AAAA;AAAA;AAAA;AAAA,sBAVF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBADF,eAqBE;AAAK,YAAA,EAAE,EAAEvC,KAAK,CAAC,cAAD,CAAd;AAAA,mCACE;AAAA,yBACG,KAAKQ,KAAL,CAAWqD,YAAX,CAAwB7C,IAAxB,KAAiC,iBAAjC,GACI,KAAKR,KAAL,CAAWqD,YAAZ,CAGG5C,OAJN,GAKI,KAAKT,KAAL,CAAWqD,YAAZ,CAGG5C,OATT,eAUE,QAAC,QAAD;AACE,gBAAA,UAAU,EAAE,KAAKT,KAAL,CAAW2D,UADzB;AAEE,gBAAA,oBAAoB,EAAE,KAAK3D,KAAL,CAAW4D,oBAFnC;AAGE,gBAAA,YAAY,EACV,KAAK5D,KAAL,CAAWqD,YAAX,CAAwB7C,IAAxB,KAAiC,iBAAjC,GACK,KAAKR,KAAL,CAAWqD,YADhB,GAKK,KAAKrD,KAAL,CAAWqD,YATpB;AAcE,gBAAA,gBAAgB,EAAG9C,CAAD,IAAO;AACvB,uBAAK+B,QAAL,CAAc;AAAEG,oBAAAA,UAAU,EAAElC;AAAd,mBAAd,EAAiC,MAAM;AACrC,yBAAKP,KAAL,CAAW2D,UAAX,CAAsBE,IAAtB,CAA2B;AACzBC,sBAAAA,MAAM,EAAE,KADiB;AAEzBtD,sBAAAA,IAAI,EAAE,iBAFmB;AAGzBuD,sBAAAA,OAAO,EAAE;AACPC,wBAAAA,MAAM,EAAE,KAAKpC,KAAL,CAAWa,UADZ;AAEPwB,wBAAAA,oBAAoB,EAAE,KAAKjE,KAAL,CAAW4D;AAF1B;AAHgB,qBAA3B;AAQD,mBATD;AAUD;AAzBH;AAAA;AAAA;AAAA;AAAA,sBAVF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBArBF;AAAA;AAAA;AAAA;AAAA;AAAA,gBAvBF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF;AA2FD;;AAxNyD;;AAAtD/D,e,CACGqE,Y,GAAe;AACpBZ,EAAAA,QAAQ,EAAE,WADU;AAEpB7C,EAAAA,OAAO,EAAE,CACP,kDADO,EAEP,kDAFO,EAGP,kDAHO,EAIP,kDAJO,EAKP,kDALO,EAMP,kDANO,CAFW;AAUpBiD,EAAAA,SAAS,EAAE,GAVS;AAWpBR,EAAAA,aAAa,EAAE;AAXK,C;AA0NxB,eAAerD,eAAf","sourcesContent":["import * as React from \"react\";\nimport CSS from \"csstype\";\nimport style from \"./AnsweringMC.module.scss\";\nimport RoundTimer from \"../RoundTimer/RoundTimer\";\nimport TimerBack from \"./Group_818.svg\";\nimport NakoAPI, {\n  QuestionInfo,\n  QuestionEndRequest,\n  Question,\n  QuestionType,\n  MultipleChoiceQuestion,\n} from \"../../modules/websocket-messages\";\nimport CorrectSound from \"./Nako Correct.wav\";\nimport WrongSound from \"./Nako Fail.wav\";\nimport MCModule from \"./MultipleChoiceModule\";\nimport { AccountInfo } from \"../../modules/account-info\";\n\nexport interface Props {\n  correctAnswer?: QuestionEndRequest;\n  connection: NakoAPI;\n  questionInfo: QuestionInfo<\"student\", Question<QuestionType>>;\n  currentQuestionProps: number;\n  timing?: (fn: () => void) => void;\n}\n\ninterface State {\n  imgRef: React.RefObject<HTMLImageElement>;\n  targetTimerSize: number;\n  resizeObserver: ResizeObserver;\n  userAnswer: number;\n  changeColor: number;\n  sending: boolean;\n}\n\nclass AnsweringModule extends React.Component<Props, State> {\n  static defaultProps = {\n    question: \"2 x 2 = ?\",\n    choices: [\n      \"What time is it? dasfadsadsfasdffhjkhjkjkhjklhjg\",\n      \"What time is it? dasfadsadsfasdffhjkhjkjkhjklhjg\",\n      \"What time is it? dasfadsadsfasdffhjkhjkjkhjklhjg\",\n      \"What time is it? dasfadsadsfasdffhjkhjkjkhjklhjg\",\n      \"What time is it? dasfadsadsfasdffhjkhjkjkhjklhjg\",\n      \"What time is it? dasfadsadsfasdffhjkhjkjkhjklhjg\",\n    ],\n    timeLimit: 120,\n    correctAnswer: 0,\n  };\n\n  constructor(props: Props) {\n    super(props);\n    this.state = {\n      imgRef: React.createRef<HTMLImageElement>(),\n      targetTimerSize: 0,\n      resizeObserver: new ResizeObserver((entries) => {\n        for (const entry of entries) {\n          if (entry.target === this.state.imgRef.current) {\n            this.setState({ targetTimerSize: entry.contentRect.height - 12 });\n          }\n        }\n      }),\n      userAnswer: 7,\n      changeColor: 0,\n      sending: false,\n    };\n  }\n\n  componentWillUnmount() {\n    this.state.resizeObserver.disconnect();\n    console.log(\"unmount\");\n  }\n\n  componentDidUpdate(Props: Props) {\n    if (this.state.userAnswer !== 7) {\n      console.log(\"changed\");\n      console.log(this.props.correctAnswer?.correctAnswer);\n    }\n    if (this.props.correctAnswer?.correctAnswer !== undefined) {\n      console.log(\"send\");\n      if (this.props.correctAnswer?.correctAnswer === this.state.userAnswer) {\n        this.Play(CorrectSound);\n        console.log(\"Correct\");\n      } else {\n        this.Play(WrongSound);\n        console.log(\"Wrong\");\n      }\n    }\n  }\n\n  Play = (music: string) => {\n    let audio = new Audio(music);\n    audio.play();\n  };\n\n  Classify = (e: Question<QuestionType>) => {\n    if (e.type === \"multiple_choice\") {\n      return e.choices;\n    }\n  };\n\n  // correctAnswer = (e: number) => {};\n  normalAnswerStyle: CSS.Properties = {\n    width: \"45%\",\n    maxHeight: \"50em\",\n    marginTop: \"3%\",\n    flexShrink: 1,\n    flexGrow: 1,\n    color: \"black\",\n    fontSize: \"1.6em\",\n    textAlign: \"center\",\n    padding: \"2%\",\n    borderRadius: \"50px\",\n    border: \"7px solid #4ed02c\",\n    background: \"white\",\n    boxShadow:\n      \"10px 10px 10px rgba(0, 0, 0, 0.45),-10px -10px 10px rgba(255, 255, 255, 0.45)\",\n    transitionDuration: \"0.3s\",\n    outline: \"none\",\n  };\n\n  correctAnswerStyle: CSS.Properties = {\n    width: \"45%\",\n    maxHeight: \"50em\",\n    marginTop: \"3%\",\n    flexShrink: 1,\n    flexGrow: 1,\n    color: \"black\",\n    fontSize: \"1.6em\",\n    textAlign: \"center\",\n    padding: \"2%\",\n    borderRadius: \"50px\",\n    border: \"7px solid black\",\n    background: \"white\",\n    boxShadow:\n      \"10px 10px 10px rgba(0, 0, 0, 0.45),-10px -10px 10px rgba(255, 255, 255, 0.45)\",\n    transitionDuration: \"0.3s\",\n    outline: \"none\",\n  };\n\n  wrongAnswerStyle: CSS.Properties = {\n    width: \"45%\",\n    maxHeight: \"50em\",\n    marginTop: \"3%\",\n    flexShrink: 1,\n    flexGrow: 1,\n    color: \"black\",\n    fontSize: \"1.6em\",\n    textAlign: \"center\",\n    padding: \"2%\",\n    borderRadius: \"50px\",\n    border: \"7px solid red\",\n    background: \"white\",\n    boxShadow:\n      \"10px 10px 10px rgba(0, 0, 0, 0.45),-10px -10px 10px rgba(255, 255, 255, 0.45)\",\n    transitionDuration: \"0.3s\",\n    outline: \"none\",\n  };\n\n  render() {\n    return (\n      <div id={style[\"background-wrapper\"]}>\n        <div id={style[\"Grid-wrapper\"]}>\n          {/*The left grid*/}\n          <div id={style[\"left\"]}>\n            <div id={style[\"left-inline\"]}>\n              <div id={style[\"back-box\"]}>\n                <button id={style[\"back-button\"]}>\n                  <span id={style[\"arrow-left\"]} />\n                  <span>Back</span>\n                </button>\n                <div id={style[\"left-flex\"]}>\n                  <p id={style[\"question-content\"]}>\n                    {this.props.questionInfo.question}\n                  </p>\n                  <div id={style[\"left-icon-box\"]}>\n                    <p id={style[\"question-icon1\"]}>Answer</p>\n                    <p id={style[\"question-icon2\"]}>Answer</p>\n                  </div>\n                  <p id={style[\"question-text\"]}>Click to choose the answer</p>\n                </div>\n              </div>\n            </div>\n          </div>\n          {/*The right grid*/}\n          <div id={style[\"right\"]}>\n            <div id={style[\"right-timer-box\"]}>\n              <div id={style[\"right-timer-background-wrapper\"]}>\n                <img\n                  ref={this.state.imgRef}\n                  id={style[\"right-timer-background\"]}\n                  src={TimerBack}\n                  alt=\"I am\"\n                  onLoad={(e) =>\n                    this.state.resizeObserver.observe(e.currentTarget)\n                  }\n                />\n                <RoundTimer\n                  id={style[\"timer-background-wrapper\"]}\n                  time={this.props.questionInfo.timeLimit}\n                  timerSize={this.state.targetTimerSize - 60}\n                />\n              </div>\n              {/* <div id=\"AnsweringMC-Timer\">\n                </div> */}\n            </div>\n            <div id={style[\"muti-wrapper\"]}>\n              <div>\n                {this.props.questionInfo.type === \"multiple_choice\"\n                  ? (this.props.questionInfo as QuestionInfo<\n                      \"student\",\n                      Question<\"multiple_choice\">\n                    >).choices\n                  : (this.props.questionInfo as QuestionInfo<\n                      \"student\",\n                      Question<\"multiple_choice\">\n                    >).choices}\n                <MCModule\n                  connection={this.props.connection}\n                  currentQuestionProps={this.props.currentQuestionProps}\n                  questionInfo={\n                    this.props.questionInfo.type === \"multiple_choice\"\n                      ? (this.props.questionInfo as QuestionInfo<\n                          \"student\",\n                          Question<\"multiple_choice\">\n                        >)\n                      : (this.props.questionInfo as QuestionInfo<\n                          \"student\",\n                          Question<\"multiple_choice\">\n                        >)\n                  }\n                  onAnswerSelected={(e) => {\n                    this.setState({ userAnswer: e }, () => {\n                      this.props.connection.send({\n                        method: \"req\",\n                        type: \"answer_question\",\n                        payload: {\n                          choice: this.state.userAnswer,\n                          currentQuestionCheck: this.props.currentQuestionProps,\n                        },\n                      });\n                    });\n                  }}\n                />\n              </div>\n            </div>\n          </div>\n        </div>\n        {/* <div id=\"warn\">content: \"mobile not supported yet\";</div> */}\n      </div>\n    );\n  }\n}\n\nexport default AnsweringModule;\n"]},"metadata":{},"sourceType":"module"}